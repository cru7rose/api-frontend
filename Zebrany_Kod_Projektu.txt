
================================================================================
### PLIK: index.html
================================================================================

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Vite + Vue</title>
  </head>
  <body>
    <div id="app"></div>
    <script type="module" src="/src/main.js"></script>
  </body>
</html>


================================================================================
### PLIK: package-lock.json
================================================================================

{
  "name": "api-frontend",
  "version": "0.0.0",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {
    "": {
      "name": "api-frontend",
      "version": "0.0.0",
      "dependencies": {
        "@heroicons/vue": "^2.2.0",
        "@tailwindcss/cli": "^4.1.7",
        "axios": "^1.9.0",
        "lodash-es": "^4.17.21",
        "pinia": "^3.0.2",
        "vue": "^3.5.13",
        "vue-router": "^4.5.1"
      },
      "devDependencies": {
        "@vitejs/plugin-vue": "^5.2.3",
        "autoprefixer": "^10.4.21",
        "postcss": "^8.5.3",
        "tailwindcss": "^3.4.17",
        "vite": "^6.3.5"
      }
    },
    "node_modules/@alloc/quick-lru": {
      "version": "5.2.0",
      "resolved": "https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz",
      "integrity": "sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/@ampproject/remapping": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz",
      "integrity": "sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==",
      "license": "Apache-2.0",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.5",
        "@jridgewell/trace-mapping": "^0.3.24"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/helper-string-parser": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgz",
      "integrity": "sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA==",
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/helper-validator-identifier": {
      "version": "7.27.1",
      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.27.1.tgz",
      "integrity": "sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==",
      "license": "MIT",
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@babel/parser": {
      "version": "7.27.3",
      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.27.3.tgz",
      "integrity": "sha512-xyYxRj6+tLNDTWi0KCBcZ9V7yg3/lwL9DWh9Uwh/RIVlIfFidggcgxKX3GCXwCiswwcGRawBKbEg2LG/Y8eJhw==",
      "license": "MIT",
      "dependencies": {
        "@babel/types": "^7.27.3"
      },
      "bin": {
        "parser": "bin/babel-parser.js"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@babel/types": {
      "version": "7.27.3",
      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.27.3.tgz",
      "integrity": "sha512-Y1GkI4ktrtvmawoSq+4FCVHNryea6uR+qUQy0AGxLSsjCX0nVmkYQMBLHDkXZuo5hGx7eYdnIaslsdBFm7zbUw==",
      "license": "MIT",
      "dependencies": {
        "@babel/helper-string-parser": "^7.27.1",
        "@babel/helper-validator-identifier": "^7.27.1"
      },
      "engines": {
        "node": ">=6.9.0"
      }
    },
    "node_modules/@esbuild/aix-ppc64": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.25.5.tgz",
      "integrity": "sha512-9o3TMmpmftaCMepOdA5k/yDw8SfInyzWWTjYTFCX3kPSDJMROQTb8jg+h9Cnwnmm1vOzvxN7gIfB5V2ewpjtGA==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "aix"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-arm": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.25.5.tgz",
      "integrity": "sha512-AdJKSPeEHgi7/ZhuIPtcQKr5RQdo6OO2IL87JkianiMYMPbCtot9fxPbrMiBADOWWm3T2si9stAiVsGbTQFkbA==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-arm64": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.25.5.tgz",
      "integrity": "sha512-VGzGhj4lJO+TVGV1v8ntCZWJktV7SGCs3Pn1GRWI1SBFtRALoomm8k5E9Pmwg3HOAal2VDc2F9+PM/rEY6oIDg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/android-x64": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.25.5.tgz",
      "integrity": "sha512-D2GyJT1kjvO//drbRT3Hib9XPwQeWd9vZoBJn+bu/lVsOZ13cqNdDeqIF/xQ5/VmWvMduP6AmXvylO/PIc2isw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/darwin-arm64": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.25.5.tgz",
      "integrity": "sha512-GtaBgammVvdF7aPIgH2jxMDdivezgFu6iKpmT+48+F8Hhg5J/sfnDieg0aeG/jfSvkYQU2/pceFPDKlqZzwnfQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/darwin-x64": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.25.5.tgz",
      "integrity": "sha512-1iT4FVL0dJ76/q1wd7XDsXrSW+oLoquptvh4CLR4kITDtqi2e/xwXwdCVH8hVHU43wgJdsq7Gxuzcs6Iq/7bxQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/freebsd-arm64": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.25.5.tgz",
      "integrity": "sha512-nk4tGP3JThz4La38Uy/gzyXtpkPW8zSAmoUhK9xKKXdBCzKODMc2adkB2+8om9BDYugz+uGV7sLmpTYzvmz6Sw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/freebsd-x64": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.25.5.tgz",
      "integrity": "sha512-PrikaNjiXdR2laW6OIjlbeuCPrPaAl0IwPIaRv+SMV8CiM8i2LqVUHFC1+8eORgWyY7yhQY+2U2fA55mBzReaw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-arm": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.25.5.tgz",
      "integrity": "sha512-cPzojwW2okgh7ZlRpcBEtsX7WBuqbLrNXqLU89GxWbNt6uIg78ET82qifUy3W6OVww6ZWobWub5oqZOVtwolfw==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-arm64": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.25.5.tgz",
      "integrity": "sha512-Z9kfb1v6ZlGbWj8EJk9T6czVEjjq2ntSYLY2cw6pAZl4oKtfgQuS4HOq41M/BcoLPzrUbNd+R4BXFyH//nHxVg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-ia32": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.25.5.tgz",
      "integrity": "sha512-sQ7l00M8bSv36GLV95BVAdhJ2QsIbCuCjh/uYrWiMQSUuV+LpXwIqhgJDcvMTj+VsQmqAHL2yYaasENvJ7CDKA==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-loong64": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.25.5.tgz",
      "integrity": "sha512-0ur7ae16hDUC4OL5iEnDb0tZHDxYmuQyhKhsPBV8f99f6Z9KQM02g33f93rNH5A30agMS46u2HP6qTdEt6Q1kg==",
      "cpu": [
        "loong64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-mips64el": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.25.5.tgz",
      "integrity": "sha512-kB/66P1OsHO5zLz0i6X0RxlQ+3cu0mkxS3TKFvkb5lin6uwZ/ttOkP3Z8lfR9mJOBk14ZwZ9182SIIWFGNmqmg==",
      "cpu": [
        "mips64el"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-ppc64": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.25.5.tgz",
      "integrity": "sha512-UZCmJ7r9X2fe2D6jBmkLBMQetXPXIsZjQJCjgwpVDz+YMcS6oFR27alkgGv3Oqkv07bxdvw7fyB71/olceJhkQ==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-riscv64": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.25.5.tgz",
      "integrity": "sha512-kTxwu4mLyeOlsVIFPfQo+fQJAV9mh24xL+y+Bm6ej067sYANjyEw1dNHmvoqxJUCMnkBdKpvOn0Ahql6+4VyeA==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-s390x": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.25.5.tgz",
      "integrity": "sha512-K2dSKTKfmdh78uJ3NcWFiqyRrimfdinS5ErLSn3vluHNeHVnBAFWC8a4X5N+7FgVE1EjXS1QDZbpqZBjfrqMTQ==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/linux-x64": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.25.5.tgz",
      "integrity": "sha512-uhj8N2obKTE6pSZ+aMUbqq+1nXxNjZIIjCjGLfsWvVpy7gKCOL6rsY1MhRh9zLtUtAI7vpgLMK6DxjO8Qm9lJw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/netbsd-arm64": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-arm64/-/netbsd-arm64-0.25.5.tgz",
      "integrity": "sha512-pwHtMP9viAy1oHPvgxtOv+OkduK5ugofNTVDilIzBLpoWAM16r7b/mxBvfpuQDpRQFMfuVr5aLcn4yveGvBZvw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/netbsd-x64": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.25.5.tgz",
      "integrity": "sha512-WOb5fKrvVTRMfWFNCroYWWklbnXH0Q5rZppjq0vQIdlsQKuw6mdSihwSo4RV/YdQ5UCKKvBy7/0ZZYLBZKIbwQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "netbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/openbsd-arm64": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-arm64/-/openbsd-arm64-0.25.5.tgz",
      "integrity": "sha512-7A208+uQKgTxHd0G0uqZO8UjK2R0DDb4fDmERtARjSHWxqMTye4Erz4zZafx7Di9Cv+lNHYuncAkiGFySoD+Mw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/openbsd-x64": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.25.5.tgz",
      "integrity": "sha512-G4hE405ErTWraiZ8UiSoesH8DaCsMm0Cay4fsFWOOUcz8b8rC6uCvnagr+gnioEjWn0wC+o1/TAHt+It+MpIMg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "openbsd"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/sunos-x64": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.25.5.tgz",
      "integrity": "sha512-l+azKShMy7FxzY0Rj4RCt5VD/q8mG/e+mDivgspo+yL8zW7qEwctQ6YqKX34DTEleFAvCIUviCFX1SDZRSyMQA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "sunos"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-arm64": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.25.5.tgz",
      "integrity": "sha512-O2S7SNZzdcFG7eFKgvwUEZ2VG9D/sn/eIiz8XRZ1Q/DO5a3s76Xv0mdBzVM5j5R639lXQmPmSo0iRpHqUUrsxw==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-ia32": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.25.5.tgz",
      "integrity": "sha512-onOJ02pqs9h1iMJ1PQphR+VZv8qBMQ77Klcsqv9CNW2w6yLqoURLcgERAIurY6QE63bbLuqgP9ATqajFLK5AMQ==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@esbuild/win32-x64": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.25.5.tgz",
      "integrity": "sha512-TXv6YnJ8ZMVdX+SXWVBo/0p8LTcrUYngpWjvm91TMjjBQii7Oz11Lw5lbDV5Y0TzuhSJHwiH4hEtC1I42mMS0g==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/@heroicons/vue": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/@heroicons/vue/-/vue-2.2.0.tgz",
      "integrity": "sha512-G3dbSxoeEKqbi/DFalhRxJU4mTXJn7GwZ7ae8NuEQzd1bqdd0jAbdaBZlHPcvPD2xI1iGzNVB4k20Un2AguYPw==",
      "license": "MIT",
      "peerDependencies": {
        "vue": ">= 3"
      }
    },
    "node_modules/@isaacs/cliui": {
      "version": "8.0.2",
      "resolved": "https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz",
      "integrity": "sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "string-width": "^5.1.2",
        "string-width-cjs": "npm:string-width@^4.2.0",
        "strip-ansi": "^7.0.1",
        "strip-ansi-cjs": "npm:strip-ansi@^6.0.1",
        "wrap-ansi": "^8.1.0",
        "wrap-ansi-cjs": "npm:wrap-ansi@^7.0.0"
      },
      "engines": {
        "node": ">=12"
      }
    },
    "node_modules/@isaacs/fs-minipass": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/@isaacs/fs-minipass/-/fs-minipass-4.0.1.tgz",
      "integrity": "sha512-wgm9Ehl2jpeqP3zw/7mo3kRHFp5MEDhqAdwy1fTGkHAwnkGOVsgpvQhL8B5n1qlb01jV3n/bI0ZfZp5lWA1k4w==",
      "license": "ISC",
      "dependencies": {
        "minipass": "^7.0.4"
      },
      "engines": {
        "node": ">=18.0.0"
      }
    },
    "node_modules/@jridgewell/gen-mapping": {
      "version": "0.3.8",
      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.8.tgz",
      "integrity": "sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==",
      "license": "MIT",
      "dependencies": {
        "@jridgewell/set-array": "^1.2.1",
        "@jridgewell/sourcemap-codec": "^1.4.10",
        "@jridgewell/trace-mapping": "^0.3.24"
      },
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/resolve-uri": {
      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
      "license": "MIT",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/set-array": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.2.1.tgz",
      "integrity": "sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==",
      "license": "MIT",
      "engines": {
        "node": ">=6.0.0"
      }
    },
    "node_modules/@jridgewell/sourcemap-codec": {
      "version": "1.5.0",
      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz",
      "integrity": "sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==",
      "license": "MIT"
    },
    "node_modules/@jridgewell/trace-mapping": {
      "version": "0.3.25",
      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz",
      "integrity": "sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==",
      "license": "MIT",
      "dependencies": {
        "@jridgewell/resolve-uri": "^3.1.0",
        "@jridgewell/sourcemap-codec": "^1.4.14"
      }
    },
    "node_modules/@nodelib/fs.scandir": {
      "version": "2.1.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.stat": "2.0.5",
        "run-parallel": "^1.1.9"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.stat": {
      "version": "2.0.5",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@nodelib/fs.walk": {
      "version": "1.2.8",
      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.scandir": "2.1.5",
        "fastq": "^1.6.0"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/@parcel/watcher": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/@parcel/watcher/-/watcher-2.5.1.tgz",
      "integrity": "sha512-dfUnCxiN9H4ap84DvD2ubjw+3vUNpstxa0TneY/Paat8a3R4uQZDLSvWjmznAY/DoahqTHl9V46HF/Zs3F29pg==",
      "hasInstallScript": true,
      "license": "MIT",
      "dependencies": {
        "detect-libc": "^1.0.3",
        "is-glob": "^4.0.3",
        "micromatch": "^4.0.5",
        "node-addon-api": "^7.0.0"
      },
      "engines": {
        "node": ">= 10.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      },
      "optionalDependencies": {
        "@parcel/watcher-android-arm64": "2.5.1",
        "@parcel/watcher-darwin-arm64": "2.5.1",
        "@parcel/watcher-darwin-x64": "2.5.1",
        "@parcel/watcher-freebsd-x64": "2.5.1",
        "@parcel/watcher-linux-arm-glibc": "2.5.1",
        "@parcel/watcher-linux-arm-musl": "2.5.1",
        "@parcel/watcher-linux-arm64-glibc": "2.5.1",
        "@parcel/watcher-linux-arm64-musl": "2.5.1",
        "@parcel/watcher-linux-x64-glibc": "2.5.1",
        "@parcel/watcher-linux-x64-musl": "2.5.1",
        "@parcel/watcher-win32-arm64": "2.5.1",
        "@parcel/watcher-win32-ia32": "2.5.1",
        "@parcel/watcher-win32-x64": "2.5.1"
      }
    },
    "node_modules/@parcel/watcher-android-arm64": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/@parcel/watcher-android-arm64/-/watcher-android-arm64-2.5.1.tgz",
      "integrity": "sha512-KF8+j9nNbUN8vzOFDpRMsaKBHZ/mcjEjMToVMJOhTozkDonQFFrRcfdLWn6yWKCmJKmdVxSgHiYvTCef4/qcBA==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">= 10.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/watcher-darwin-arm64": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/@parcel/watcher-darwin-arm64/-/watcher-darwin-arm64-2.5.1.tgz",
      "integrity": "sha512-eAzPv5osDmZyBhou8PoF4i6RQXAfeKL9tjb3QzYuccXFMQU0ruIc/POh30ePnaOyD1UXdlKguHBmsTs53tVoPw==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/watcher-darwin-x64": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/@parcel/watcher-darwin-x64/-/watcher-darwin-x64-2.5.1.tgz",
      "integrity": "sha512-1ZXDthrnNmwv10A0/3AJNZ9JGlzrF82i3gNQcWOzd7nJ8aj+ILyW1MTxVk35Db0u91oD5Nlk9MBiujMlwmeXZg==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/watcher-freebsd-x64": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/@parcel/watcher-freebsd-x64/-/watcher-freebsd-x64-2.5.1.tgz",
      "integrity": "sha512-SI4eljM7Flp9yPuKi8W0ird8TI/JK6CSxju3NojVI6BjHsTyK7zxA9urjVjEKJ5MBYC+bLmMcbAWlZ+rFkLpJQ==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">= 10.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/watcher-linux-arm-glibc": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/@parcel/watcher-linux-arm-glibc/-/watcher-linux-arm-glibc-2.5.1.tgz",
      "integrity": "sha512-RCdZlEyTs8geyBkkcnPWvtXLY44BCeZKmGYRtSgtwwnHR4dxfHRG3gR99XdMEdQ7KeiDdasJwwvNSF5jKtDwdA==",
      "cpu": [
        "arm"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/watcher-linux-arm-musl": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/@parcel/watcher-linux-arm-musl/-/watcher-linux-arm-musl-2.5.1.tgz",
      "integrity": "sha512-6E+m/Mm1t1yhB8X412stiKFG3XykmgdIOqhjWj+VL8oHkKABfu/gjFj8DvLrYVHSBNC+/u5PeNrujiSQ1zwd1Q==",
      "cpu": [
        "arm"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/watcher-linux-arm64-glibc": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/@parcel/watcher-linux-arm64-glibc/-/watcher-linux-arm64-glibc-2.5.1.tgz",
      "integrity": "sha512-LrGp+f02yU3BN9A+DGuY3v3bmnFUggAITBGriZHUREfNEzZh/GO06FF5u2kx8x+GBEUYfyTGamol4j3m9ANe8w==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/watcher-linux-arm64-musl": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/@parcel/watcher-linux-arm64-musl/-/watcher-linux-arm64-musl-2.5.1.tgz",
      "integrity": "sha512-cFOjABi92pMYRXS7AcQv9/M1YuKRw8SZniCDw0ssQb/noPkRzA+HBDkwmyOJYp5wXcsTrhxO0zq1U11cK9jsFg==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/watcher-linux-x64-glibc": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/@parcel/watcher-linux-x64-glibc/-/watcher-linux-x64-glibc-2.5.1.tgz",
      "integrity": "sha512-GcESn8NZySmfwlTsIur+49yDqSny2IhPeZfXunQi48DMugKeZ7uy1FX83pO0X22sHntJ4Ub+9k34XQCX+oHt2A==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/watcher-linux-x64-musl": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/@parcel/watcher-linux-x64-musl/-/watcher-linux-x64-musl-2.5.1.tgz",
      "integrity": "sha512-n0E2EQbatQ3bXhcH2D1XIAANAcTZkQICBPVaxMeaCVBtOpBZpWJuf7LwyWPSBDITb7In8mqQgJ7gH8CILCURXg==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/watcher-win32-arm64": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/@parcel/watcher-win32-arm64/-/watcher-win32-arm64-2.5.1.tgz",
      "integrity": "sha512-RFzklRvmc3PkjKjry3hLF9wD7ppR4AKcWNzH7kXR7GUe0Igb3Nz8fyPwtZCSquGrhU5HhUNDr/mKBqj7tqA2Vw==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/watcher-win32-ia32": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/@parcel/watcher-win32-ia32/-/watcher-win32-ia32-2.5.1.tgz",
      "integrity": "sha512-c2KkcVN+NJmuA7CGlaGD1qJh1cLfDnQsHjE89E60vUEMlqduHGCdCLJCID5geFVM0dOtA3ZiIO8BoEQmzQVfpQ==",
      "cpu": [
        "ia32"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@parcel/watcher-win32-x64": {
      "version": "2.5.1",
      "resolved": "https://registry.npmjs.org/@parcel/watcher-win32-x64/-/watcher-win32-x64-2.5.1.tgz",
      "integrity": "sha512-9lHBdJITeNR++EvSQVUcaZoWupyHfXe1jZvGZ06O/5MflPcuPLtEphScIBL+AiCWBO46tDSHzWyD0uDmmZqsgA==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/@pkgjs/parseargs": {
      "version": "0.11.0",
      "resolved": "https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz",
      "integrity": "sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==",
      "dev": true,
      "license": "MIT",
      "optional": true,
      "engines": {
        "node": ">=14"
      }
    },
    "node_modules/@rollup/rollup-android-arm-eabi": {
      "version": "4.41.1",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.41.1.tgz",
      "integrity": "sha512-NELNvyEWZ6R9QMkiytB4/L4zSEaBC03KIXEghptLGLZWJ6VPrL63ooZQCOnlx36aQPGhzuOMwDerC1Eb2VmrLw==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@rollup/rollup-android-arm64": {
      "version": "4.41.1",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.41.1.tgz",
      "integrity": "sha512-DXdQe1BJ6TK47ukAoZLehRHhfKnKg9BjnQYUu9gzhI8Mwa1d2fzxA1aw2JixHVl403bwp1+/o/NhhHtxWJBgEA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ]
    },
    "node_modules/@rollup/rollup-darwin-arm64": {
      "version": "4.41.1",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.41.1.tgz",
      "integrity": "sha512-5afxvwszzdulsU2w8JKWwY8/sJOLPzf0e1bFuvcW5h9zsEg+RQAojdW0ux2zyYAz7R8HvvzKCjLNJhVq965U7w==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@rollup/rollup-darwin-x64": {
      "version": "4.41.1",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.41.1.tgz",
      "integrity": "sha512-egpJACny8QOdHNNMZKf8xY0Is6gIMz+tuqXlusxquWu3F833DcMwmGM7WlvCO9sB3OsPjdC4U0wHw5FabzCGZg==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ]
    },
    "node_modules/@rollup/rollup-freebsd-arm64": {
      "version": "4.41.1",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-arm64/-/rollup-freebsd-arm64-4.41.1.tgz",
      "integrity": "sha512-DBVMZH5vbjgRk3r0OzgjS38z+atlupJ7xfKIDJdZZL6sM6wjfDNo64aowcLPKIx7LMQi8vybB56uh1Ftck/Atg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ]
    },
    "node_modules/@rollup/rollup-freebsd-x64": {
      "version": "4.41.1",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-x64/-/rollup-freebsd-x64-4.41.1.tgz",
      "integrity": "sha512-3FkydeohozEskBxNWEIbPfOE0aqQgB6ttTkJ159uWOFn42VLyfAiyD9UK5mhu+ItWzft60DycIN1Xdgiy8o/SA==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm-gnueabihf": {
      "version": "4.41.1",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.41.1.tgz",
      "integrity": "sha512-wC53ZNDgt0pqx5xCAgNunkTzFE8GTgdZ9EwYGVcg+jEjJdZGtq9xPjDnFgfFozQI/Xm1mh+D9YlYtl+ueswNEg==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm-musleabihf": {
      "version": "4.41.1",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.41.1.tgz",
      "integrity": "sha512-jwKCca1gbZkZLhLRtsrka5N8sFAaxrGz/7wRJ8Wwvq3jug7toO21vWlViihG85ei7uJTpzbXZRcORotE+xyrLA==",
      "cpu": [
        "arm"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm64-gnu": {
      "version": "4.41.1",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.41.1.tgz",
      "integrity": "sha512-g0UBcNknsmmNQ8V2d/zD2P7WWfJKU0F1nu0k5pW4rvdb+BIqMm8ToluW/eeRmxCared5dD76lS04uL4UaNgpNA==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-arm64-musl": {
      "version": "4.41.1",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.41.1.tgz",
      "integrity": "sha512-XZpeGB5TKEZWzIrj7sXr+BEaSgo/ma/kCgrZgL0oo5qdB1JlTzIYQKel/RmhT6vMAvOdM2teYlAaOGJpJ9lahg==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-loongarch64-gnu": {
      "version": "4.41.1",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-loongarch64-gnu/-/rollup-linux-loongarch64-gnu-4.41.1.tgz",
      "integrity": "sha512-bkCfDJ4qzWfFRCNt5RVV4DOw6KEgFTUZi2r2RuYhGWC8WhCA8lCAJhDeAmrM/fdiAH54m0mA0Vk2FGRPyzI+tw==",
      "cpu": [
        "loong64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-powerpc64le-gnu": {
      "version": "4.41.1",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.41.1.tgz",
      "integrity": "sha512-3mr3Xm+gvMX+/8EKogIZSIEF0WUu0HL9di+YWlJpO8CQBnoLAEL/roTCxuLncEdgcfJcvA4UMOf+2dnjl4Ut1A==",
      "cpu": [
        "ppc64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-riscv64-gnu": {
      "version": "4.41.1",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.41.1.tgz",
      "integrity": "sha512-3rwCIh6MQ1LGrvKJitQjZFuQnT2wxfU+ivhNBzmxXTXPllewOF7JR1s2vMX/tWtUYFgphygxjqMl76q4aMotGw==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-riscv64-musl": {
      "version": "4.41.1",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-musl/-/rollup-linux-riscv64-musl-4.41.1.tgz",
      "integrity": "sha512-LdIUOb3gvfmpkgFZuccNa2uYiqtgZAz3PTzjuM5bH3nvuy9ty6RGc/Q0+HDFrHrizJGVpjnTZ1yS5TNNjFlklw==",
      "cpu": [
        "riscv64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-s390x-gnu": {
      "version": "4.41.1",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.41.1.tgz",
      "integrity": "sha512-oIE6M8WC9ma6xYqjvPhzZYk6NbobIURvP/lEbh7FWplcMO6gn7MM2yHKA1eC/GvYwzNKK/1LYgqzdkZ8YFxR8g==",
      "cpu": [
        "s390x"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-x64-gnu": {
      "version": "4.41.1",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.41.1.tgz",
      "integrity": "sha512-cWBOvayNvA+SyeQMp79BHPK8ws6sHSsYnK5zDcsC3Hsxr1dgTABKjMnMslPq1DvZIp6uO7kIWhiGwaTdR4Og9A==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-linux-x64-musl": {
      "version": "4.41.1",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.41.1.tgz",
      "integrity": "sha512-y5CbN44M+pUCdGDlZFzGGBSKCA4A/J2ZH4edTYSSxFg7ce1Xt3GtydbVKWLlzL+INfFIZAEg1ZV6hh9+QQf9YQ==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ]
    },
    "node_modules/@rollup/rollup-win32-arm64-msvc": {
      "version": "4.41.1",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.41.1.tgz",
      "integrity": "sha512-lZkCxIrjlJlMt1dLO/FbpZbzt6J/A8p4DnqzSa4PWqPEUUUnzXLeki/iyPLfV0BmHItlYgHUqJe+3KiyydmiNQ==",
      "cpu": [
        "arm64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@rollup/rollup-win32-ia32-msvc": {
      "version": "4.41.1",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.41.1.tgz",
      "integrity": "sha512-+psFT9+pIh2iuGsxFYYa/LhS5MFKmuivRsx9iPJWNSGbh2XVEjk90fmpUEjCnILPEPJnikAU6SFDiEUyOv90Pg==",
      "cpu": [
        "ia32"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@rollup/rollup-win32-x64-msvc": {
      "version": "4.41.1",
      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.41.1.tgz",
      "integrity": "sha512-Wq2zpapRYLfi4aKxf2Xff0tN+7slj2d4R87WEzqw7ZLsVvO5zwYCIuEGSZYiK41+GlwUo1HiR+GdkLEJnCKTCw==",
      "cpu": [
        "x64"
      ],
      "dev": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ]
    },
    "node_modules/@tailwindcss/cli": {
      "version": "4.1.7",
      "resolved": "https://registry.npmjs.org/@tailwindcss/cli/-/cli-4.1.7.tgz",
      "integrity": "sha512-hJNjpov/UiJc9ZWH4j/eEQxqklADrD/71s+t8Y0wbyQVAwtLkSp+MeC/sHTb03X+28rfbe0fRXkiBsf73/IwPg==",
      "license": "MIT",
      "dependencies": {
        "@parcel/watcher": "^2.5.1",
        "@tailwindcss/node": "4.1.7",
        "@tailwindcss/oxide": "4.1.7",
        "enhanced-resolve": "^5.18.1",
        "mri": "^1.2.0",
        "picocolors": "^1.1.1",
        "tailwindcss": "4.1.7"
      },
      "bin": {
        "tailwindcss": "dist/index.mjs"
      }
    },
    "node_modules/@tailwindcss/cli/node_modules/tailwindcss": {
      "version": "4.1.7",
      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-4.1.7.tgz",
      "integrity": "sha512-kr1o/ErIdNhTz8uzAYL7TpaUuzKIE6QPQ4qmSdxnoX/lo+5wmUHQA6h3L5yIqEImSRnAAURDirLu/BgiXGPAhg==",
      "license": "MIT"
    },
    "node_modules/@tailwindcss/node": {
      "version": "4.1.7",
      "resolved": "https://registry.npmjs.org/@tailwindcss/node/-/node-4.1.7.tgz",
      "integrity": "sha512-9rsOpdY9idRI2NH6CL4wORFY0+Q6fnx9XP9Ju+iq/0wJwGD5IByIgFmwVbyy4ymuyprj8Qh4ErxMKTUL4uNh3g==",
      "license": "MIT",
      "dependencies": {
        "@ampproject/remapping": "^2.3.0",
        "enhanced-resolve": "^5.18.1",
        "jiti": "^2.4.2",
        "lightningcss": "1.30.1",
        "magic-string": "^0.30.17",
        "source-map-js": "^1.2.1",
        "tailwindcss": "4.1.7"
      }
    },
    "node_modules/@tailwindcss/node/node_modules/tailwindcss": {
      "version": "4.1.7",
      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-4.1.7.tgz",
      "integrity": "sha512-kr1o/ErIdNhTz8uzAYL7TpaUuzKIE6QPQ4qmSdxnoX/lo+5wmUHQA6h3L5yIqEImSRnAAURDirLu/BgiXGPAhg==",
      "license": "MIT"
    },
    "node_modules/@tailwindcss/oxide": {
      "version": "4.1.7",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide/-/oxide-4.1.7.tgz",
      "integrity": "sha512-5SF95Ctm9DFiUyjUPnDGkoKItPX/k+xifcQhcqX5RA85m50jw1pT/KzjdvlqxRja45Y52nR4MR9fD1JYd7f8NQ==",
      "hasInstallScript": true,
      "license": "MIT",
      "dependencies": {
        "detect-libc": "^2.0.4",
        "tar": "^7.4.3"
      },
      "engines": {
        "node": ">= 10"
      },
      "optionalDependencies": {
        "@tailwindcss/oxide-android-arm64": "4.1.7",
        "@tailwindcss/oxide-darwin-arm64": "4.1.7",
        "@tailwindcss/oxide-darwin-x64": "4.1.7",
        "@tailwindcss/oxide-freebsd-x64": "4.1.7",
        "@tailwindcss/oxide-linux-arm-gnueabihf": "4.1.7",
        "@tailwindcss/oxide-linux-arm64-gnu": "4.1.7",
        "@tailwindcss/oxide-linux-arm64-musl": "4.1.7",
        "@tailwindcss/oxide-linux-x64-gnu": "4.1.7",
        "@tailwindcss/oxide-linux-x64-musl": "4.1.7",
        "@tailwindcss/oxide-wasm32-wasi": "4.1.7",
        "@tailwindcss/oxide-win32-arm64-msvc": "4.1.7",
        "@tailwindcss/oxide-win32-x64-msvc": "4.1.7"
      }
    },
    "node_modules/@tailwindcss/oxide-android-arm64": {
      "version": "4.1.7",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-android-arm64/-/oxide-android-arm64-4.1.7.tgz",
      "integrity": "sha512-IWA410JZ8fF7kACus6BrUwY2Z1t1hm0+ZWNEzykKmMNM09wQooOcN/VXr0p/WJdtHZ90PvJf2AIBS/Ceqx1emg==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "android"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-darwin-arm64": {
      "version": "4.1.7",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-arm64/-/oxide-darwin-arm64-4.1.7.tgz",
      "integrity": "sha512-81jUw9To7fimGGkuJ2W5h3/oGonTOZKZ8C2ghm/TTxbwvfSiFSDPd6/A/KE2N7Jp4mv3Ps9OFqg2fEKgZFfsvg==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-darwin-x64": {
      "version": "4.1.7",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-darwin-x64/-/oxide-darwin-x64-4.1.7.tgz",
      "integrity": "sha512-q77rWjEyGHV4PdDBtrzO0tgBBPlQWKY7wZK0cUok/HaGgbNKecegNxCGikuPJn5wFAlIywC3v+WMBt0PEBtwGw==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-freebsd-x64": {
      "version": "4.1.7",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-freebsd-x64/-/oxide-freebsd-x64-4.1.7.tgz",
      "integrity": "sha512-RfmdbbK6G6ptgF4qqbzoxmH+PKfP4KSVs7SRlTwcbRgBwezJkAO3Qta/7gDy10Q2DcUVkKxFLXUQO6J3CRvBGw==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-arm-gnueabihf": {
      "version": "4.1.7",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm-gnueabihf/-/oxide-linux-arm-gnueabihf-4.1.7.tgz",
      "integrity": "sha512-OZqsGvpwOa13lVd1z6JVwQXadEobmesxQ4AxhrwRiPuE04quvZHWn/LnihMg7/XkN+dTioXp/VMu/p6A5eZP3g==",
      "cpu": [
        "arm"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-arm64-gnu": {
      "version": "4.1.7",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-gnu/-/oxide-linux-arm64-gnu-4.1.7.tgz",
      "integrity": "sha512-voMvBTnJSfKecJxGkoeAyW/2XRToLZ227LxswLAwKY7YslG/Xkw9/tJNH+3IVh5bdYzYE7DfiaPbRkSHFxY1xA==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-arm64-musl": {
      "version": "4.1.7",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-arm64-musl/-/oxide-linux-arm64-musl-4.1.7.tgz",
      "integrity": "sha512-PjGuNNmJeKHnP58M7XyjJyla8LPo+RmwHQpBI+W/OxqrwojyuCQ+GUtygu7jUqTEexejZHr/z3nBc/gTiXBj4A==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-x64-gnu": {
      "version": "4.1.7",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-gnu/-/oxide-linux-x64-gnu-4.1.7.tgz",
      "integrity": "sha512-HMs+Va+ZR3gC3mLZE00gXxtBo3JoSQxtu9lobbZd+DmfkIxR54NO7Z+UQNPsa0P/ITn1TevtFxXTpsRU7qEvWg==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-linux-x64-musl": {
      "version": "4.1.7",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-linux-x64-musl/-/oxide-linux-x64-musl-4.1.7.tgz",
      "integrity": "sha512-MHZ6jyNlutdHH8rd+YTdr3QbXrHXqwIhHw9e7yXEBcQdluGwhpQY2Eku8UZK6ReLaWtQ4gijIv5QoM5eE+qlsA==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-wasm32-wasi": {
      "version": "4.1.7",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-wasm32-wasi/-/oxide-wasm32-wasi-4.1.7.tgz",
      "integrity": "sha512-ANaSKt74ZRzE2TvJmUcbFQ8zS201cIPxUDm5qez5rLEwWkie2SkGtA4P+GPTj+u8N6JbPrC8MtY8RmJA35Oo+A==",
      "bundleDependencies": [
        "@napi-rs/wasm-runtime",
        "@emnapi/core",
        "@emnapi/runtime",
        "@tybys/wasm-util",
        "@emnapi/wasi-threads",
        "tslib"
      ],
      "cpu": [
        "wasm32"
      ],
      "license": "MIT",
      "optional": true,
      "dependencies": {
        "@emnapi/core": "^1.4.3",
        "@emnapi/runtime": "^1.4.3",
        "@emnapi/wasi-threads": "^1.0.2",
        "@napi-rs/wasm-runtime": "^0.2.9",
        "@tybys/wasm-util": "^0.9.0",
        "tslib": "^2.8.0"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/@tailwindcss/oxide-win32-arm64-msvc": {
      "version": "4.1.7",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-arm64-msvc/-/oxide-win32-arm64-msvc-4.1.7.tgz",
      "integrity": "sha512-HUiSiXQ9gLJBAPCMVRk2RT1ZrBjto7WvqsPBwUrNK2BcdSxMnk19h4pjZjI7zgPhDxlAbJSumTC4ljeA9y0tEw==",
      "cpu": [
        "arm64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide-win32-x64-msvc": {
      "version": "4.1.7",
      "resolved": "https://registry.npmjs.org/@tailwindcss/oxide-win32-x64-msvc/-/oxide-win32-x64-msvc-4.1.7.tgz",
      "integrity": "sha512-rYHGmvoHiLJ8hWucSfSOEmdCBIGZIq7SpkPRSqLsH2Ab2YUNgKeAPT1Fi2cx3+hnYOrAb0jp9cRyode3bBW4mQ==",
      "cpu": [
        "x64"
      ],
      "license": "MIT",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 10"
      }
    },
    "node_modules/@tailwindcss/oxide/node_modules/detect-libc": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-2.0.4.tgz",
      "integrity": "sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==",
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/@types/estree": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.7.tgz",
      "integrity": "sha512-w28IoSUCJpidD/TGviZwwMJckNESJZXFu7NBZ5YJ4mEUnNraUn9Pm8HSZm/jDF1pDWYKspWE7oVphigUPRakIQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/@vitejs/plugin-vue": {
      "version": "5.2.4",
      "resolved": "https://registry.npmjs.org/@vitejs/plugin-vue/-/plugin-vue-5.2.4.tgz",
      "integrity": "sha512-7Yx/SXSOcQq5HiiV3orevHUFn+pmMB4cgbEkDYgnkUWb0WfeQ/wa2yFv6D5ICiCQOVpjA7vYDXrC7AGO8yjDHA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "^18.0.0 || >=20.0.0"
      },
      "peerDependencies": {
        "vite": "^5.0.0 || ^6.0.0",
        "vue": "^3.2.25"
      }
    },
    "node_modules/@vue/compiler-core": {
      "version": "3.5.15",
      "resolved": "https://registry.npmjs.org/@vue/compiler-core/-/compiler-core-3.5.15.tgz",
      "integrity": "sha512-nGRc6YJg/kxNqbv/7Tg4juirPnjHvuVdhcmDvQWVZXlLHjouq7VsKmV1hIxM/8yKM0VUfwT/Uzc0lO510ltZqw==",
      "license": "MIT",
      "dependencies": {
        "@babel/parser": "^7.27.2",
        "@vue/shared": "3.5.15",
        "entities": "^4.5.0",
        "estree-walker": "^2.0.2",
        "source-map-js": "^1.2.1"
      }
    },
    "node_modules/@vue/compiler-dom": {
      "version": "3.5.15",
      "resolved": "https://registry.npmjs.org/@vue/compiler-dom/-/compiler-dom-3.5.15.tgz",
      "integrity": "sha512-ZelQd9n+O/UCBdL00rlwCrsArSak+YLZpBVuNDio1hN3+wrCshYZEDUO3khSLAzPbF1oQS2duEoMDUHScUlYjA==",
      "license": "MIT",
      "dependencies": {
        "@vue/compiler-core": "3.5.15",
        "@vue/shared": "3.5.15"
      }
    },
    "node_modules/@vue/compiler-sfc": {
      "version": "3.5.15",
      "resolved": "https://registry.npmjs.org/@vue/compiler-sfc/-/compiler-sfc-3.5.15.tgz",
      "integrity": "sha512-3zndKbxMsOU6afQWer75Zot/aydjtxNj0T2KLg033rAFaQUn2PGuE32ZRe4iMhflbTcAxL0yEYsRWFxtPro8RQ==",
      "license": "MIT",
      "dependencies": {
        "@babel/parser": "^7.27.2",
        "@vue/compiler-core": "3.5.15",
        "@vue/compiler-dom": "3.5.15",
        "@vue/compiler-ssr": "3.5.15",
        "@vue/shared": "3.5.15",
        "estree-walker": "^2.0.2",
        "magic-string": "^0.30.17",
        "postcss": "^8.5.3",
        "source-map-js": "^1.2.1"
      }
    },
    "node_modules/@vue/compiler-ssr": {
      "version": "3.5.15",
      "resolved": "https://registry.npmjs.org/@vue/compiler-ssr/-/compiler-ssr-3.5.15.tgz",
      "integrity": "sha512-gShn8zRREZbrXqTtmLSCffgZXDWv8nHc/GhsW+mbwBfNZL5pI96e7IWcIq8XGQe1TLtVbu7EV9gFIVSmfyarPg==",
      "license": "MIT",
      "dependencies": {
        "@vue/compiler-dom": "3.5.15",
        "@vue/shared": "3.5.15"
      }
    },
    "node_modules/@vue/devtools-api": {
      "version": "7.7.6",
      "resolved": "https://registry.npmjs.org/@vue/devtools-api/-/devtools-api-7.7.6.tgz",
      "integrity": "sha512-b2Xx0KvXZObePpXPYHvBRRJLDQn5nhKjXh7vUhMEtWxz1AYNFOVIsh5+HLP8xDGL7sy+Q7hXeUxPHB/KgbtsPw==",
      "license": "MIT",
      "dependencies": {
        "@vue/devtools-kit": "^7.7.6"
      }
    },
    "node_modules/@vue/devtools-kit": {
      "version": "7.7.6",
      "resolved": "https://registry.npmjs.org/@vue/devtools-kit/-/devtools-kit-7.7.6.tgz",
      "integrity": "sha512-geu7ds7tem2Y7Wz+WgbnbZ6T5eadOvozHZ23Atk/8tksHMFOFylKi1xgGlQlVn0wlkEf4hu+vd5ctj1G4kFtwA==",
      "license": "MIT",
      "dependencies": {
        "@vue/devtools-shared": "^7.7.6",
        "birpc": "^2.3.0",
        "hookable": "^5.5.3",
        "mitt": "^3.0.1",
        "perfect-debounce": "^1.0.0",
        "speakingurl": "^14.0.1",
        "superjson": "^2.2.2"
      }
    },
    "node_modules/@vue/devtools-shared": {
      "version": "7.7.6",
      "resolved": "https://registry.npmjs.org/@vue/devtools-shared/-/devtools-shared-7.7.6.tgz",
      "integrity": "sha512-yFEgJZ/WblEsojQQceuyK6FzpFDx4kqrz2ohInxNj5/DnhoX023upTv4OD6lNPLAA5LLkbwPVb10o/7b+Y4FVA==",
      "license": "MIT",
      "dependencies": {
        "rfdc": "^1.4.1"
      }
    },
    "node_modules/@vue/reactivity": {
      "version": "3.5.15",
      "resolved": "https://registry.npmjs.org/@vue/reactivity/-/reactivity-3.5.15.tgz",
      "integrity": "sha512-GaA5VUm30YWobCwpvcs9nvFKf27EdSLKDo2jA0IXzGS344oNpFNbEQ9z+Pp5ESDaxyS8FcH0vFN/XSe95BZtHQ==",
      "license": "MIT",
      "dependencies": {
        "@vue/shared": "3.5.15"
      }
    },
    "node_modules/@vue/runtime-core": {
      "version": "3.5.15",
      "resolved": "https://registry.npmjs.org/@vue/runtime-core/-/runtime-core-3.5.15.tgz",
      "integrity": "sha512-CZAlIOQ93nj0OPpWWOx4+QDLCMzBNY85IQR4Voe6vIID149yF8g9WQaWnw042f/6JfvLttK7dnyWlC1EVCRK8Q==",
      "license": "MIT",
      "dependencies": {
        "@vue/reactivity": "3.5.15",
        "@vue/shared": "3.5.15"
      }
    },
    "node_modules/@vue/runtime-dom": {
      "version": "3.5.15",
      "resolved": "https://registry.npmjs.org/@vue/runtime-dom/-/runtime-dom-3.5.15.tgz",
      "integrity": "sha512-wFplHKzKO/v998up2iCW3RN9TNUeDMhdBcNYZgs5LOokHntrB48dyuZHspcahKZczKKh3v6i164gapMPxBTKNw==",
      "license": "MIT",
      "dependencies": {
        "@vue/reactivity": "3.5.15",
        "@vue/runtime-core": "3.5.15",
        "@vue/shared": "3.5.15",
        "csstype": "^3.1.3"
      }
    },
    "node_modules/@vue/server-renderer": {
      "version": "3.5.15",
      "resolved": "https://registry.npmjs.org/@vue/server-renderer/-/server-renderer-3.5.15.tgz",
      "integrity": "sha512-Gehc693kVTYkLt6QSYEjGvqvdK2zZ/gf/D5zkgmvBdeB30dNnVZS8yY7+IlBmHRd1rR/zwaqeu06Ij04ZxBscg==",
      "license": "MIT",
      "dependencies": {
        "@vue/compiler-ssr": "3.5.15",
        "@vue/shared": "3.5.15"
      },
      "peerDependencies": {
        "vue": "3.5.15"
      }
    },
    "node_modules/@vue/shared": {
      "version": "3.5.15",
      "resolved": "https://registry.npmjs.org/@vue/shared/-/shared-3.5.15.tgz",
      "integrity": "sha512-bKvgFJJL1ZX9KxMCTQY6xD9Dhe3nusd1OhyOb1cJYGqvAr0Vg8FIjHPMOEVbJ9GDT9HG+Bjdn4oS8ohKP8EvoA==",
      "license": "MIT"
    },
    "node_modules/ansi-regex": {
      "version": "6.1.0",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz",
      "integrity": "sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-regex?sponsor=1"
      }
    },
    "node_modules/ansi-styles": {
      "version": "6.2.1",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz",
      "integrity": "sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/any-promise": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz",
      "integrity": "sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/anymatch": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
      "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "normalize-path": "^3.0.0",
        "picomatch": "^2.0.4"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/arg": {
      "version": "5.0.2",
      "resolved": "https://registry.npmjs.org/arg/-/arg-5.0.2.tgz",
      "integrity": "sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/asynckit": {
      "version": "0.4.0",
      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
      "integrity": "sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==",
      "license": "MIT"
    },
    "node_modules/autoprefixer": {
      "version": "10.4.21",
      "resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-10.4.21.tgz",
      "integrity": "sha512-O+A6LWV5LDHSJD3LjHYoNi4VLsj/Whi7k6zG12xTYaU4cQ8oxQGckXNX8cRHK5yOZ/ppVHe0ZBXGzSV9jXdVbQ==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/autoprefixer"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "browserslist": "^4.24.4",
        "caniuse-lite": "^1.0.30001702",
        "fraction.js": "^4.3.7",
        "normalize-range": "^0.1.2",
        "picocolors": "^1.1.1",
        "postcss-value-parser": "^4.2.0"
      },
      "bin": {
        "autoprefixer": "bin/autoprefixer"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      },
      "peerDependencies": {
        "postcss": "^8.1.0"
      }
    },
    "node_modules/axios": {
      "version": "1.9.0",
      "resolved": "https://registry.npmjs.org/axios/-/axios-1.9.0.tgz",
      "integrity": "sha512-re4CqKTJaURpzbLHtIi6XpDv20/CnpXOtjRY5/CU32L8gU8ek9UIivcfvSWvmKEngmVbrUtPpdDwWDWL7DNHvg==",
      "license": "MIT",
      "dependencies": {
        "follow-redirects": "^1.15.6",
        "form-data": "^4.0.0",
        "proxy-from-env": "^1.1.0"
      }
    },
    "node_modules/balanced-match": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/binary-extensions": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz",
      "integrity": "sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/birpc": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/birpc/-/birpc-2.3.0.tgz",
      "integrity": "sha512-ijbtkn/F3Pvzb6jHypHRyve2QApOCZDR25D/VnkY2G/lBNcXCTsnsCxgY4k4PkVB7zfwzYbY3O9Lcqe3xufS5g==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/antfu"
      }
    },
    "node_modules/brace-expansion": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz",
      "integrity": "sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "balanced-match": "^1.0.0"
      }
    },
    "node_modules/braces": {
      "version": "3.0.3",
      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
      "license": "MIT",
      "dependencies": {
        "fill-range": "^7.1.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/browserslist": {
      "version": "4.24.5",
      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.24.5.tgz",
      "integrity": "sha512-FDToo4Wo82hIdgc1CQ+NQD0hEhmpPjrZ3hiUgwgOG6IuTdlpr8jdjyG24P6cNP1yJpTLzS5OcGgSw0xmDU1/Tw==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "caniuse-lite": "^1.0.30001716",
        "electron-to-chromium": "^1.5.149",
        "node-releases": "^2.0.19",
        "update-browserslist-db": "^1.1.3"
      },
      "bin": {
        "browserslist": "cli.js"
      },
      "engines": {
        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
      }
    },
    "node_modules/call-bind-apply-helpers": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
      "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/camelcase-css": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/camelcase-css/-/camelcase-css-2.0.1.tgz",
      "integrity": "sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/caniuse-lite": {
      "version": "1.0.30001718",
      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001718.tgz",
      "integrity": "sha512-AflseV1ahcSunK53NfEs9gFWgOEmzr0f+kaMFA4xiLZlr9Hzt7HxcSpIFcnNCUkz6R6dWKa54rUz3HUmI3nVcw==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "CC-BY-4.0"
    },
    "node_modules/chokidar": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz",
      "integrity": "sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "anymatch": "~3.1.2",
        "braces": "~3.0.2",
        "glob-parent": "~5.1.2",
        "is-binary-path": "~2.1.0",
        "is-glob": "~4.0.1",
        "normalize-path": "~3.0.0",
        "readdirp": "~3.6.0"
      },
      "engines": {
        "node": ">= 8.10.0"
      },
      "funding": {
        "url": "https://paulmillr.com/funding/"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/chokidar/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/chownr": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/chownr/-/chownr-3.0.0.tgz",
      "integrity": "sha512-+IxzY9BZOQd/XuYPRmrvEVjF/nqj5kgT4kEq7VofrDoM1MxoRjEWkrCC3EtLi59TVawxTAn+orJwFQcrqEN1+g==",
      "license": "BlueOak-1.0.0",
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/color-convert": {
      "version": "2.0.1",
      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "color-name": "~1.1.4"
      },
      "engines": {
        "node": ">=7.0.0"
      }
    },
    "node_modules/color-name": {
      "version": "1.1.4",
      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/combined-stream": {
      "version": "1.0.8",
      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
      "license": "MIT",
      "dependencies": {
        "delayed-stream": "~1.0.0"
      },
      "engines": {
        "node": ">= 0.8"
      }
    },
    "node_modules/commander": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/commander/-/commander-4.1.1.tgz",
      "integrity": "sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/copy-anything": {
      "version": "3.0.5",
      "resolved": "https://registry.npmjs.org/copy-anything/-/copy-anything-3.0.5.tgz",
      "integrity": "sha512-yCEafptTtb4bk7GLEQoM8KVJpxAfdBJYaXyzQEgQQQgYrZiDp8SJmGKlYza6CYjEDNstAdNdKA3UuoULlEbS6w==",
      "license": "MIT",
      "dependencies": {
        "is-what": "^4.1.8"
      },
      "engines": {
        "node": ">=12.13"
      },
      "funding": {
        "url": "https://github.com/sponsors/mesqueeb"
      }
    },
    "node_modules/cross-spawn": {
      "version": "7.0.6",
      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
      "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "path-key": "^3.1.0",
        "shebang-command": "^2.0.0",
        "which": "^2.0.1"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/cssesc": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz",
      "integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "cssesc": "bin/cssesc"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/csstype": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
      "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==",
      "license": "MIT"
    },
    "node_modules/delayed-stream": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
      "integrity": "sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.4.0"
      }
    },
    "node_modules/detect-libc": {
      "version": "1.0.3",
      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-1.0.3.tgz",
      "integrity": "sha512-pGjwhsmsp4kL2RTz08wcOlGN83otlqHeD/Z5T8GXZB+/YcpQ/dgo+lbU8ZsGxV0HIvqqxo9l7mqYwyYMD9bKDg==",
      "license": "Apache-2.0",
      "bin": {
        "detect-libc": "bin/detect-libc.js"
      },
      "engines": {
        "node": ">=0.10"
      }
    },
    "node_modules/didyoumean": {
      "version": "1.2.2",
      "resolved": "https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.2.tgz",
      "integrity": "sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==",
      "dev": true,
      "license": "Apache-2.0"
    },
    "node_modules/dlv": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/dlv/-/dlv-1.1.3.tgz",
      "integrity": "sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/dunder-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
      "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.1",
        "es-errors": "^1.3.0",
        "gopd": "^1.2.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/eastasianwidth": {
      "version": "0.2.0",
      "resolved": "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
      "integrity": "sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/electron-to-chromium": {
      "version": "1.5.159",
      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.159.tgz",
      "integrity": "sha512-CEvHptWAMV5p6GJ0Lq8aheyvVbfzVrv5mmidu1D3pidoVNkB3tTBsTMVtPJ+rzRK5oV229mCLz9Zj/hNvU8GBA==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/emoji-regex": {
      "version": "9.2.2",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
      "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/enhanced-resolve": {
      "version": "5.18.1",
      "resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-5.18.1.tgz",
      "integrity": "sha512-ZSW3ma5GkcQBIpwZTSRAI8N71Uuwgs93IezB7mf7R60tC8ZbJideoDNKjHn2O9KIlx6rkGTTEk1xUCK2E1Y2Yg==",
      "license": "MIT",
      "dependencies": {
        "graceful-fs": "^4.2.4",
        "tapable": "^2.2.0"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/entities": {
      "version": "4.5.0",
      "resolved": "https://registry.npmjs.org/entities/-/entities-4.5.0.tgz",
      "integrity": "sha512-V0hjH4dGPh9Ao5p0MoRY6BVqtwCjhz6vI5LT8AJ55H+4g9/4vbHx1I54fS0XuclLhDHArPQCiMjDxjaL8fPxhw==",
      "license": "BSD-2-Clause",
      "engines": {
        "node": ">=0.12"
      },
      "funding": {
        "url": "https://github.com/fb55/entities?sponsor=1"
      }
    },
    "node_modules/es-define-property": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
      "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-errors": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
      "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-object-atoms": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
      "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/es-set-tostringtag": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.1.0.tgz",
      "integrity": "sha512-j6vWzfrGVfyXxge+O0x5sh6cvxAog0a/4Rdd2K36zCMV5eJ+/+tOAngRO8cODMNWbVRdVlmGZQL2YS3yR8bIUA==",
      "license": "MIT",
      "dependencies": {
        "es-errors": "^1.3.0",
        "get-intrinsic": "^1.2.6",
        "has-tostringtag": "^1.0.2",
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/esbuild": {
      "version": "0.25.5",
      "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.25.5.tgz",
      "integrity": "sha512-P8OtKZRv/5J5hhz0cUAdu/cLuPIKXpQl1R9pZtvmHWQvrAUVd0UNIPT4IB4W3rNOqVO0rlqHmCIbSwxh/c9yUQ==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "bin": {
        "esbuild": "bin/esbuild"
      },
      "engines": {
        "node": ">=18"
      },
      "optionalDependencies": {
        "@esbuild/aix-ppc64": "0.25.5",
        "@esbuild/android-arm": "0.25.5",
        "@esbuild/android-arm64": "0.25.5",
        "@esbuild/android-x64": "0.25.5",
        "@esbuild/darwin-arm64": "0.25.5",
        "@esbuild/darwin-x64": "0.25.5",
        "@esbuild/freebsd-arm64": "0.25.5",
        "@esbuild/freebsd-x64": "0.25.5",
        "@esbuild/linux-arm": "0.25.5",
        "@esbuild/linux-arm64": "0.25.5",
        "@esbuild/linux-ia32": "0.25.5",
        "@esbuild/linux-loong64": "0.25.5",
        "@esbuild/linux-mips64el": "0.25.5",
        "@esbuild/linux-ppc64": "0.25.5",
        "@esbuild/linux-riscv64": "0.25.5",
        "@esbuild/linux-s390x": "0.25.5",
        "@esbuild/linux-x64": "0.25.5",
        "@esbuild/netbsd-arm64": "0.25.5",
        "@esbuild/netbsd-x64": "0.25.5",
        "@esbuild/openbsd-arm64": "0.25.5",
        "@esbuild/openbsd-x64": "0.25.5",
        "@esbuild/sunos-x64": "0.25.5",
        "@esbuild/win32-arm64": "0.25.5",
        "@esbuild/win32-ia32": "0.25.5",
        "@esbuild/win32-x64": "0.25.5"
      }
    },
    "node_modules/escalade": {
      "version": "3.2.0",
      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/estree-walker": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/estree-walker/-/estree-walker-2.0.2.tgz",
      "integrity": "sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w==",
      "license": "MIT"
    },
    "node_modules/fast-glob": {
      "version": "3.3.3",
      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz",
      "integrity": "sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@nodelib/fs.stat": "^2.0.2",
        "@nodelib/fs.walk": "^1.2.3",
        "glob-parent": "^5.1.2",
        "merge2": "^1.3.0",
        "micromatch": "^4.0.8"
      },
      "engines": {
        "node": ">=8.6.0"
      }
    },
    "node_modules/fast-glob/node_modules/glob-parent": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.1"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/fastq": {
      "version": "1.19.1",
      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz",
      "integrity": "sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "reusify": "^1.0.4"
      }
    },
    "node_modules/fill-range": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
      "license": "MIT",
      "dependencies": {
        "to-regex-range": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/follow-redirects": {
      "version": "1.15.9",
      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.9.tgz",
      "integrity": "sha512-gew4GsXizNgdoRyqmyfMHyAmXsZDk6mHkSxZFCzW9gwlbtOW44CDtYavM+y+72qD/Vq2l550kMF52DT8fOLJqQ==",
      "funding": [
        {
          "type": "individual",
          "url": "https://github.com/sponsors/RubenVerborgh"
        }
      ],
      "license": "MIT",
      "engines": {
        "node": ">=4.0"
      },
      "peerDependenciesMeta": {
        "debug": {
          "optional": true
        }
      }
    },
    "node_modules/foreground-child": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/foreground-child/-/foreground-child-3.3.1.tgz",
      "integrity": "sha512-gIXjKqtFuWEgzFRJA9WCQeSJLZDjgJUOMCMzxtvFq/37KojM1BFGufqsCy0r4qSQmYLsZYMeyRqzIWOMup03sw==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "cross-spawn": "^7.0.6",
        "signal-exit": "^4.0.1"
      },
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/form-data": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/form-data/-/form-data-4.0.2.tgz",
      "integrity": "sha512-hGfm/slu0ZabnNt4oaRZ6uREyfCj6P4fT/n6A1rGV+Z0VdGXjfOhVUpkn6qVQONHGIFwmveGXyDs75+nr6FM8w==",
      "license": "MIT",
      "dependencies": {
        "asynckit": "^0.4.0",
        "combined-stream": "^1.0.8",
        "es-set-tostringtag": "^2.1.0",
        "mime-types": "^2.1.12"
      },
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/fraction.js": {
      "version": "4.3.7",
      "resolved": "https://registry.npmjs.org/fraction.js/-/fraction.js-4.3.7.tgz",
      "integrity": "sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": "*"
      },
      "funding": {
        "type": "patreon",
        "url": "https://github.com/sponsors/rawify"
      }
    },
    "node_modules/fsevents": {
      "version": "2.3.3",
      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
      "dev": true,
      "hasInstallScript": true,
      "license": "MIT",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
      }
    },
    "node_modules/function-bind": {
      "version": "1.1.2",
      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
      "license": "MIT",
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-intrinsic": {
      "version": "1.3.0",
      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
      "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
      "license": "MIT",
      "dependencies": {
        "call-bind-apply-helpers": "^1.0.2",
        "es-define-property": "^1.0.1",
        "es-errors": "^1.3.0",
        "es-object-atoms": "^1.1.1",
        "function-bind": "^1.1.2",
        "get-proto": "^1.0.1",
        "gopd": "^1.2.0",
        "has-symbols": "^1.1.0",
        "hasown": "^2.0.2",
        "math-intrinsics": "^1.1.0"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/get-proto": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
      "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
      "license": "MIT",
      "dependencies": {
        "dunder-proto": "^1.0.1",
        "es-object-atoms": "^1.0.0"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/glob": {
      "version": "10.4.5",
      "resolved": "https://registry.npmjs.org/glob/-/glob-10.4.5.tgz",
      "integrity": "sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "foreground-child": "^3.1.0",
        "jackspeak": "^3.1.2",
        "minimatch": "^9.0.4",
        "minipass": "^7.1.2",
        "package-json-from-dist": "^1.0.0",
        "path-scurry": "^1.11.1"
      },
      "bin": {
        "glob": "dist/esm/bin.mjs"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/glob-parent": {
      "version": "6.0.2",
      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "is-glob": "^4.0.3"
      },
      "engines": {
        "node": ">=10.13.0"
      }
    },
    "node_modules/gopd": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
      "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/graceful-fs": {
      "version": "4.2.11",
      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz",
      "integrity": "sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==",
      "license": "ISC"
    },
    "node_modules/has-symbols": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
      "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/has-tostringtag": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz",
      "integrity": "sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==",
      "license": "MIT",
      "dependencies": {
        "has-symbols": "^1.0.3"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/hasown": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
      "license": "MIT",
      "dependencies": {
        "function-bind": "^1.1.2"
      },
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/hookable": {
      "version": "5.5.3",
      "resolved": "https://registry.npmjs.org/hookable/-/hookable-5.5.3.tgz",
      "integrity": "sha512-Yc+BQe8SvoXH1643Qez1zqLRmbA5rCL+sSmk6TVos0LWVfNIB7PGncdlId77WzLGSIB5KaWgTaNTs2lNVEI6VQ==",
      "license": "MIT"
    },
    "node_modules/is-binary-path": {
      "version": "2.1.0",
      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "binary-extensions": "^2.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-core-module": {
      "version": "2.16.1",
      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.16.1.tgz",
      "integrity": "sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "hasown": "^2.0.2"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/is-extglob": {
      "version": "2.1.1",
      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-fullwidth-code-point": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/is-glob": {
      "version": "4.0.3",
      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
      "license": "MIT",
      "dependencies": {
        "is-extglob": "^2.1.1"
      },
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/is-number": {
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
      "license": "MIT",
      "engines": {
        "node": ">=0.12.0"
      }
    },
    "node_modules/is-what": {
      "version": "4.1.16",
      "resolved": "https://registry.npmjs.org/is-what/-/is-what-4.1.16.tgz",
      "integrity": "sha512-ZhMwEosbFJkA0YhFnNDgTM4ZxDRsS6HqTo7qsZM08fehyRYIYa0yHu5R6mgo1n/8MgaPBXiPimPD77baVFYg+A==",
      "license": "MIT",
      "engines": {
        "node": ">=12.13"
      },
      "funding": {
        "url": "https://github.com/sponsors/mesqueeb"
      }
    },
    "node_modules/isexe": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/jackspeak": {
      "version": "3.4.3",
      "resolved": "https://registry.npmjs.org/jackspeak/-/jackspeak-3.4.3.tgz",
      "integrity": "sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==",
      "dev": true,
      "license": "BlueOak-1.0.0",
      "dependencies": {
        "@isaacs/cliui": "^8.0.2"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      },
      "optionalDependencies": {
        "@pkgjs/parseargs": "^0.11.0"
      }
    },
    "node_modules/jiti": {
      "version": "2.4.2",
      "resolved": "https://registry.npmjs.org/jiti/-/jiti-2.4.2.tgz",
      "integrity": "sha512-rg9zJN+G4n2nfJl5MW3BMygZX56zKPNVEYYqq7adpmMh4Jn2QNEwhvQlFy6jPVdcod7txZtKHWnyZiA3a0zP7A==",
      "license": "MIT",
      "bin": {
        "jiti": "lib/jiti-cli.mjs"
      }
    },
    "node_modules/lightningcss": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss/-/lightningcss-1.30.1.tgz",
      "integrity": "sha512-xi6IyHML+c9+Q3W0S4fCQJOym42pyurFiJUHEcEyHS0CeKzia4yZDEsLlqOFykxOdHpNy0NmvVO31vcSqAxJCg==",
      "license": "MPL-2.0",
      "dependencies": {
        "detect-libc": "^2.0.3"
      },
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      },
      "optionalDependencies": {
        "lightningcss-darwin-arm64": "1.30.1",
        "lightningcss-darwin-x64": "1.30.1",
        "lightningcss-freebsd-x64": "1.30.1",
        "lightningcss-linux-arm-gnueabihf": "1.30.1",
        "lightningcss-linux-arm64-gnu": "1.30.1",
        "lightningcss-linux-arm64-musl": "1.30.1",
        "lightningcss-linux-x64-gnu": "1.30.1",
        "lightningcss-linux-x64-musl": "1.30.1",
        "lightningcss-win32-arm64-msvc": "1.30.1",
        "lightningcss-win32-x64-msvc": "1.30.1"
      }
    },
    "node_modules/lightningcss-darwin-arm64": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-darwin-arm64/-/lightningcss-darwin-arm64-1.30.1.tgz",
      "integrity": "sha512-c8JK7hyE65X1MHMN+Viq9n11RRC7hgin3HhYKhrMyaXflk5GVplZ60IxyoVtzILeKr+xAJwg6zK6sjTBJ0FKYQ==",
      "cpu": [
        "arm64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-darwin-x64": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-darwin-x64/-/lightningcss-darwin-x64-1.30.1.tgz",
      "integrity": "sha512-k1EvjakfumAQoTfcXUcHQZhSpLlkAuEkdMBsI/ivWw9hL+7FtilQc0Cy3hrx0AAQrVtQAbMI7YjCgYgvn37PzA==",
      "cpu": [
        "x64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "darwin"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-freebsd-x64": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-freebsd-x64/-/lightningcss-freebsd-x64-1.30.1.tgz",
      "integrity": "sha512-kmW6UGCGg2PcyUE59K5r0kWfKPAVy4SltVeut+umLCFoJ53RdCUWxcRDzO1eTaxf/7Q2H7LTquFHPL5R+Gjyig==",
      "cpu": [
        "x64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "freebsd"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-arm-gnueabihf": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm-gnueabihf/-/lightningcss-linux-arm-gnueabihf-1.30.1.tgz",
      "integrity": "sha512-MjxUShl1v8pit+6D/zSPq9S9dQ2NPFSQwGvxBCYaBYLPlCWuPh9/t1MRS8iUaR8i+a6w7aps+B4N0S1TYP/R+Q==",
      "cpu": [
        "arm"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-arm64-gnu": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-gnu/-/lightningcss-linux-arm64-gnu-1.30.1.tgz",
      "integrity": "sha512-gB72maP8rmrKsnKYy8XUuXi/4OctJiuQjcuqWNlJQ6jZiWqtPvqFziskH3hnajfvKB27ynbVCucKSm2rkQp4Bw==",
      "cpu": [
        "arm64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-arm64-musl": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-arm64-musl/-/lightningcss-linux-arm64-musl-1.30.1.tgz",
      "integrity": "sha512-jmUQVx4331m6LIX+0wUhBbmMX7TCfjF5FoOH6SD1CttzuYlGNVpA7QnrmLxrsub43ClTINfGSYyHe2HWeLl5CQ==",
      "cpu": [
        "arm64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-x64-gnu": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-x64-gnu/-/lightningcss-linux-x64-gnu-1.30.1.tgz",
      "integrity": "sha512-piWx3z4wN8J8z3+O5kO74+yr6ze/dKmPnI7vLqfSqI8bccaTGY5xiSGVIJBDd5K5BHlvVLpUB3S2YCfelyJ1bw==",
      "cpu": [
        "x64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-linux-x64-musl": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-linux-x64-musl/-/lightningcss-linux-x64-musl-1.30.1.tgz",
      "integrity": "sha512-rRomAK7eIkL+tHY0YPxbc5Dra2gXlI63HL+v1Pdi1a3sC+tJTcFrHX+E86sulgAXeI7rSzDYhPSeHHjqFhqfeQ==",
      "cpu": [
        "x64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "linux"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-win32-arm64-msvc": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-win32-arm64-msvc/-/lightningcss-win32-arm64-msvc-1.30.1.tgz",
      "integrity": "sha512-mSL4rqPi4iXq5YVqzSsJgMVFENoa4nGTT/GjO2c0Yl9OuQfPsIfncvLrEW6RbbB24WtZ3xP/2CCmI3tNkNV4oA==",
      "cpu": [
        "arm64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss-win32-x64-msvc": {
      "version": "1.30.1",
      "resolved": "https://registry.npmjs.org/lightningcss-win32-x64-msvc/-/lightningcss-win32-x64-msvc-1.30.1.tgz",
      "integrity": "sha512-PVqXh48wh4T53F/1CCu8PIPCxLzWyCnn/9T5W1Jpmdy5h9Cwd+0YQS6/LwhHXSafuc61/xg9Lv5OrCby6a++jg==",
      "cpu": [
        "x64"
      ],
      "license": "MPL-2.0",
      "optional": true,
      "os": [
        "win32"
      ],
      "engines": {
        "node": ">= 12.0.0"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/parcel"
      }
    },
    "node_modules/lightningcss/node_modules/detect-libc": {
      "version": "2.0.4",
      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-2.0.4.tgz",
      "integrity": "sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==",
      "license": "Apache-2.0",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/lilconfig": {
      "version": "3.1.3",
      "resolved": "https://registry.npmjs.org/lilconfig/-/lilconfig-3.1.3.tgz",
      "integrity": "sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/antonk52"
      }
    },
    "node_modules/lines-and-columns": {
      "version": "1.2.4",
      "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
      "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/lodash-es": {
      "version": "4.17.21",
      "resolved": "https://registry.npmjs.org/lodash-es/-/lodash-es-4.17.21.tgz",
      "integrity": "sha512-mKnC+QJ9pWVzv+C4/U3rRsHapFfHvQFoFB92e52xeyGMcX6/OlIl78je1u8vePzYZSkkogMPJ2yjxxsb89cxyw==",
      "license": "MIT"
    },
    "node_modules/lru-cache": {
      "version": "10.4.3",
      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz",
      "integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
      "dev": true,
      "license": "ISC"
    },
    "node_modules/magic-string": {
      "version": "0.30.17",
      "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.30.17.tgz",
      "integrity": "sha512-sNPKHvyjVf7gyjwS4xGTaW/mCnF8wnjtifKBEhxfZ7E/S8tQ0rssrwGNn6q8JH/ohItJfSQp9mBtQYuTlH5QnA==",
      "license": "MIT",
      "dependencies": {
        "@jridgewell/sourcemap-codec": "^1.5.0"
      }
    },
    "node_modules/math-intrinsics": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
      "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      }
    },
    "node_modules/merge2": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/micromatch": {
      "version": "4.0.8",
      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
      "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
      "license": "MIT",
      "dependencies": {
        "braces": "^3.0.3",
        "picomatch": "^2.3.1"
      },
      "engines": {
        "node": ">=8.6"
      }
    },
    "node_modules/mime-db": {
      "version": "1.52.0",
      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
      "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
      "license": "MIT",
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/mime-types": {
      "version": "2.1.35",
      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
      "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
      "license": "MIT",
      "dependencies": {
        "mime-db": "1.52.0"
      },
      "engines": {
        "node": ">= 0.6"
      }
    },
    "node_modules/minimatch": {
      "version": "9.0.5",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
      "integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "brace-expansion": "^2.0.1"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/minipass": {
      "version": "7.1.2",
      "resolved": "https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz",
      "integrity": "sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==",
      "license": "ISC",
      "engines": {
        "node": ">=16 || 14 >=14.17"
      }
    },
    "node_modules/minizlib": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/minizlib/-/minizlib-3.0.2.tgz",
      "integrity": "sha512-oG62iEk+CYt5Xj2YqI5Xi9xWUeZhDI8jjQmC5oThVH5JGCTgIjr7ciJDzC7MBzYd//WvR1OTmP5Q38Q8ShQtVA==",
      "license": "MIT",
      "dependencies": {
        "minipass": "^7.1.2"
      },
      "engines": {
        "node": ">= 18"
      }
    },
    "node_modules/mitt": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/mitt/-/mitt-3.0.1.tgz",
      "integrity": "sha512-vKivATfr97l2/QBCYAkXYDbrIWPM2IIKEl7YPhjCvKlG3kE2gm+uBo6nEXK3M5/Ffh/FLpKExzOQ3JJoJGFKBw==",
      "license": "MIT"
    },
    "node_modules/mkdirp": {
      "version": "3.0.1",
      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-3.0.1.tgz",
      "integrity": "sha512-+NsyUUAZDmo6YVHzL/stxSu3t9YS1iljliy3BSDrXJ/dkn1KYdmtZODGGjLcc9XLgVVpH4KshHB8XmZgMhaBXg==",
      "license": "MIT",
      "bin": {
        "mkdirp": "dist/cjs/src/bin.js"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/mri": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/mri/-/mri-1.2.0.tgz",
      "integrity": "sha512-tzzskb3bG8LvYGFF/mDTpq3jpI6Q9wc3LEmBaghu+DdCssd1FakN7Bc0hVNmEyGq1bq3RgfkCb3cmQLpNPOroA==",
      "license": "MIT",
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/mz": {
      "version": "2.7.0",
      "resolved": "https://registry.npmjs.org/mz/-/mz-2.7.0.tgz",
      "integrity": "sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "any-promise": "^1.0.0",
        "object-assign": "^4.0.1",
        "thenify-all": "^1.0.0"
      }
    },
    "node_modules/nanoid": {
      "version": "3.3.11",
      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz",
      "integrity": "sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==",
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "bin": {
        "nanoid": "bin/nanoid.cjs"
      },
      "engines": {
        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
      }
    },
    "node_modules/node-addon-api": {
      "version": "7.1.1",
      "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-7.1.1.tgz",
      "integrity": "sha512-5m3bsyrjFWE1xf7nz7YXdN4udnVtXK6/Yfgn5qnahL6bCkf2yKt4k3nuTKAtT4r3IG8JNR2ncsIMdZuAzJjHQQ==",
      "license": "MIT"
    },
    "node_modules/node-releases": {
      "version": "2.0.19",
      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgz",
      "integrity": "sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/normalize-path": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/normalize-range": {
      "version": "0.1.2",
      "resolved": "https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz",
      "integrity": "sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-assign": {
      "version": "4.1.1",
      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/object-hash": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/object-hash/-/object-hash-3.0.0.tgz",
      "integrity": "sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/package-json-from-dist": {
      "version": "1.0.1",
      "resolved": "https://registry.npmjs.org/package-json-from-dist/-/package-json-from-dist-1.0.1.tgz",
      "integrity": "sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==",
      "dev": true,
      "license": "BlueOak-1.0.0"
    },
    "node_modules/path-key": {
      "version": "3.1.1",
      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/path-parse": {
      "version": "1.0.7",
      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/path-scurry": {
      "version": "1.11.1",
      "resolved": "https://registry.npmjs.org/path-scurry/-/path-scurry-1.11.1.tgz",
      "integrity": "sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==",
      "dev": true,
      "license": "BlueOak-1.0.0",
      "dependencies": {
        "lru-cache": "^10.2.0",
        "minipass": "^5.0.0 || ^6.0.2 || ^7.0.0"
      },
      "engines": {
        "node": ">=16 || 14 >=14.18"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/perfect-debounce": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/perfect-debounce/-/perfect-debounce-1.0.0.tgz",
      "integrity": "sha512-xCy9V055GLEqoFaHoC1SoLIaLmWctgCUaBaWxDZ7/Zx4CTyX7cJQLJOok/orfjZAh9kEYpjJa4d0KcJmCbctZA==",
      "license": "MIT"
    },
    "node_modules/picocolors": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
      "license": "ISC"
    },
    "node_modules/picomatch": {
      "version": "2.3.1",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
      "license": "MIT",
      "engines": {
        "node": ">=8.6"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/pify": {
      "version": "2.3.0",
      "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
      "integrity": "sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/pinia": {
      "version": "3.0.2",
      "resolved": "https://registry.npmjs.org/pinia/-/pinia-3.0.2.tgz",
      "integrity": "sha512-sH2JK3wNY809JOeiiURUR0wehJ9/gd9qFN2Y828jCbxEzKEmEt0pzCXwqiSTfuRsK9vQsOflSdnbdBOGrhtn+g==",
      "license": "MIT",
      "dependencies": {
        "@vue/devtools-api": "^7.7.2"
      },
      "funding": {
        "url": "https://github.com/sponsors/posva"
      },
      "peerDependencies": {
        "typescript": ">=4.4.4",
        "vue": "^2.7.0 || ^3.5.11"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/pirates": {
      "version": "4.0.7",
      "resolved": "https://registry.npmjs.org/pirates/-/pirates-4.0.7.tgz",
      "integrity": "sha512-TfySrs/5nm8fQJDcBDuUng3VOUKsd7S+zqvbOTiGXHfxX4wK31ard+hoNuvkicM/2YFzlpDgABOevKSsB4G/FA==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 6"
      }
    },
    "node_modules/postcss": {
      "version": "8.5.3",
      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.3.tgz",
      "integrity": "sha512-dle9A3yYxlBSrt8Fu+IpjGT8SY8hN0mlaA6GY8t0P5PjIOZemULz/E2Bnm/2dcUOena75OTNkHI76uZBNUUq3A==",
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/postcss"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "nanoid": "^3.3.8",
        "picocolors": "^1.1.1",
        "source-map-js": "^1.2.1"
      },
      "engines": {
        "node": "^10 || ^12 || >=14"
      }
    },
    "node_modules/postcss-import": {
      "version": "15.1.0",
      "resolved": "https://registry.npmjs.org/postcss-import/-/postcss-import-15.1.0.tgz",
      "integrity": "sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "postcss-value-parser": "^4.0.0",
        "read-cache": "^1.0.0",
        "resolve": "^1.1.7"
      },
      "engines": {
        "node": ">=14.0.0"
      },
      "peerDependencies": {
        "postcss": "^8.0.0"
      }
    },
    "node_modules/postcss-js": {
      "version": "4.0.1",
      "resolved": "https://registry.npmjs.org/postcss-js/-/postcss-js-4.0.1.tgz",
      "integrity": "sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "camelcase-css": "^2.0.1"
      },
      "engines": {
        "node": "^12 || ^14 || >= 16"
      },
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/postcss/"
      },
      "peerDependencies": {
        "postcss": "^8.4.21"
      }
    },
    "node_modules/postcss-load-config": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-4.0.2.tgz",
      "integrity": "sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "lilconfig": "^3.0.0",
        "yaml": "^2.3.4"
      },
      "engines": {
        "node": ">= 14"
      },
      "peerDependencies": {
        "postcss": ">=8.0.9",
        "ts-node": ">=9.0.0"
      },
      "peerDependenciesMeta": {
        "postcss": {
          "optional": true
        },
        "ts-node": {
          "optional": true
        }
      }
    },
    "node_modules/postcss-nested": {
      "version": "6.2.0",
      "resolved": "https://registry.npmjs.org/postcss-nested/-/postcss-nested-6.2.0.tgz",
      "integrity": "sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/postcss/"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "postcss-selector-parser": "^6.1.1"
      },
      "engines": {
        "node": ">=12.0"
      },
      "peerDependencies": {
        "postcss": "^8.2.14"
      }
    },
    "node_modules/postcss-selector-parser": {
      "version": "6.1.2",
      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.1.2.tgz",
      "integrity": "sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "cssesc": "^3.0.0",
        "util-deprecate": "^1.0.2"
      },
      "engines": {
        "node": ">=4"
      }
    },
    "node_modules/postcss-value-parser": {
      "version": "4.2.0",
      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
      "integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/proxy-from-env": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz",
      "integrity": "sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==",
      "license": "MIT"
    },
    "node_modules/queue-microtask": {
      "version": "1.2.3",
      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT"
    },
    "node_modules/read-cache": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/read-cache/-/read-cache-1.0.0.tgz",
      "integrity": "sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "pify": "^2.3.0"
      }
    },
    "node_modules/readdirp": {
      "version": "3.6.0",
      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
      "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "picomatch": "^2.2.1"
      },
      "engines": {
        "node": ">=8.10.0"
      }
    },
    "node_modules/resolve": {
      "version": "1.22.10",
      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.10.tgz",
      "integrity": "sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "is-core-module": "^2.16.0",
        "path-parse": "^1.0.7",
        "supports-preserve-symlinks-flag": "^1.0.0"
      },
      "bin": {
        "resolve": "bin/resolve"
      },
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/reusify": {
      "version": "1.1.0",
      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz",
      "integrity": "sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "iojs": ">=1.0.0",
        "node": ">=0.10.0"
      }
    },
    "node_modules/rfdc": {
      "version": "1.4.1",
      "resolved": "https://registry.npmjs.org/rfdc/-/rfdc-1.4.1.tgz",
      "integrity": "sha512-q1b3N5QkRUWUl7iyylaaj3kOpIT0N2i9MqIEQXP73GVsN9cw3fdx8X63cEmWhJGi2PPCF23Ijp7ktmd39rawIA==",
      "license": "MIT"
    },
    "node_modules/rollup": {
      "version": "4.41.1",
      "resolved": "https://registry.npmjs.org/rollup/-/rollup-4.41.1.tgz",
      "integrity": "sha512-cPmwD3FnFv8rKMBc1MxWCwVQFxwf1JEmSX3iQXrRVVG15zerAIXRjMFVWnd5Q5QvgKF7Aj+5ykXFhUl+QGnyOw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@types/estree": "1.0.7"
      },
      "bin": {
        "rollup": "dist/bin/rollup"
      },
      "engines": {
        "node": ">=18.0.0",
        "npm": ">=8.0.0"
      },
      "optionalDependencies": {
        "@rollup/rollup-android-arm-eabi": "4.41.1",
        "@rollup/rollup-android-arm64": "4.41.1",
        "@rollup/rollup-darwin-arm64": "4.41.1",
        "@rollup/rollup-darwin-x64": "4.41.1",
        "@rollup/rollup-freebsd-arm64": "4.41.1",
        "@rollup/rollup-freebsd-x64": "4.41.1",
        "@rollup/rollup-linux-arm-gnueabihf": "4.41.1",
        "@rollup/rollup-linux-arm-musleabihf": "4.41.1",
        "@rollup/rollup-linux-arm64-gnu": "4.41.1",
        "@rollup/rollup-linux-arm64-musl": "4.41.1",
        "@rollup/rollup-linux-loongarch64-gnu": "4.41.1",
        "@rollup/rollup-linux-powerpc64le-gnu": "4.41.1",
        "@rollup/rollup-linux-riscv64-gnu": "4.41.1",
        "@rollup/rollup-linux-riscv64-musl": "4.41.1",
        "@rollup/rollup-linux-s390x-gnu": "4.41.1",
        "@rollup/rollup-linux-x64-gnu": "4.41.1",
        "@rollup/rollup-linux-x64-musl": "4.41.1",
        "@rollup/rollup-win32-arm64-msvc": "4.41.1",
        "@rollup/rollup-win32-ia32-msvc": "4.41.1",
        "@rollup/rollup-win32-x64-msvc": "4.41.1",
        "fsevents": "~2.3.2"
      }
    },
    "node_modules/run-parallel": {
      "version": "1.2.0",
      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
      "dev": true,
      "funding": [
        {
          "type": "github",
          "url": "https://github.com/sponsors/feross"
        },
        {
          "type": "patreon",
          "url": "https://www.patreon.com/feross"
        },
        {
          "type": "consulting",
          "url": "https://feross.org/support"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "queue-microtask": "^1.2.2"
      }
    },
    "node_modules/shebang-command": {
      "version": "2.0.0",
      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "shebang-regex": "^3.0.0"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/shebang-regex": {
      "version": "3.0.0",
      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/signal-exit": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz",
      "integrity": "sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==",
      "dev": true,
      "license": "ISC",
      "engines": {
        "node": ">=14"
      },
      "funding": {
        "url": "https://github.com/sponsors/isaacs"
      }
    },
    "node_modules/source-map-js": {
      "version": "1.2.1",
      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
      "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/speakingurl": {
      "version": "14.0.1",
      "resolved": "https://registry.npmjs.org/speakingurl/-/speakingurl-14.0.1.tgz",
      "integrity": "sha512-1POYv7uv2gXoyGFpBCmpDVSNV74IfsWlDW216UPjbWufNf+bSU6GdbDsxdcxtfwb4xlI3yxzOTKClUosxARYrQ==",
      "license": "BSD-3-Clause",
      "engines": {
        "node": ">=0.10.0"
      }
    },
    "node_modules/string-width": {
      "version": "5.1.2",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz",
      "integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "eastasianwidth": "^0.2.0",
        "emoji-regex": "^9.2.2",
        "strip-ansi": "^7.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/sindresorhus"
      }
    },
    "node_modules/string-width-cjs": {
      "name": "string-width",
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/string-width-cjs/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/string-width-cjs/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/string-width-cjs/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-ansi": {
      "version": "7.1.0",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz",
      "integrity": "sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^6.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/strip-ansi?sponsor=1"
      }
    },
    "node_modules/strip-ansi-cjs": {
      "name": "strip-ansi",
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/strip-ansi-cjs/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/sucrase": {
      "version": "3.35.0",
      "resolved": "https://registry.npmjs.org/sucrase/-/sucrase-3.35.0.tgz",
      "integrity": "sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@jridgewell/gen-mapping": "^0.3.2",
        "commander": "^4.0.0",
        "glob": "^10.3.10",
        "lines-and-columns": "^1.1.6",
        "mz": "^2.7.0",
        "pirates": "^4.0.1",
        "ts-interface-checker": "^0.1.9"
      },
      "bin": {
        "sucrase": "bin/sucrase",
        "sucrase-node": "bin/sucrase-node"
      },
      "engines": {
        "node": ">=16 || 14 >=14.17"
      }
    },
    "node_modules/superjson": {
      "version": "2.2.2",
      "resolved": "https://registry.npmjs.org/superjson/-/superjson-2.2.2.tgz",
      "integrity": "sha512-5JRxVqC8I8NuOUjzBbvVJAKNM8qoVuH0O77h4WInc/qC2q5IreqKxYwgkga3PfA22OayK2ikceb/B26dztPl+Q==",
      "license": "MIT",
      "dependencies": {
        "copy-anything": "^3.0.2"
      },
      "engines": {
        "node": ">=16"
      }
    },
    "node_modules/supports-preserve-symlinks-flag": {
      "version": "1.0.0",
      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">= 0.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/ljharb"
      }
    },
    "node_modules/tailwindcss": {
      "version": "3.4.17",
      "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-3.4.17.tgz",
      "integrity": "sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "@alloc/quick-lru": "^5.2.0",
        "arg": "^5.0.2",
        "chokidar": "^3.6.0",
        "didyoumean": "^1.2.2",
        "dlv": "^1.1.3",
        "fast-glob": "^3.3.2",
        "glob-parent": "^6.0.2",
        "is-glob": "^4.0.3",
        "jiti": "^1.21.6",
        "lilconfig": "^3.1.3",
        "micromatch": "^4.0.8",
        "normalize-path": "^3.0.0",
        "object-hash": "^3.0.0",
        "picocolors": "^1.1.1",
        "postcss": "^8.4.47",
        "postcss-import": "^15.1.0",
        "postcss-js": "^4.0.1",
        "postcss-load-config": "^4.0.2",
        "postcss-nested": "^6.2.0",
        "postcss-selector-parser": "^6.1.2",
        "resolve": "^1.22.8",
        "sucrase": "^3.35.0"
      },
      "bin": {
        "tailwind": "lib/cli.js",
        "tailwindcss": "lib/cli.js"
      },
      "engines": {
        "node": ">=14.0.0"
      }
    },
    "node_modules/tailwindcss/node_modules/jiti": {
      "version": "1.21.7",
      "resolved": "https://registry.npmjs.org/jiti/-/jiti-1.21.7.tgz",
      "integrity": "sha512-/imKNG4EbWNrVjoNC/1H5/9GFy+tqjGBHCaSsN+P2RnPqjsLmv6UD3Ej+Kj8nBWaRAwyk7kK5ZUc+OEatnTR3A==",
      "dev": true,
      "license": "MIT",
      "bin": {
        "jiti": "bin/jiti.js"
      }
    },
    "node_modules/tapable": {
      "version": "2.2.2",
      "resolved": "https://registry.npmjs.org/tapable/-/tapable-2.2.2.tgz",
      "integrity": "sha512-Re10+NauLTMCudc7T5WLFLAwDhQ0JWdrMK+9B2M8zR5hRExKmsRDCBA7/aV/pNJFltmBFO5BAMlQFi/vq3nKOg==",
      "license": "MIT",
      "engines": {
        "node": ">=6"
      }
    },
    "node_modules/tar": {
      "version": "7.4.3",
      "resolved": "https://registry.npmjs.org/tar/-/tar-7.4.3.tgz",
      "integrity": "sha512-5S7Va8hKfV7W5U6g3aYxXmlPoZVAwUMy9AOKyF2fVuZa2UD3qZjg578OrLRt8PcNN1PleVaL/5/yYATNL0ICUw==",
      "license": "ISC",
      "dependencies": {
        "@isaacs/fs-minipass": "^4.0.0",
        "chownr": "^3.0.0",
        "minipass": "^7.1.2",
        "minizlib": "^3.0.1",
        "mkdirp": "^3.0.1",
        "yallist": "^5.0.0"
      },
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/thenify": {
      "version": "3.3.1",
      "resolved": "https://registry.npmjs.org/thenify/-/thenify-3.3.1.tgz",
      "integrity": "sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "any-promise": "^1.0.0"
      }
    },
    "node_modules/thenify-all": {
      "version": "1.6.0",
      "resolved": "https://registry.npmjs.org/thenify-all/-/thenify-all-1.6.0.tgz",
      "integrity": "sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "thenify": ">= 3.1.0 < 4"
      },
      "engines": {
        "node": ">=0.8"
      }
    },
    "node_modules/tinyglobby": {
      "version": "0.2.14",
      "resolved": "https://registry.npmjs.org/tinyglobby/-/tinyglobby-0.2.14.tgz",
      "integrity": "sha512-tX5e7OM1HnYr2+a2C/4V0htOcSQcoSTH9KgJnVvNm5zm/cyEWKJ7j7YutsH9CxMdtOkkLFy2AHrMci9IM8IPZQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "fdir": "^6.4.4",
        "picomatch": "^4.0.2"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "funding": {
        "url": "https://github.com/sponsors/SuperchupuDev"
      }
    },
    "node_modules/tinyglobby/node_modules/fdir": {
      "version": "6.4.5",
      "resolved": "https://registry.npmjs.org/fdir/-/fdir-6.4.5.tgz",
      "integrity": "sha512-4BG7puHpVsIYxZUbiUE3RqGloLaSSwzYie5jvasC4LWuBWzZawynvYouhjbQKw2JuIGYdm0DzIxl8iVidKlUEw==",
      "dev": true,
      "license": "MIT",
      "peerDependencies": {
        "picomatch": "^3 || ^4"
      },
      "peerDependenciesMeta": {
        "picomatch": {
          "optional": true
        }
      }
    },
    "node_modules/tinyglobby/node_modules/picomatch": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-4.0.2.tgz",
      "integrity": "sha512-M7BAV6Rlcy5u+m6oPhAPFgJTzAioX/6B0DxyvDlo9l8+T3nLKbrczg2WLUyzd45L8RqfUMyGPzekbMvX2Ldkwg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/to-regex-range": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
      "license": "MIT",
      "dependencies": {
        "is-number": "^7.0.0"
      },
      "engines": {
        "node": ">=8.0"
      }
    },
    "node_modules/ts-interface-checker": {
      "version": "0.1.13",
      "resolved": "https://registry.npmjs.org/ts-interface-checker/-/ts-interface-checker-0.1.13.tgz",
      "integrity": "sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==",
      "dev": true,
      "license": "Apache-2.0"
    },
    "node_modules/update-browserslist-db": {
      "version": "1.1.3",
      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz",
      "integrity": "sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==",
      "dev": true,
      "funding": [
        {
          "type": "opencollective",
          "url": "https://opencollective.com/browserslist"
        },
        {
          "type": "tidelift",
          "url": "https://tidelift.com/funding/github/npm/browserslist"
        },
        {
          "type": "github",
          "url": "https://github.com/sponsors/ai"
        }
      ],
      "license": "MIT",
      "dependencies": {
        "escalade": "^3.2.0",
        "picocolors": "^1.1.1"
      },
      "bin": {
        "update-browserslist-db": "cli.js"
      },
      "peerDependencies": {
        "browserslist": ">= 4.21.0"
      }
    },
    "node_modules/util-deprecate": {
      "version": "1.0.2",
      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/vite": {
      "version": "6.3.5",
      "resolved": "https://registry.npmjs.org/vite/-/vite-6.3.5.tgz",
      "integrity": "sha512-cZn6NDFE7wdTpINgs++ZJ4N49W2vRp8LCKrn3Ob1kYNtOo21vfDoaV5GzBfLU4MovSAB8uNRm4jgzVQZ+mBzPQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "esbuild": "^0.25.0",
        "fdir": "^6.4.4",
        "picomatch": "^4.0.2",
        "postcss": "^8.5.3",
        "rollup": "^4.34.9",
        "tinyglobby": "^0.2.13"
      },
      "bin": {
        "vite": "bin/vite.js"
      },
      "engines": {
        "node": "^18.0.0 || ^20.0.0 || >=22.0.0"
      },
      "funding": {
        "url": "https://github.com/vitejs/vite?sponsor=1"
      },
      "optionalDependencies": {
        "fsevents": "~2.3.3"
      },
      "peerDependencies": {
        "@types/node": "^18.0.0 || ^20.0.0 || >=22.0.0",
        "jiti": ">=1.21.0",
        "less": "*",
        "lightningcss": "^1.21.0",
        "sass": "*",
        "sass-embedded": "*",
        "stylus": "*",
        "sugarss": "*",
        "terser": "^5.16.0",
        "tsx": "^4.8.1",
        "yaml": "^2.4.2"
      },
      "peerDependenciesMeta": {
        "@types/node": {
          "optional": true
        },
        "jiti": {
          "optional": true
        },
        "less": {
          "optional": true
        },
        "lightningcss": {
          "optional": true
        },
        "sass": {
          "optional": true
        },
        "sass-embedded": {
          "optional": true
        },
        "stylus": {
          "optional": true
        },
        "sugarss": {
          "optional": true
        },
        "terser": {
          "optional": true
        },
        "tsx": {
          "optional": true
        },
        "yaml": {
          "optional": true
        }
      }
    },
    "node_modules/vite/node_modules/fdir": {
      "version": "6.4.5",
      "resolved": "https://registry.npmjs.org/fdir/-/fdir-6.4.5.tgz",
      "integrity": "sha512-4BG7puHpVsIYxZUbiUE3RqGloLaSSwzYie5jvasC4LWuBWzZawynvYouhjbQKw2JuIGYdm0DzIxl8iVidKlUEw==",
      "dev": true,
      "license": "MIT",
      "peerDependencies": {
        "picomatch": "^3 || ^4"
      },
      "peerDependenciesMeta": {
        "picomatch": {
          "optional": true
        }
      }
    },
    "node_modules/vite/node_modules/picomatch": {
      "version": "4.0.2",
      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-4.0.2.tgz",
      "integrity": "sha512-M7BAV6Rlcy5u+m6oPhAPFgJTzAioX/6B0DxyvDlo9l8+T3nLKbrczg2WLUyzd45L8RqfUMyGPzekbMvX2Ldkwg==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/sponsors/jonschlinkert"
      }
    },
    "node_modules/vue": {
      "version": "3.5.15",
      "resolved": "https://registry.npmjs.org/vue/-/vue-3.5.15.tgz",
      "integrity": "sha512-aD9zK4rB43JAMK/5BmS4LdPiEp8Fdh8P1Ve/XNuMF5YRf78fCyPE6FUbQwcaWQ5oZ1R2CD9NKE0FFOVpMR7gEQ==",
      "license": "MIT",
      "dependencies": {
        "@vue/compiler-dom": "3.5.15",
        "@vue/compiler-sfc": "3.5.15",
        "@vue/runtime-dom": "3.5.15",
        "@vue/server-renderer": "3.5.15",
        "@vue/shared": "3.5.15"
      },
      "peerDependencies": {
        "typescript": "*"
      },
      "peerDependenciesMeta": {
        "typescript": {
          "optional": true
        }
      }
    },
    "node_modules/vue-router": {
      "version": "4.5.1",
      "resolved": "https://registry.npmjs.org/vue-router/-/vue-router-4.5.1.tgz",
      "integrity": "sha512-ogAF3P97NPm8fJsE4by9dwSYtDwXIY1nFY9T6DyQnGHd1E2Da94w9JIolpe42LJGIl0DwOHBi8TcRPlPGwbTtw==",
      "license": "MIT",
      "dependencies": {
        "@vue/devtools-api": "^6.6.4"
      },
      "funding": {
        "url": "https://github.com/sponsors/posva"
      },
      "peerDependencies": {
        "vue": "^3.2.0"
      }
    },
    "node_modules/vue-router/node_modules/@vue/devtools-api": {
      "version": "6.6.4",
      "resolved": "https://registry.npmjs.org/@vue/devtools-api/-/devtools-api-6.6.4.tgz",
      "integrity": "sha512-sGhTPMuXqZ1rVOk32RylztWkfXTRhuS7vgAKv0zjqk8gbsHkJ7xfFf+jbySxt7tWObEJwyKaHMikV/WGDiQm8g==",
      "license": "MIT"
    },
    "node_modules/which": {
      "version": "2.0.2",
      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
      "dev": true,
      "license": "ISC",
      "dependencies": {
        "isexe": "^2.0.0"
      },
      "bin": {
        "node-which": "bin/node-which"
      },
      "engines": {
        "node": ">= 8"
      }
    },
    "node_modules/wrap-ansi": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz",
      "integrity": "sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^6.1.0",
        "string-width": "^5.0.1",
        "strip-ansi": "^7.0.1"
      },
      "engines": {
        "node": ">=12"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrap-ansi-cjs": {
      "name": "wrap-ansi",
      "version": "7.0.0",
      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-styles": "^4.0.0",
        "string-width": "^4.1.0",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=10"
      },
      "funding": {
        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
      }
    },
    "node_modules/wrap-ansi-cjs/node_modules/ansi-regex": {
      "version": "5.0.1",
      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
      "dev": true,
      "license": "MIT",
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi-cjs/node_modules/ansi-styles": {
      "version": "4.3.0",
      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "color-convert": "^2.0.1"
      },
      "engines": {
        "node": ">=8"
      },
      "funding": {
        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
      }
    },
    "node_modules/wrap-ansi-cjs/node_modules/emoji-regex": {
      "version": "8.0.0",
      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
      "dev": true,
      "license": "MIT"
    },
    "node_modules/wrap-ansi-cjs/node_modules/string-width": {
      "version": "4.2.3",
      "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
      "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "emoji-regex": "^8.0.0",
        "is-fullwidth-code-point": "^3.0.0",
        "strip-ansi": "^6.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/wrap-ansi-cjs/node_modules/strip-ansi": {
      "version": "6.0.1",
      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
      "dev": true,
      "license": "MIT",
      "dependencies": {
        "ansi-regex": "^5.0.1"
      },
      "engines": {
        "node": ">=8"
      }
    },
    "node_modules/yallist": {
      "version": "5.0.0",
      "resolved": "https://registry.npmjs.org/yallist/-/yallist-5.0.0.tgz",
      "integrity": "sha512-YgvUTfwqyc7UXVMrB+SImsVYSmTS8X/tSrtdNZMImM+n7+QTriRXyXim0mBrTXNeqzVF0KWGgHPeiyViFFrNDw==",
      "license": "BlueOak-1.0.0",
      "engines": {
        "node": ">=18"
      }
    },
    "node_modules/yaml": {
      "version": "2.8.0",
      "resolved": "https://registry.npmjs.org/yaml/-/yaml-2.8.0.tgz",
      "integrity": "sha512-4lLa/EcQCB0cJkyts+FpIRx5G/llPxfP6VQU5KByHEhLxY3IJCH0f0Hy1MHI8sClTvsIb8qwRJ6R/ZdlDJ/leQ==",
      "dev": true,
      "license": "ISC",
      "bin": {
        "yaml": "bin.mjs"
      },
      "engines": {
        "node": ">= 14.6"
      }
    }
  }
}


================================================================================
### PLIK: package.json
================================================================================

{
  "name": "api-frontend",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview"
  },
  "dependencies": {
    "@heroicons/vue": "^2.2.0",
    "@tailwindcss/cli": "^4.1.7",
    "axios": "^1.9.0",
    "lodash-es": "^4.17.21",
    "pinia": "^3.0.2",
    "vue": "^3.5.13",
    "vue-router": "^4.5.1"
  },
  "devDependencies": {
    "@vitejs/plugin-vue": "^5.2.3",
    "autoprefixer": "^10.4.21",
    "postcss": "^8.5.3",
    "tailwindcss": "^3.4.17",
    "vite": "^6.3.5"
  }
}


================================================================================
### PLIK: postcss.config.js
================================================================================

import tailwindcss from 'tailwindcss';
import autoprefixer from 'autoprefixer';

export default {
  plugins: {
    tailwindcss,
    autoprefixer,
  },
};


================================================================================
### PLIK: tailwind.config.js
================================================================================

/** @type {import('tailwindcss').Config} */
export default {
  content: [
    "./index.html",
    "./src/**/*.{vue,js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}


================================================================================
### PLIK: vite.config.js
================================================================================

// vite.config.js
import { defineConfig } from 'vite'
import vue from '@vitejs/plugin-vue'
import path from 'path'

export default defineConfig({
  plugins: [vue()],
  resolve: {
    alias: {
      '@': path.resolve(__dirname, './src'),
    },
  },
})

================================================================================
### PLIK: src\App.vue
================================================================================

<template>
  <router-view />
</template>

<script setup>
// Logika specyficzna dla App.vue, jeśli potrzebna,
// ale dla głównego layoutu dashboardu logika będzie w DashboardLayout.vue
</script>

<style>
/* Globalne style są już importowane w main.js poprzez import './style.css'; */
/* Jeśli potrzebujesz tutaj specyficznych stylów tylko dla #app-container lub globalnych styli,
   które nie są w style.css, możesz je tu dodać, ale NIE importuj ponownie './style.css' */
</style>

================================================================================
### PLIK: src\main.js
================================================================================

import { createApp } from 'vue'
import App from './App.vue'
import router from './router'
import { createPinia } from 'pinia'
import './assets/main.css'

const app = createApp(App)

const pinia = createPinia()
app.use(pinia)
app.use(router)
app.mount('#app')


================================================================================
### PLIK: src\assets\main.css
================================================================================

@tailwind base;
@tailwind components;
@tailwind utilities;


================================================================================
### PLIK: src\components\AddressDisplay.vue
================================================================================

<template>
  <div class="p-3 rounded-md shadow-sm" :class="containerClasses">
    <strong class="block text-sm font-semibold mb-2" :class="titleClasses">{{ title }}</strong>
    <div v-if="parsedAddress && !parsingError" class="space-y-1 text-xs">
      <div v-for="field in displayFields" :key="field.key" class="flex items-baseline">
        <span class="text-slate-500 w-24 sm:w-28 shrink-0">{{ field.label }}:</span>
        <span
          class="font-medium break-words"
          :class="getFieldClass(field.key, parsedAddress[field.key])"
        >
          {{ parsedAddress[field.key] || 'N/A' }}
        </span>
      </div>
      <div v-if="!hasAddressData(parsedAddress) && !parsingError" class="text-xs text-slate-400 italic mt-2">
        (Brak danych adresowych w źródle)
      </div>
    </div>
    <div v-else-if="parsingError" class="text-xs text-red-500 italic">
      {{ parsingError }}
    </div>
    <div v-else class="text-xs text-slate-400 italic">
      Brak danych adresowych.
    </div>
  </div>
</template>

<script setup>
import { computed, ref, watch } from 'vue';

const props = defineProps({
  title: { type: String, required: true },
  addressString: { type: String, default: '' },
  compareToAddressString: { type: String, default: '' },
  addressContext: { type: String, default: 'delivery' }, // 'pickup', 'delivery', 'database_dto', 'here_suggestion', 'provider_suggestion'
  highlightAsSource: { type: String, default: 'neutral' }
});

const parsingError = ref(null);

const displayFields = [
  { key: 'name', label: 'Nazwa/Kontakt' },
  { key: 'street', label: 'Ulica' },
  { key: 'houseNumber', label: 'Nr domu' },
  { key: 'postalCode', label: 'Kod pocztowy' },
  { key: 'city', label: 'Miasto' },
  { key: 'countryName', label: 'Kraj' }
];

const normalizeString = (str) => {
  return str ? String(str).trim().toLowerCase() : '';
};

const parseAddressDataInternal = (jsonString, context, errorObject) => {
  if (!jsonString) {
    errorObject.value = 'Brak danych wejściowych (null lub pusty string).';
    return null;
  }
  try {
    const data = JSON.parse(jsonString);
    errorObject.value = null;

    if (context === 'pickup') {
      return {
        street: data.PickUpStreet,
        houseNumber: data.PickUpHouseNo,
        postalCode: data.PickUpPostalCode,
        city: data.PickUpCity,
        name: data.PickUpName,
        countryName: data.PickUpCountry || ''
      };
    } else if (context === 'delivery') {
      return {
        street: data.DeliveryStreet,
        houseNumber: data.DeliveryHouseNo,
        postalCode: data.DeliveryPostalCode,
        city: data.DeliveryCity,
        name: data.DeliveryName,
        countryName: data.DeliveryCountry || ''
      };
    } else if (context === 'database_dto') {
      return {
        street: data.street,
        houseNumber: data.houseNo,
        postalCode: data.postalCode,
        city: data.city,
        name: data.name || '',
        countryName: data.country || ''
      };
    } else if (context === 'here_suggestion') { // Kontekst dla specyficznej struktury HERE (jeśli jest inna)
      return {
        street: data.street,
        houseNumber: data.houseNumber,
        postalCode: data.postalCode,
        city: data.city,
        name: data.label, // HERE używa 'label'
        countryName: data.countryName
      };
    } else if (context === 'provider_suggestion') { // NOWY KONTEKST dla InternalAddressSuggestionDTO
      return {
        street: data.street,
        houseNumber: data.houseNumber,
        postalCode: data.postalCode,
        city: data.city,
        name: data.fullAddressLabel || data.name, // Użyj fullAddressLabel jako głównego opisu/nazwy
        countryName: data.countryName
      };
    }

    // Fallback, jeśli kontekst nie jest dokładnie dopasowany, ale próbujemy zgadnąć
    if (data.DeliveryStreet || data.PickUpStreet) {
        console.warn(`AddressDisplay: Próba zgadnięcia kontekstu 'delivery' dla: ${jsonString.substring(0,100)}...`);
        return parseAddressDataInternal(jsonString, 'delivery', errorObject);
    } else if (data.street && data.city && data.postalCode && data.fullAddressLabel) { // Heurystyka dla InternalAddressSuggestionDTO
        console.warn(`AddressDisplay: Próba zgadnięcia kontekstu 'provider_suggestion' dla: ${jsonString.substring(0,100)}...`);
        return parseAddressDataInternal(jsonString, 'provider_suggestion', errorObject);
    } else if (data.street && data.city && data.postalCode) { // Heurystyka dla DatabaseAddressDTO
        console.warn(`AddressDisplay: Próba zgadnięcia kontekstu 'database_dto' dla: ${jsonString.substring(0,100)}...`);
        return parseAddressDataInternal(jsonString, 'database_dto', errorObject);
    }

    console.error(`AddressDisplay: Nieznany lub nieobsługiwany kontekst '${context}' w parseAddressDataInternal.`, data);
    errorObject.value = `Nie można zinterpretować danych adresowych dla kontekstu: ${context}.`;
    return data; // Zwróć surowe dane, jeśli nie można zmapować

  } catch (e) {
    console.error(`AddressDisplay: Błąd parsowania JSON dla kontekstu '${context}':`, e, jsonString.substring(0,200));
    errorObject.value = `Niepoprawny format danych adresowych. Szczegóły: ${e.message}`;
    return null;
  }
};

const parsedAddress = computed(() => {
  parsingError.value = null;
  return parseAddressDataInternal(props.addressString, props.addressContext, parsingError);
});

const parsedCompareToAddress = computed(() => {
  if (!props.compareToAddressString) return null;
  const compareContext = (props.addressContext === 'pickup' || props.addressContext === 'delivery')
                           ? 'database_dto'
                           : props.addressContext;
  const tempError = ref(null);
  return parseAddressDataInternal(props.compareToAddressString, compareContext, tempError);
});

const hasAddressData = (addressObject) => {
  if (!addressObject) return false;
  return displayFields.some(field => {
    const value = addressObject[field.key];
    return value !== null && value !== undefined && String(value).trim() !== '';
  });
};

const containerClasses = computed(() => {
  switch(props.highlightAsSource) {
    case 'error': return 'bg-red-50 border border-red-200';
    case 'truth': return 'bg-green-50 border border-green-200';
    default: return 'bg-slate-50 border border-slate-200';
  }
});

const titleClasses = computed(() => {
  switch(props.highlightAsSource) {
    case 'error': return 'text-red-700';
    case 'truth': return 'text-green-700';
    default: return 'text-slate-700';
  }
});

const getFieldClass = (fieldKey, fieldValue) => {
  if (props.compareToAddressString && parsedCompareToAddress.value && parsedAddress.value) {
    const compareValue = parsedCompareToAddress.value[fieldKey];
    const originalValue = fieldValue;
    if (normalizeString(originalValue) !== normalizeString(compareValue)) {
      return 'text-red-600 font-semibold bg-red-100 px-1 rounded-sm';
    }
  }
  return 'text-slate-800';
};

watch(() => props.addressString, () => {
  parsingError.value = null;
});
</script>

================================================================================
### PLIK: src\components\ErrorDetailsModal.vue
================================================================================

<template>
  <div
    v-if="error"
    class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm overflow-y-auto h-full w-full flex items-center justify-center z-50 transition-opacity duration-300 ease-out px-4"
    @click.self="handleClose"
    role="dialog"
    aria-modal="true"
    :aria-labelledby="'modal-title-' + error.eventId"
  >
    <div class="relative w-full max-w-6xl mx-auto my-6 transform transition-all duration-300 ease-out">
      <div class="border-0 rounded-xl shadow-2xl relative flex flex-col w-full bg-white outline-none focus:outline-none max-h-[90vh]">
        <div class="flex items-start justify-between p-5 border-b border-solid border-slate-200 rounded-t-xl bg-slate-50">
          <h3 :id="'modal-title-' + error.eventId" class="text-xl lg:text-2xl font-semibold text-slate-700">
            Szczegóły Błędu: <span class="text-indigo-600">{{ error.eventId ? error.eventId.substring(0,12) : 'N/A' }}...</span>
          </h3>
          <button
            class="p-1 ml-auto bg-transparent border-0 text-slate-600 hover:text-slate-900 opacity-70 hover:opacity-100 text-2xl leading-none font-semibold outline-none focus:outline-none transition-colors"
            @click="handleClose"
            aria-label="Zamknij modal"
          >
            <span class="bg-transparent h-6 w-6 block outline-none focus:outline-none">×</span>
          </button>
        </div>

        <div class="relative p-6 flex-auto overflow-y-auto">
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-6 gap-y-3 mb-6 text-sm">
            <div><strong class="text-slate-500 block">Request ID:</strong> <span class="text-slate-700 break-all">{{ error.requestID || 'N/A' }}</span></div>
            <div><strong class="text-slate-500 block">Barcode:</strong> <span class="text-slate-700">{{ error.barcode || 'N/A' }}</span></div>
            <div><strong class="text-slate-500 block">Source Topic:</strong> <span class="text-slate-700">{{ error.sourceTopic || 'N/A' }}</span></div>
            <div>
              <strong class="text-slate-500 block">Error Type:</strong>
              <span :class="getErrorTypeClass(error.errorType)" class="px-2.5 py-1 rounded-full text-xs font-bold inline-block leading-tight">{{ error.errorType || 'N/A' }}</span>
            </div>
            <div><strong class="text-slate-500 block">Address Verification Status:</strong> <span class="text-slate-700">{{ error.addressVerificationStatus || 'N/A' }}</span></div>
            <div><strong class="text-slate-500 block">Data Utworzenia Rekordu:</strong> <span class="text-slate-700">{{ formatDate(error.createdAt) }}</span></div>
            <div v-if="error.kafkaMessageTimestamp" class="md:col-span-1 lg:col-span-1">
                <strong class="text-slate-500 block">Czas Odebrania Wiadomości:</strong>
                <span class="text-slate-700">{{ formatDate(error.kafkaMessageTimestamp) }}</span>
            </div>
            <div><strong class="text-slate-500 block">Status Ponowienia:</strong> <span class="text-slate-700">{{ error.resubmissionStatus || 'N/A' }}</span></div>
          </div>

          <div v-if="error.errorMessage" class="mb-5 p-4 bg-red-50 border border-red-200 rounded-lg">
            <strong class="text-red-700 block mb-1.5 text-xs uppercase font-bold">Komunikat Błędu:</strong>
            <pre class="text-sm whitespace-pre-wrap text-red-600 p-2 rounded bg-red-100/50">{{ error.errorMessage }}</pre>
          </div>

          <div v-if="error.stacktrace" class="mb-5 p-4 bg-slate-50 border border-slate-200 rounded-lg">
            <strong class="text-slate-700 block mb-1.5 text-xs uppercase font-bold">Stacktrace:</strong>
            <pre class="text-xs whitespace-pre-wrap max-h-48 overflow-y-auto p-2 rounded bg-slate-100/80 font-mono">{{ error.stacktrace }}</pre>
          </div>
          <div v-if="isAddressErrorType(error.errorType)" class="mb-5 p-4 border-2 border-orange-300 rounded-lg bg-orange-50 shadow-sm">
            <h4 class="text-lg font-semibold text-orange-700 mb-4">Weryfikacja Adresu</h4>

            <div class="mb-4 p-3 bg-orange-100 border border-orange-200 rounded-md">
              <p class="text-sm font-medium text-orange-700">
                Problem dotyczy adresu:
                <span class="font-bold">{{ determineAddressContextTitle(error, 'order_relevant') }}</span>.
              </p>
              <div v-if="error.providerRawQuery" class="mt-2">
                <p class="text-xs text-slate-600 mb-1">
                    Zapytanie wysłane do dostawcy
                    <span v-if="providerNameFromSuggestionsOrQuery">
                        ({{ providerNameFromSuggestionsOrQuery }}):
                    </span>
                </p>
                <pre class="text-xs whitespace-pre-wrap p-2 rounded bg-slate-100 font-mono">{{ error.providerRawQuery }}</pre>
              </div>
            </div>

            <div class="grid grid-cols-1 lg:grid-cols-12 gap-6">
              <div class="lg:col-span-5 space-y-4">
                <AddressDisplay
                    :title="determineAddressContextTitle(error, 'order_relevant') + ' (Oryginalny ze zlecenia)'"
                    :address-string="error.originalAddressJson || error.rawPayload"
                    :address-context="determineAddressContextFromError(error, 'order_relevant')"
                    :compare-to-address-string="error.errorType === 'ADDRESS_ALIAS_MISMATCH_DB' ? error.dbAddressJson : null"
                    :highlight-as-source="error.errorType === 'ADDRESS_ALIAS_MISMATCH_DB' ? 'neutral' : 'error'"
                />
                <AddressDisplay
                    v-if="error.errorType === 'ADDRESS_ALIAS_MISMATCH_DB'"
                    title="Adres w Bazie Danych (oczekiwany dla aliasu)"
                    :address-string="error.dbAddressJson"
                    address-context="database_dto"
                    highlight-as-source="truth"
                />
                
                <div v-if="editableOrderData && activeAddressEditorContext" class="mt-4 p-4 border rounded-md bg-white shadow">
                  <h5 class="text-sm font-semibold mb-3 text-slate-700">
                    Uzupełnij / Popraw Dane Adresu {{ activeAddressEditorContext === 'pickup' ? 'Nadania' : 'Dostawy' }}:
                  </h5>
                  <div class="space-y-3">
                    <div v-for="field in (activeAddressEditorContext === 'pickup' ? addressFieldsDefinition.pickup : addressFieldsDefinition.delivery)" :key="field.modelKey">
                      <label :for="field.id" class="block text-xs font-medium text-slate-600 mb-0.5">{{ field.label }}:</label>
                      <input 
                        type="text" 
                        :id="field.id"
                        v-model="editableOrderData[field.modelKey]" 
                        class="text-xs p-2 border rounded-md w-full shadow-sm transition-colors"
                        :class="validationErrors[field.modelKey] ? 'border-red-500 focus:ring-red-500 focus:border-red-500 bg-red-50' : 'border-slate-300 focus:ring-indigo-500 focus:border-indigo-500'"
                        :placeholder="field.label"
                      />
                      <p v-if="validationErrors[field.modelKey]" class="text-xs text-red-600 mt-1">{{ validationErrors[field.modelKey] }}</p>
                    </div>
                  </div>
                </div>
              </div>

              <div class="lg:col-span-7">
                <div v-if="showSuggestions" class="mb-6">
                  <p class="text-orange-700 font-medium mb-2 text-sm">
                    Początkowe sugestie od dostawcy ({{ providerNameFromSuggestionsOrQuery }}):
                  </p>
                  <div class="space-y-3 max-h-60 overflow-y-auto pr-2">
                    <div
                      v-for="(suggestion, index) in error.suggestedAddresses"
                      :key="'initial-suggestion-' + error.eventId + '-' + index"
                      @click="selectSuggestion(suggestion, index, 'initial')"
                      class="p-1 rounded-lg hover:ring-2 hover:ring-indigo-500 focus:ring-indigo-500 focus:outline-none transition-all duration-150 ease-in-out cursor-pointer"
                      :class="selectedSuggestionIndex === index && lastSelectedSuggestionSource === 'initial' ? 'ring-2 ring-indigo-600 bg-indigo-50' : 'ring-1 ring-slate-300 hover:ring-slate-400'"
                      tabindex="0" @keypress.enter.space="selectSuggestion(suggestion, index, 'initial')">
                      <AddressDisplay
                        :title="'Sugestia ' + (suggestion.providerSource || 'Dostawcy') + ' ' + (index + 1)"
                        :address-string="JSON.stringify(suggestion)"
                        address-context="provider_suggestion"
                        :highlight-as-source="selectedSuggestionIndex === index && lastSelectedSuggestionSource === 'initial' ? 'truth' : 'neutral'"
                      />
                    </div>
                  </div>
                </div>

                <div v-if="activeAddressEditorContext && (isLoadingDynamicSuggestions || dynamicSuggestionsPolling.isLoading || dynamicSuggestions.length > 0 || dynamicSuggestionsPolling.error || dynamicSuggestionsError)">
                  <h5 class="text-sm font-semibold text-slate-700 mb-2 mt-4 border-t pt-3">
                    Dynamiczne Sugestie (na podstawie wprowadzanych danych):
                  </h5>
                  <div v-if="isLoadingDynamicSuggestions && !dynamicSuggestionsPolling.isLoading" class="text-xs text-slate-500 italic">Inicjowanie...</div>
                  <div v-if="dynamicSuggestionsPolling.isLoading" class="text-xs text-slate-500 italic flex items-center">
                     <span class="animate-spin h-3 w-3 mr-1 border-2 border-slate-400 border-t-transparent rounded-full"></span>
                    Ładowanie sugestii (ID: {{ dynamicSuggestionsPolling.correlationId?.substring(0,8) }})...
                  </div>
                  <div v-if="dynamicSuggestionsPolling.error || dynamicSuggestionsError" class="text-xs text-red-500 p-2 bg-red-50 rounded-md">
                    {{ dynamicSuggestionsPolling.error || dynamicSuggestionsError }}
                  </div>
                  
                  <div v-if="!isLoadingDynamicSuggestions && !dynamicSuggestionsPolling.isLoading && dynamicSuggestions.length > 0" class="space-y-3 max-h-60 overflow-y-auto pr-2">
                    <div
                      v-for="(suggestion, index) in dynamicSuggestions"
                      :key="'dyn-suggestion-' + index"
                      @click="selectSuggestion(suggestion, index, 'dynamic')"
                      class="p-1 rounded-lg hover:ring-2 hover:ring-teal-500 focus:ring-teal-500 focus:outline-none transition-all duration-150 ease-in-out cursor-pointer"
                      :class="selectedSuggestionIndex === index && lastSelectedSuggestionSource === 'dynamic' ? 'ring-2 ring-teal-600 bg-teal-50' : 'ring-1 ring-slate-300 hover:ring-slate-400'"
                      tabindex="0" @keypress.enter.space="selectSuggestion(suggestion, index, 'dynamic')">
                      <AddressDisplay
                        :title="'Dynamiczna Sugestia ' + (suggestion.providerSource || 'Dostawcy') + ' ' + (index + 1)"
                        :address-string="JSON.stringify(suggestion)"
                        address-context="provider_suggestion"
                        :highlight-as-source="selectedSuggestionIndex === index && lastSelectedSuggestionSource === 'dynamic' ? 'truth' : 'neutral'"
                      />
                    </div>
                  </div>
                   <div v-if="!isLoadingDynamicSuggestions && !dynamicSuggestionsPolling.isLoading && dynamicSuggestions.length === 0 && !dynamicSuggestionsPolling.error && !dynamicSuggestionsError && (editableOrderData && activeAddressEditorContext && (editableOrderData[activeAddressEditorContext === 'pickup' ? 'PickUpStreet' : 'DeliveryStreet'] || editableOrderData[activeAddressEditorContext === 'pickup' ? 'PickUpCity' : 'DeliveryCity']))" class="text-xs text-slate-500 italic mt-1">
                      Brak dynamicznych sugestii dla wprowadzonych danych.
                  </div>
                </div>
                <div v-if="showInvalidAddressMessage && !showSuggestions">
                    <p class="text-red-600 font-medium text-sm">
                        Adres nie został poprawnie zweryfikowany
                        <span v-if="providerNameFromSuggestionsOrQuery"> przez {{ providerNameFromSuggestionsOrQuery }}</span>
                        <span v-else> przez dostawcę</span>
                        i nie ma dostępnych sugestii lub wystąpił błąd usługi. Proszę ręcznie poprawić dane.
                    </p>
                     <p v-if="error.errorMessage && error.errorMessage.includes('java.lang.IllegalArgumentException')" class="text-xs text-red-500 mt-1">
                        Wskazówka: Błąd 'IllegalArgumentException' często oznacza problem z formatem danych wysyłanych do dostawcy (np. nieoczekiwane znaki).
                    </p>
                </div>
                <div v-if="error.errorType === 'ADDRESS_CUSTOMER_VERIFICATION_PENDING'" class="p-3 bg-yellow-100 text-yellow-700 rounded-md text-sm">
                    <p class="font-medium">Wysłano email do klienta z prośbą o weryfikację adresu. Oczekiwanie na odpowiedź.</p>
                </div>
              </div>
            </div>
          </div>

          <div>
            <label for="rawPayloadModal" class="block text-xs font-semibold text-slate-600 mb-1 uppercase">Raw Payload (JSON do edycji - oryginalne zlecenie):</label>
            <textarea
              id="rawPayloadModal"
              v-model="editablePayload"
              rows="10"
              class="mt-1 p-3 w-full border rounded-md shadow-sm sm:text-sm font-mono text-xs leading-relaxed focus:shadow-lg"
              :class="payloadJsonError ? 'border-red-500 focus:ring-red-500 focus:border-red-500 bg-red-50' : 'border-slate-300 focus:ring-indigo-500 focus:border-indigo-500'"
              placeholder="Edytuj JSON payload..."></textarea>
            <p v-if="payloadJsonError" class="text-xs text-red-600 mt-1">{{ payloadJsonError }}</p>
             <div v-if="validationErrors.general && !payloadJsonError" class="text-xs text-red-600 mt-1">
               {{ validationErrors.general }}
             </div>
          </div>
        </div>

        <div class="flex items-center justify-end p-5 border-t border-solid border-slate-200 rounded-b-xl bg-slate-50 space-x-3">
          <button
            @click="triggerSendVerificationEmail"
            v-if="canTriggerSendVerificationEmail(error.errorType)"
            :disabled="props.isEmailSending || !isPayloadValid"
            class="inline-flex items-center justify-center px-4 py-2 text-sm font-medium rounded-md shadow-sm text-white bg-gradient-to-r from-yellow-500 to-orange-500 hover:from-yellow-600 hover:to-orange-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500 disabled:opacity-60 disabled:cursor-not-allowed transition-all duration-150 ease-in-out"
          >
            <span v-if="props.isEmailSending" class="animate-spin h-4 w-4 -ml-1 mr-2 border-2 border-white border-t-transparent rounded-full"></span>
            Wyślij Email do Klienta
          </button>
          <button
            @click="triggerResubmit"
            :disabled="props.isResubmitting || !isPayloadValid"
            class="inline-flex items-center justify-center px-4 py-2 text-sm font-medium rounded-md shadow-sm text-white bg-gradient-to-r from-green-500 to-teal-500 hover:from-green-600 hover:to-teal-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-60 disabled:cursor-not-allowed transition-all duration-150 ease-in-out"
          >
            <span v-if="props.isResubmitting" class="animate-spin h-4 w-4 -ml-1 mr-2 border-2 border-white border-t-transparent rounded-full"></span>
            Zapisz i Prześlij Ponownie
          </button>
          <button
            @click="handleClose"
            class="px-4 py-2 text-sm font-medium rounded-md shadow-sm text-slate-700 bg-slate-200 hover:bg-slate-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-slate-400 transition-colors duration-150 ease-in-out"
          >
            Anuluj
          </button>
        </div>
        <div v-if="localResubmitMessage || localEmailSendMessage" class="px-5 pb-3 bg-slate-50 rounded-b-xl text-center">
            <p v-if="localResubmitMessage" :class="localResubmitMessageType === 'success' ? 'text-green-600' : 'text-red-600'" class="text-xs">{{ localResubmitMessage }}</p>
            <p v-if="localEmailSendMessage" :class="localEmailSendMessageType === 'success' ? 'text-green-600' : 'text-red-600'" class="text-xs mt-1">{{ localEmailSendMessage }}</p>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup>
import { ref, watch, onMounted, onUnmounted, computed, nextTick } from 'vue';
import AddressDisplay from './AddressDisplay.vue';
import apiClient from '@/services/api.js';
import { debounce } from 'lodash-es';

const props = defineProps({
  error: { type: Object, required: true },
  isResubmitting: { type: Boolean, default: false },
  isEmailSending: { type: Boolean, default: false },
  resubmitMessage: String,
  resubmitMessageType: String,
  emailSendMessage: String,
  emailSendMessageType: String
});

const emit = defineEmits(['close', 'resubmit', 'send-verification-email']);

const editablePayload = ref('');
const originalPayloadForComparison = ref('');
const editableOrderData = ref(null);
const payloadJsonError = ref('');
const validationErrors = ref({});
const localResubmitMessage = ref('');
const localResubmitMessageType = ref('');
const localEmailSendMessage = ref('');
const localEmailSendMessageType = ref('');
const selectedSuggestionIndex = ref(null);
const lastSelectedSuggestionSource = ref(null);
const showAddressEditorAfterSuggestion = ref(false);

// --- ZMIENNE REAKTYWNE DLA DYNAMICZNYCH SUGESTII ---
const dynamicSuggestions = ref([]);
const isLoadingDynamicSuggestions = ref(false); // Główna flaga ładowania dla UI (debounce)
const dynamicSuggestionsError = ref('');       // Błąd wyświetlany użytkownikowi
const dynamicSuggestionsPolling = ref({        // Stan wewnętrzny dla logiki odpytywania
    correlationId: null,
    isActive: false, // Czy odpytywanie jest aktywne
    errorInternal: null, // Błędy specyficzne dla odpytywania
    intervalId: null
});

const REQUIRED_FIELDS_GENERAL = ['RequestID', 'Triggerdate', 'CustID', 'Barcode', 'PickUpDate', 'DeliveryType', 'Weight', 'Volume'];
const REQUIRED_FIELDS_PICKUP_ADDRESS = ['PickUpAlias', 'PickUpName', 'PickUpStreet', 'PickUpHouseNo', 'PickUpPostalCode', 'PickUpCity'];
const REQUIRED_FIELDS_DELIVERY_ADDRESS = ['DeliveryAlias', 'DeliveryName', 'DeliveryStreet', 'DeliveryHouseNo', 'DeliveryPostalCode', 'DeliveryCity'];

const addressFieldsDefinition = {
  pickup: [
    { label: 'Nazwa/Kontakt', modelKey: 'PickUpName', id: 'editPickUpName' },
    { label: 'Ulica', modelKey: 'PickUpStreet', id: 'editPickUpStreet' },
    { label: 'Nr domu', modelKey: 'PickUpHouseNo', id: 'editPickUpHouseNo' },
    { label: 'Kod pocztowy', modelKey: 'PickUpPostalCode', id: 'editPickUpPostalCode', validation: validatePostalCode },
    { label: 'Miasto', modelKey: 'PickUpCity', id: 'editPickUpCity' },
  ],
  delivery: [
    { label: 'Nazwa/Kontakt', modelKey: 'DeliveryName', id: 'editDeliveryName' },
    { label: 'Ulica', modelKey: 'DeliveryStreet', id: 'editDeliveryStreet' },
    { label: 'Nr domu', modelKey: 'DeliveryHouseNo', id: 'editDeliveryHouseNo' },
    { label: 'Kod pocztowy', modelKey: 'DeliveryPostalCode', id: 'editDeliveryPostalCode', validation: validatePostalCode },
    { label: 'Miasto', modelKey: 'DeliveryCity', id: 'editDeliveryCity' },
  ]
};

const isPayloadValid = computed(() => {
  return Object.keys(validationErrors.value).length === 0 && !payloadJsonError.value;
});

const activeAddressEditorContext = computed(() => {
    if (!editableOrderData.value || !props.error || !props.error.errorType) return null;
    const relevantContextOnError = determineAddressContextFromError(props.error, 'order_relevant');
    const requiredFieldsForContext = relevantContextOnError === 'pickup' ? REQUIRED_FIELDS_PICKUP_ADDRESS : REQUIRED_FIELDS_DELIVERY_ADDRESS;
    const hasRelevantValidationError = requiredFieldsForContext.some(fieldKey => !!validationErrors.value[fieldKey]);
    const errorTypeSuggestsEditorForContext =
        props.error.errorType === 'CONSTRAINT_VIOLATION' &&
        props.error.errorMessage &&
        ( (relevantContextOnError === 'pickup' && REQUIRED_FIELDS_PICKUP_ADDRESS.some(field => props.error.errorMessage.toLowerCase().includes(field.toLowerCase().replace("pickup","")))) ||
          (relevantContextOnError === 'delivery' && REQUIRED_FIELDS_DELIVERY_ADDRESS.some(field => props.error.errorMessage.toLowerCase().includes(field.toLowerCase().replace("delivery",""))))
        );
    const needsReviewDueToProviderError = [
        'ADDRESS_PROVIDER_NEEDS_REVIEW', 'ADDRESS_PROVIDER_INVALID', 'EXTERNAL_SERVICE_FAILURE'
    ].includes(props.error.errorType);

    if (showAddressEditorAfterSuggestion.value) return relevantContextOnError;
    if (errorTypeSuggestsEditorForContext && hasRelevantValidationError) return relevantContextOnError;
    if (needsReviewDueToProviderError) return relevantContextOnError;
    return null;
});

const showSuggestions = computed(() => {
  return props.error &&
         (props.error.errorType === 'ADDRESS_PROVIDER_NEEDS_REVIEW' ||
         (props.error.errorType === 'EXTERNAL_SERVICE_FAILURE' && props.error.addressVerificationStatus === 'NEEDS_REVIEW')) &&
         props.error.suggestedAddresses && props.error.suggestedAddresses.length > 0;
});

const showInvalidAddressMessage = computed(() => {
  return props.error &&
         (props.error.errorType === 'ADDRESS_PROVIDER_INVALID' ||
         (props.error.errorType === 'EXTERNAL_SERVICE_FAILURE' &&
          (!props.error.suggestedAddresses || props.error.suggestedAddresses.length === 0) &&
          (props.error.addressVerificationStatus === 'INVALID' || props.error.addressVerificationStatus === 'SERVICE_ERROR')));
});

const providerNameFromSuggestionsOrQuery = computed(() => {
  if (props.error?.suggestedAddresses?.length > 0 && props.error.suggestedAddresses[0].providerSource) {
    return props.error.suggestedAddresses[0].providerSource;
  }
  if (props.error?.providerRawQuery) {
    const queryLower = props.error.providerRawQuery.toLowerCase();
    if (queryLower.includes('nominatim')) return 'Nominatim';
    if (queryLower.includes('here')) return 'HERE Maps';
    if (queryLower.includes('google') || queryLower.includes('maps')) return 'Google Maps';
  }
  return null;
});

function validatePostalCode(value) {
  if (value && !/^\d{2}-\d{3}$/.test(String(value).trim())) {
    return "Niepoprawny format kodu pocztowego (oczekiwano XX-XXX).";
  }
  return null;
}

const determineAddressContextFromError = (error, baseContextType) => {
    if (!error) return 'delivery';
    if (baseContextType === 'database_dto') return 'database_dto';
    if (baseContextType === 'provider_suggestion') return 'provider_suggestion';
    let relevantContext = 'delivery';
    if (error.errorMessage) {
        const msgLower = error.errorMessage.toLowerCase();
        const pickupKeywords = ['pickup', 'nadania', 'nadawcy', 'pickuphouseno', 'pickuppostalcode', 'pickupcity', 'pickupname', 'pickupalias', 'pick up'];
        const deliveryKeywords = ['delivery', 'dostawy', 'odbiorcy', 'deliveryhouseno', 'deliverypostalcode', 'deliverycity', 'deliveryname', 'deliveryalias'];
        if (pickupKeywords.some(kw => msgLower.includes(kw))) relevantContext = 'pickup';
        else if (deliveryKeywords.some(kw => msgLower.includes(kw))) relevantContext = 'delivery';
    }
     if (error.errorType) {
        const typeUpper = error.errorType.toUpperCase();
        const pickupErrorTypes = ["PICKUP", "NADAWCY", "NADANIA"];
        const deliveryErrorTypes = ["DELIVERY", "ODBIORCY", "DOSTAWY"];
        if (pickupErrorTypes.some(pet => typeUpper.includes(pet))) relevantContext = 'pickup';
        else if (deliveryErrorTypes.some(det => typeUpper.includes(det))) relevantContext = 'delivery';
    }
    if (error.errorType === 'CONSTRAINT_VIOLATION' && error.errorMessage) {
        const msgLower = error.errorMessage.toLowerCase();
        const fieldViolationMatch = msgLower.match(/pole '([^']*)'/);
        if (fieldViolationMatch && fieldViolationMatch[1]) {
            const violatedField = fieldViolationMatch[1].toLowerCase();
            if (violatedField.startsWith('pickup')) relevantContext = 'pickup';
            else if (violatedField.startsWith('delivery')) relevantContext = 'delivery';
        }
    }
    if (baseContextType === 'order_relevant') return relevantContext;
    if (baseContextType === 'order_pickup') return 'pickup';
    if (baseContextType === 'order_delivery') return 'delivery';
    if (baseContextType === 'order') return relevantContext;
    return relevantContext;
};

const determineAddressContextTitle = (error, baseContextType) => {
    const context = determineAddressContextFromError(error, baseContextType);
    if (context === 'pickup') return "Adres Nadania";
    if (context === 'delivery') return "Adres Dostawy";
    return "Adres w Zleceniu";
};

const formatDate = (dateString) => {
  if (!dateString) return 'N/A';
  const date = new Date(dateString);
  return date.toLocaleString('pl-PL', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' });
};

const validateField = (data, fieldName, errorsObject, isRequired = true, customValidator = null) => {
  const value = data ? data[fieldName] : undefined;
  if (isRequired && (value === undefined || value === null || String(value).trim() === '')) {
    errorsObject[fieldName] = `Pole ${fieldName} jest wymagane.`;
    return false;
  }
  if (!isRequired && (value === undefined || value === null || String(value).trim() === '')) {
    delete errorsObject[fieldName];
    return true;
  }
  if (value && customValidator) {
    const errorMsg = customValidator(String(value));
    if (errorMsg) {
      errorsObject[fieldName] = errorMsg;
      return false;
    }
  }
  delete errorsObject[fieldName];
  return true;
};

const validateEditablePayload = () => {
  const errors = {};
  if (!editableOrderData.value) {
    errors.general = "Payload JSON jest pusty lub nie został poprawnie sparsowany. Nie można przeprowadzić walidacji pól.";
    validationErrors.value = errors;
    return;
  }
  const data = editableOrderData.value;
  REQUIRED_FIELDS_GENERAL.forEach(field => validateField(data, field, errors));
  REQUIRED_FIELDS_PICKUP_ADDRESS.forEach(field => {
    const fieldDef = addressFieldsDefinition.pickup.find(f => f.modelKey === field);
    validateField(data, field, errors, true, fieldDef?.validation);
  });
  REQUIRED_FIELDS_DELIVERY_ADDRESS.forEach(field => {
    const fieldDef = addressFieldsDefinition.delivery.find(f => f.modelKey === field);
    validateField(data, field, errors, true, fieldDef?.validation);
  });
  validationErrors.value = errors;
};

const clearDynamicSuggestionsPollingState = () => {
    if (dynamicSuggestionsPolling.value.intervalId) {
        clearInterval(dynamicSuggestionsPolling.value.intervalId);
    }
    dynamicSuggestionsPolling.value = { correlationId: null, isActive: false, errorInternal: null, intervalId: null };
};

const _pollDynamicSuggestions = async (correlationId) => {
    const MAX_POLLS = 15;
    const POLL_INTERVAL = 2000;
    let polls = 0;

    dynamicSuggestionsPolling.value.correlationId = correlationId;
    dynamicSuggestionsPolling.value.isActive = true;
    dynamicSuggestionsPolling.value.errorInternal = null;

    return new Promise((resolve, reject) => {
        dynamicSuggestionsPolling.value.intervalId = setInterval(async () => {
            polls++;
            if (!dynamicSuggestionsPolling.value.isActive || polls > MAX_POLLS) {
                if (polls > MAX_POLLS && dynamicSuggestionsPolling.value.isActive) {
                    dynamicSuggestionsPolling.value.errorInternal = `Timeout oczekiwania na dynamiczne sugestie (ID: ${correlationId?.substring(0,8)}).`;
                }
                clearDynamicSuggestionsPollingState();
                return reject(new Error(dynamicSuggestionsPolling.value.errorInternal || 'Polling anulowany lub przekroczono limit prób.'));
            }

            try {
                const res = await apiClient.get(`/api/admin/address-verification/operations/${correlationId}`);
                if (res.data && res.data.status === 'COMPLETED') {
                    clearDynamicSuggestionsPollingState();
                    resolve(res.data.result);
                } else if (res.data && res.data.status === 'FAILED') {
                    clearDynamicSuggestionsPollingState();
                    reject(new Error(res.data.errorDetails || 'Operacja pobierania sugestii nie powiodła się.'));
                }
                // Kontynuuj polling dla PENDING/PROCESSING
            } catch (pollError) {
                clearDynamicSuggestionsPollingState();
                reject(pollError.response?.data?.error || pollError.message || 'Błąd sieci podczas odpytywania o status sugestii.');
            }
        }, POLL_INTERVAL);
    });
};


const fetchDynamicSuggestionsInternal = async (addressDataForQuery) => {
  isLoadingDynamicSuggestions.value = true;
  dynamicSuggestions.value = [];
  dynamicSuggestionsError.value = 'Inicjowanie pobierania sugestii...';
  clearDynamicSuggestionsPollingState(); // Wyczyść poprzedni polling

  try {
    const queryParams = {
      street: String(addressDataForQuery.street || '').trim(),
      houseNumber: String(addressDataForQuery.houseNumber || '').trim(),
      city: String(addressDataForQuery.city || '').trim(),
      postalCode: String(addressDataForQuery.postalCode || '').trim(),
      country: 'Polska',
    };
    Object.keys(queryParams).forEach(key => { if (!queryParams[key]) delete queryParams[key]; });

    if (Object.keys(queryParams).length < 2 && !queryParams.street && !queryParams.city && !queryParams.postalCode) {
      dynamicSuggestionsError.value = 'Zbyt mało danych do wyszukania sugestii.';
      isLoadingDynamicSuggestions.value = false;
      return;
    }

    const initResponse = await apiClient.post('/api/admin/address-verification/suggest-on-demand', queryParams);
    const operationCorrelationId = initResponse.data.correlationId;

    if (!operationCorrelationId) {
      throw new Error("Nie otrzymano CorrelationID dla operacji dynamicznych sugestii.");
    }
    dynamicSuggestionsError.value = `Przetwarzanie dynamicznych sugestii (ID: ${operationCorrelationId.substring(0,8)})...`;

    const resultData = await _pollDynamicSuggestions(operationCorrelationId);

    if (resultData && typeof resultData.status === 'string' && Array.isArray(resultData.suggestions)) {
        const providerStatus = resultData.status.toUpperCase();
        if (providerStatus === 'SERVICE_ERROR' || providerStatus === 'INVALID') {
            dynamicSuggestions.value = resultData.suggestions.length > 0 ? resultData.suggestions : [];
            dynamicSuggestionsError.value = resultData.message || 'Dostawca zwrócił błąd lub brak wyników.';
        } else { // VALID lub NEEDS_REVIEW
            dynamicSuggestions.value = resultData.suggestions;
            dynamicSuggestionsError.value = (providerStatus === 'NEEDS_REVIEW' && resultData.message) ? `Uwaga od dostawcy: ${resultData.message}` : '';
        }
        if (dynamicSuggestions.value.length === 0 && !dynamicSuggestionsError.value) {
           dynamicSuggestionsError.value = 'Brak dynamicznych sugestii dla wprowadzonych danych.';
        }
    } else {
        dynamicSuggestions.value = [];
        dynamicSuggestionsError.value = 'Nieoczekiwany format wyniku dynamicznych sugestii.';
    }

  } catch (error) {
    console.error("Błąd podczas pobierania/przetwarzania dynamicznych sugestii:", error);
    dynamicSuggestionsError.value = error.message || 'Błąd serwera podczas pobierania dynamicznych sugestii.';
    dynamicSuggestions.value = [];
  } finally {
    isLoadingDynamicSuggestions.value = false;
    // Upewnij się, że isActive jest false jeśli nie było błędu krytycznego w pollDynamicSuggestions, który by to zrobił
    if (dynamicSuggestionsPolling.value.isActive && !dynamicSuggestionsPolling.value.errorInternal && !dynamicSuggestionsPolling.value.intervalId) {
        dynamicSuggestionsPolling.value.isActive = false;
    }
  }
};

const debouncedFetchDynamicSuggestions = debounce(fetchDynamicSuggestionsInternal, 850);

watch(() => props.resubmitMessage, (newVal) => localResubmitMessage.value = newVal, { immediate: true });
watch(() => props.resubmitMessageType, (newVal) => localResubmitMessageType.value = newVal, { immediate: true });
watch(() => props.emailSendMessage, (newVal) => localEmailSendMessage.value = newVal, { immediate: true });
watch(() => props.emailSendMessageType, (newVal) => localEmailSendMessageType.value = newVal, { immediate: true });

watch(() => props.error, (newError, oldError) => {
  const payloadSource = newError?.originalAddressJson || newError?.rawPayload || '';
  selectedSuggestionIndex.value = null;
  showAddressEditorAfterSuggestion.value = false;
  lastSelectedSuggestionSource.value = null;
  localResubmitMessage.value = '';
  localEmailSendMessage.value = '';
  dynamicSuggestions.value = [];
  dynamicSuggestionsError.value = '';
  clearDynamicSuggestionsPollingState();


  if (newError && (!oldError || newError.eventId !== oldError.eventId)) {
    validationErrors.value = {};
    if (payloadSource) {
      try {
        const parsed = JSON.parse(payloadSource);
        editableOrderData.value = { ...parsed };
        originalPayloadForComparison.value = JSON.stringify(parsed, null, 2);
        editablePayload.value = JSON.stringify(parsed, null, 2);
        payloadJsonError.value = '';
      } catch (e) {
        editablePayload.value = payloadSource;
        originalPayloadForComparison.value = payloadSource;
        editableOrderData.value = null;
        payloadJsonError.value = "Nie można sparsować początkowego payloadu JSON. Sprawdź jego poprawność.";
        validationErrors.value = { general: "Nie można sparsować początkowego payloadu JSON." };
      }
    } else {
      editablePayload.value = '';
      originalPayloadForComparison.value = '';
      editableOrderData.value = null;
      validationErrors.value = { general: "Brak payloadu do edycji." };
    }
    nextTick(() => {
        validateEditablePayload();
    });
  }
}, { immediate: true, deep: true });

watch(editablePayload, (newValue) => {
  if (!String(localResubmitMessage.value).startsWith("Wybrano sugestię")) {
    localResubmitMessage.value = '';
  }
  if (!newValue) {
    payloadJsonError.value = '';
    if (editableOrderData.value !== null) editableOrderData.value = null;
    validationErrors.value = { general: "Payload jest pusty." };
    return;
  }
  try {
    const parsedData = JSON.parse(newValue);
    payloadJsonError.value = '';
    if (newValue !== JSON.stringify(editableOrderData.value, null, 2)) {
      editableOrderData.value = parsedData;
    } else {
      validateEditablePayload();
    }
  } catch (e) {
    payloadJsonError.value = 'Niepoprawny format JSON. Popraw błędy w edytorze tekstowym.';
    validationErrors.value = { general: "Niepoprawny format JSON w edytorze tekstowym." };
  }
});

watch(editableOrderData, (newData, oldData) => {
  if (newData) {
    const newPayloadString = JSON.stringify(newData, null, 2);
    if (newPayloadString !== editablePayload.value) {
      editablePayload.value = newPayloadString;
    }
    validateEditablePayload();

    const context = activeAddressEditorContext.value;
    if (context && newData !== oldData) {
        const prefix = context === 'pickup' ? 'PickUp' : 'Delivery';
        const addressQueryData = {
            street: newData[`${prefix}Street`],
            houseNumber: newData[`${prefix}HouseNo`],
            city: newData[`${prefix}City`],
            postalCode: newData[`${prefix}PostalCode`],
        };
        if (String(addressQueryData.street||'').trim().length > 2 ||
            String(addressQueryData.city||'').trim().length > 2 ||
            String(addressQueryData.postalCode||'').trim().length >= 5) {
             debouncedFetchDynamicSuggestions(addressQueryData);
        } else {
            dynamicSuggestions.value = [];
            dynamicSuggestionsError.value = '';
            clearDynamicSuggestionsPollingState(); // Anuluj poprzednie odpytywanie jeśli dane zbyt krótkie
        }
    }
  } else if (editablePayload.value) {
    editablePayload.value = '';
  }
}, { deep: true });

onMounted(() => document.addEventListener('keydown', handleKeydown));
onUnmounted(() => {
    document.removeEventListener('keydown', handleKeydown);
    clearDynamicSuggestionsPollingState(); // Wyczyść przy odmontowaniu komponentu
});

const handleClose = () => {
  emit('close');
  selectedSuggestionIndex.value = null;
  lastSelectedSuggestionSource.value = null;
  showAddressEditorAfterSuggestion.value = false;
  dynamicSuggestions.value = [];
  dynamicSuggestionsError.value = '';
  clearDynamicSuggestionsPollingState();
};

const triggerResubmit = () => {
  validateEditablePayload();
  if (!isPayloadValid.value) {
    localResubmitMessage.value = "Formularz zlecenia zawiera błędy lub JSON jest niepoprawny. Popraw je przed wysłaniem.";
    localResubmitMessageType.value = 'error';
    return;
  }
  const hasPayloadChanged = editablePayload.value !== originalPayloadForComparison.value;
  if (hasPayloadChanged) {
    if (!confirm("Dane zlecenia zostały zmodyfikowane. Czy na pewno chcesz je zapisać i przesłać ponownie?")) {
      return;
    }
  } else {
    if (!confirm("Dane zlecenia nie zostały zmienione. Czy na pewno chcesz przesłać oryginalne zlecenie ponownie?")) {
      return;
    }
  }
  localResubmitMessage.value = '';
  localEmailSendMessage.value = '';
  emit('resubmit', {
    eventId: props.error.eventId,
    correctedRawPayload: editablePayload.value,
  });
};

const triggerSendVerificationEmail = () => {
  validateEditablePayload();
  if (props.error.errorType === 'ADDRESS_CUSTOMER_VERIFICATION_PENDING') {
      localEmailSendMessage.value = "Email weryfikacyjny został już prawdopodobnie wysłany. Sprawdź status.";
      localEmailSendMessageType.value = 'info';
      return;
  }
  if (!isPayloadValid.value) {
     localEmailSendMessage.value = "Payload JSON zlecenia zawiera błędy lub jest niepoprawny. Popraw go przed wysłaniem emaila do klienta.";
     localEmailSendMessageType.value = 'error';
     return;
  }
  localResubmitMessage.value = '';
  localEmailSendMessage.value = '';
  emit('send-verification-email', { eventId: props.error.eventId });
};

const selectSuggestion = (suggestion, index, source) => {
  selectedSuggestionIndex.value = index;
  lastSelectedSuggestionSource.value = source;
  if (!editableOrderData.value) {
    console.error("ErrorDetailsModal: editableOrderData jest null, nie można zaktualizować adresu na podstawie sugestii.");
    localResubmitMessage.value = "BŁĄD KRYTYCZNY: Brak danych zlecenia do aktualizacji.";
    localResubmitMessageType.value = 'error';
    return;
  }

  const orderDataCopy = { ...editableOrderData.value };
  const addressContext = determineAddressContextFromError(props.error, 'order_relevant');
  const prefix = addressContext === 'pickup' ? 'PickUp' : 'Delivery';

  orderDataCopy[`${prefix}Street`] = suggestion.street || '';
  orderDataCopy[`${prefix}HouseNo`] = suggestion.houseNumber || '';
  orderDataCopy[`${prefix}PostalCode`] = suggestion.postalCode || '';
  orderDataCopy[`${prefix}City`] = suggestion.city || '';

  editableOrderData.value = orderDataCopy;
  showAddressEditorAfterSuggestion.value = true;

  if (source === 'dynamic') {
    dynamicSuggestions.value = []; // Wyczyść dynamiczne sugestie po wyborze
    clearDynamicSuggestionsPollingState(); // Zatrzymaj odpytywanie
  }
  localResubmitMessage.value = `Wybrano ${lastSelectedSuggestionSource.value === 'initial' ? 'początkową' : 'dynamiczną'} sugestię. Pola adresu ${addressContext === 'pickup' ? 'nadania' : 'dostawy'} zostały zaktualizowane. Sprawdź i uzupełnij ewentualne braki, zwłaszcza Nazwę/Kontakt.`;
  localResubmitMessageType.value = 'info';
};

const handleKeydown = (event) => {
  if (event.key === 'Escape') handleClose();
};

const isAddressErrorType = (errorType) => {
  const types = [
    'ADDRESS_ALIAS_MISMATCH_DB', 'ADDRESS_PROVIDER_NEEDS_REVIEW', 'ADDRESS_PROVIDER_INVALID',
    'ADDRESS_CUSTOMER_VERIFICATION_PENDING', 'EXTERNAL_SERVICE_FAILURE', 'ADDRESS_DB_ERROR'
  ];
  if (errorType === 'CONSTRAINT_VIOLATION' && props.error && props.error.errorMessage) {
    const msg = props.error.errorMessage.toLowerCase();
    const addressKeywords = ['pickup', 'delivery', 'street', 'houseno', 'city', 'postalcode', 'alias',
                             'pickuphouseno', 'deliveryhouseno', 'pickuppostalcode', 'deliverypostalcode',
                             'pickupcity', 'deliverycity', 'pickupname', 'deliveryname'];
    if (addressKeywords.some(keyword => msg.includes(keyword.replace(/pickup|delivery/gi, '')))) {
      return true;
    }
  }
  return types.includes(errorType);
};

const canTriggerSendVerificationEmail = (errorType) => {
  return [
    'ADDRESS_ALIAS_MISMATCH_DB', 'ADDRESS_PROVIDER_NEEDS_REVIEW',
    'ADDRESS_PROVIDER_INVALID', 'EXTERNAL_SERVICE_FAILURE', 'CONSTRAINT_VIOLATION', 'ADDRESS_DB_ERROR'
  ].includes(errorType) && errorType !== 'ADDRESS_CUSTOMER_VERIFICATION_PENDING';
};

const getErrorTypeClass = (errorType) => {
    let base = 'px-2.5 py-1 rounded-full text-xs font-bold leading-tight inline-block ';
    if (errorType === 'CONSTRAINT_VIOLATION' && props.error && props.error.errorMessage) {
        const msg = props.error.errorMessage.toLowerCase();
        const addressKeywords = ['pickup', 'delivery', 'street', 'houseno', 'city', 'postalcode', 'alias', 'pickuphouseno', 'deliveryhouseno', 'pickuppostalcode', 'deliverypostalcode', 'pickupcity', 'deliverycity', 'pickupname', 'deliveryname'];
        if (addressKeywords.some(keyword => msg.includes(keyword.replace(/pickup|delivery/i, '')))) {
            return base + 'bg-orange-100 text-orange-600 border border-orange-200';
        }
        return base + 'bg-red-100 text-red-600 border border-red-200';
    }
    if (['ADDRESS_ALIAS_MISMATCH_DB', 'ADDRESS_PROVIDER_NEEDS_REVIEW', 'ADDRESS_PROVIDER_INVALID'].includes(errorType)) return base + 'bg-orange-100 text-orange-600 border border-orange-200';
    if (errorType === 'ADDRESS_CUSTOMER_VERIFICATION_PENDING') return base + 'bg-yellow-100 text-yellow-600 border border-yellow-200';
    if (['VALIDATION', 'DESERIALIZATION_ERROR'].includes(errorType)) return base + 'bg-red-100 text-red-600 border border-red-200';
    if (['PROCESSING', 'LISTENER_EXECUTION_FAILURE', 'EXTERNAL_SERVICE_FAILURE', 'ADDRESS_DB_ERROR'].includes(errorType)) return base + 'bg-purple-100 text-purple-600 border border-purple-200';
    return base + 'bg-slate-100 text-slate-600 border border-slate-200';
};
</script>

<style scoped>
/* Styl dla animacji ładowania, jeśli potrzebny gdzieś indziej */
.animate-spin {
  animation: spin 1s linear infinite;
}
@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}
/* Można dodać dodatkowe style specyficzne dla modala, jeśli potrzebne */
</style>

================================================================================
### PLIK: src\components\Sidebar.vue
================================================================================

// Fragment z src/components/Sidebar.vue
<template>
  <aside
    class="fixed inset-y-0 left-0 z-50 flex flex-col bg-gradient-to-b from-slate-800 to-slate-900 text-slate-100 transition-transform duration-300 ease-in-out shadow-xl print:hidden"
    :class="isOpen ? 'translate-x-0 w-64' : '-translate-x-full w-64 lg:translate-x-0 lg:w-16'"
    aria-label="Sidebar"
  >
    <div 
      class="flex items-center h-16 px-4 border-b border-slate-700 shrink-0"
      :class="isOpen ? 'justify-between' : 'justify-center'"
    >
      <router-link to="/dashboard" class="text-xl font-bold text-white whitespace-nowrap" v-if="isOpen">
        Danxils Panel
      </router-link>
      <router-link to="/dashboard" class="text-white" v-else>
        <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6V4m0 16v-2m0-10v2M6 12H4m16 0h-2m-10 0h2m4 4l2-2m-4-4l2-2m4 4l-2-2m-4-4l-2-2"></path></svg>
      </router-link>
      <button @click="$emit('toggle-sidebar')" class="text-slate-400 hover:text-white lg:hidden p-1 rounded-md focus:outline-none focus:ring-2 focus:ring-white" v-if="isOpen">
         <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>
      </button>
    </div>

    <nav class="flex-1 space-y-1 px-2 py-4 overflow-y-auto">
      <SidebarLink to="/dashboard" icon-class="home" :is-open="isOpen">Dashboard</SidebarLink>

     <SidebarLink
        v-if="authStore.userHasRole('ADMIN')"
        to="/dashboard/rejected-requests" icon-class="exclamation-triangle"
        :is-open="isOpen"
      >
        Odrzucone Żądania
      </SidebarLink>

      <SidebarLink
        v-if="authStore.userHasRole('ADMIN')"
        to="/dashboard/admin/address-providers"
        icon-class="cog-6-tooth" :is-open="isOpen"
      >
        Dostawcy Adresów
      </SidebarLink>

      <SidebarLink
        to="/dashboard/order-statuses" icon-class="list-ul"
        :is-open="isOpen"
      >
        Statusy Zamówień
      </SidebarLink>

      <div class="pt-4 mt-4 space-y-1 border-t border-slate-700">
        <SidebarLink to="/dashboard/change-password" icon-class="key" :is-open="isOpen">Zmień Hasło</SidebarLink> <button
          @click="handleUserLogout"
          class="w-full flex items-center px-2 py-2.5 text-sm font-medium rounded-md text-slate-300 hover:bg-slate-700 hover:text-white group transition-colors focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
          :title="isOpen ? '' : 'Wyloguj'"
        >
          <component :is="getIcon('arrow-right-on-rectangle')" 
            class="flex-shrink-0 h-5 w-5 text-slate-400 group-hover:text-slate-300 transition-colors" 
            :class="isOpen ? 'mr-3' : 'mx-auto'"
            aria-hidden="true" />
          <span v-if="isOpen" class="truncate">Wyloguj</span>
        </button>
      </div>
    </nav>

    <div class="p-4 mt-auto border-t border-slate-700 shrink-0" v-if="isOpen">
      <p class="text-xs text-slate-400 text-center">&copy; {{ new Date().getFullYear() }}</p>
    </div>
  </aside>
</template>

<script setup>
import { defineAsyncComponent } from 'vue';
import { useAuthStore } from '@/stores/authStore';
import { useRouter } from 'vue-router';
import SidebarLink from '@/components/SidebarLink.vue'; // Upewnij się, że ścieżka jest poprawna

defineProps({
  isOpen: Boolean,
});
const emit = defineEmits(['toggle-sidebar']);

const authStore = useAuthStore();
const router = useRouter();

const handleUserLogout = () => { // Zmieniono nazwę z handleLogout
  authStore.logout();
  router.push('/login');
};

const getIcon = (iconName) => {
  const icons = {
    'home': () => import('@heroicons/vue/24/outline/HomeIcon'),
    'exclamation-triangle': () => import('@heroicons/vue/24/outline/ExclamationTriangleIcon'),
    'key': () => import('@heroicons/vue/24/outline/KeyIcon'),
    'arrow-right-on-rectangle': () => import('@heroicons/vue/24/outline/ArrowRightOnRectangleIcon'),
    'list-ul': () => import('@heroicons/vue/24/outline/ListBulletIcon'),
    'cog-6-tooth': () => import('@heroicons/vue/24/outline/Cog6ToothIcon'), // DODAJ NOWĄ IKONĘ
  };
  return defineAsyncComponent(icons[iconName] || icons['home']); //
};
</script>

<style scoped>
aside {
  scrollbar-width: thin;
  scrollbar-color: theme('colors.slate.600') theme('colors.slate.800');
  transition-property: width, transform; /* Dodaj transform do transition */
}
aside::-webkit-scrollbar {
  width: 6px;
}
aside::-webkit-scrollbar-track {
  background: theme('colors.slate.800');
}
aside::-webkit-scrollbar-thumb {
  background-color: theme('colors.slate.600');
  border-radius: 3px;
}
</style>

================================================================================
### PLIK: src\components\SidebarLink.vue
================================================================================

<template>
  <router-link
    :to="to"
    custom
    v-slot="{ href, navigate, isActive, isExactActive }"
  >
    <a
      :href="href"
      @click="navigate"
      class="flex items-center px-2 py-2.5 text-sm font-medium rounded-md group transition-colors"
      :class="[
        (isActive || isExactActive) ? 'bg-indigo-600 text-white shadow-lg' : 'text-slate-300 hover:bg-slate-700 hover:text-white',
        { 'justify-center': !isOpen }
      ]"
      :title="isOpen ? '' : $slots.default()[0].children"
    >
      <component
        :is="getIcon(iconClass)"
        class="flex-shrink-0 h-5 w-5 group-hover:text-white transition-colors"
        :class="[(isActive || isExactActive) ? 'text-white' : 'text-slate-400 group-hover:text-slate-300', isOpen ? 'mr-3' : 'mx-auto']"
        aria-hidden="true"
      />
      <span v-if="isOpen" class="truncate"><slot></slot></span>
    </a>
  </router-link>
</template>

<script setup>
import { defineAsyncComponent } from 'vue';

const props = defineProps({
  to: {
    type: [String, Object],
    required: true,
  },
  iconClass: {
    type: String,
    required: true,
  },
  isOpen: {
    type: Boolean,
    default: true,
  }
});

const getIcon = (iconName) => {
  const icons = {
    'home': () => import('@heroicons/vue/24/outline/HomeIcon'),
    'exclamation-triangle': () => import('@heroicons/vue/24/outline/ExclamationTriangleIcon'),
    'key': () => import('@heroicons/vue/24/outline/KeyIcon'),
    'list-ul': () => import('@heroicons/vue/24/outline/ListBulletIcon'),
  };
  return defineAsyncComponent(icons[iconName] || icons['home']);
};
</script>

================================================================================
### PLIK: src\layouts\DashboardLayout.vue
================================================================================

<template>
  <div class="min-h-screen bg-slate-100 flex antialiased">
    <Sidebar :is-open="isSidebarEffectivelyOpen" @toggle-sidebar="toggleSidebarPreference" />

    <div
      class="flex-1 flex flex-col transition-all duration-300 ease-in-out"
      :style="{ 'margin-left': contentMarginLeft }"
    >
      <header class="bg-white shadow-sm sticky top-0 z-30 print:hidden">
        <div class="px-4 sm:px-6 lg:px-8">
          <div class="flex items-center justify-between h-16">
            <div class="flex items-center">
              <button
                @click="toggleSidebarPreference"
                class="text-slate-500 hover:text-slate-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500 p-2 -ml-2 rounded-md"
                aria-label="Toggle sidebar"
              >
                <svg class="h-6 w-6" stroke="currentColor" fill="none" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                </svg>
              </button>
            </div>
            <div class="flex items-center">
              <span class="text-sm text-slate-700 mr-3 hidden sm:block">
                Witaj, {{ authStore.user?.username || 'Użytkowniku' }}
              </span>
              <button
                @click="performUserLogout"
                class="text-sm font-medium text-indigo-600 hover:text-indigo-500 p-2 rounded-md hover:bg-indigo-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
              >
                Wyloguj
              </button>
            </div>
          </div>
        </div>
      </header>

      <main class="flex-1 p-4 sm:p-6 lg:p-8">
        <router-view />
      </main>

      <footer class="bg-slate-100 text-center p-4 border-t border-slate-200 text-xs text-slate-500 print:hidden">
        &copy; {{ new Date().getFullYear() }} Danxils Enterprise System
      </footer>
    </div>
  </div>
</template>

<script setup>
import { ref, onMounted, onUnmounted, computed } from 'vue';
import { useRouter } from 'vue-router';
import Sidebar from '@/components/Sidebar.vue';
import { useAuthStore } from '@/stores/authStore';

const authStore = useAuthStore();
const router = useRouter();

const screenWidth = ref(window.innerWidth);
const userPrefersSidebarOpen = ref(true); // Preferencja użytkownika (np. z localStorage)

const isLargeScreen = computed(() => screenWidth.value >= 1024); // lg breakpoint

const isSidebarEffectivelyOpen = computed(() => {
  // Na małych ekranach, sidebar jest mobilnym overlayem, jego "otwarcie" jest kontrolowane przez userPrefersSidebarOpen
  // Na dużych ekranach, sidebar jest zawsze "obecny" (albo szeroki albo wąski), kontrolowany przez userPrefersSidebarOpen
  return userPrefersSidebarOpen.value;
});

const sidebarCollapsedWidth = '4rem'; // 64px (w-16)
const sidebarExpandedWidth = '16rem'; // 256px (w-64)

const contentMarginLeft = computed(() => {
  if (isLargeScreen.value) {
    // Na dużych ekranach, content ma margines w zależności od stanu sidebara
    return userPrefersSidebarOpen.value ? sidebarExpandedWidth : sidebarCollapsedWidth;
  }
  // Na małych ekranach, sidebar jest nakładką (fixed, absolute), więc content nie potrzebuje marginesu
  return '0px';
});

const toggleSidebarPreference = () => {
  userPrefersSidebarOpen.value = !userPrefersSidebarOpen.value;
  if (isLargeScreen.value) {
    localStorage.setItem('sidebarUserPrefersOpen', JSON.stringify(userPrefersSidebarOpen.value));
  }
};

const performUserLogout = () => {
  authStore.logout();
  router.push('/login');
};

const updateScreenWidth = () => {
  screenWidth.value = window.innerWidth;
  // Dostosuj domyślny stan sidebara przy zmianie rozmiaru ekranu, jeśli preferencja nie była ustawiona
  if (localStorage.getItem('sidebarUserPrefersOpen') === null) {
    if (isLargeScreen.value) {
      userPrefersSidebarOpen.value = true; // Domyślnie otwarty na dużych
    } else {
      userPrefersSidebarOpen.value = false; // Domyślnie zamknięty na małych
    }
  }
};

onMounted(() => {
  const storedPreference = localStorage.getItem('sidebarUserPrefersOpen');
  if (storedPreference !== null) {
    userPrefersSidebarOpen.value = JSON.parse(storedPreference);
  } else {
    // Ustaw domyślny stan na podstawie początkowej szerokości ekranu
    userPrefersSidebarOpen.value = isLargeScreen.value;
  }
  window.addEventListener('resize', updateScreenWidth);
});

onUnmounted(() => {
  window.removeEventListener('resize', updateScreenWidth);
});
</script>

<style scoped>
.flex-1 {
  transition: margin-left 0.25s ease-in-out;
}
</style>

================================================================================
### PLIK: src\router\index.js
================================================================================

// src/router/index.js
import { createRouter, createWebHistory } from 'vue-router';
import DashboardLayout from '@/layouts/DashboardLayout.vue'; // [cite: 1959]
import { useAuthStore } from '@/stores/authStore'; // [cite: 1959]

const routes = [
  { path: '/login', name: 'login', component: () => import('@/views/LoginView.vue') },
  { path: '/', name: 'home', component: () => import('@/views/HomeView.vue') },
  {
    path: '/dashboard',
    component: DashboardLayout,
    meta: { requiresAuth: true },
    children: [
      { path: '', name: 'dashboard', component: () => import('@/views/DashboardView.vue') },
      { path: 'change-password', name: 'changePassword', component: () => import('@/views/ChangePasswordView.vue') },
      {
        path: 'rejected-requests',
        name: 'rejectedRequests',
        component: () => import('@/views/RejectedRequestsView.vue'),
        meta: { roles: ['ADMIN'] } //
      },
      {
        path: 'order-statuses',
        name: 'orderStatuses',
        component: () => import('@/views/OrderStatusView.vue'),
        meta: { requiresAuth: true } // [cite: 1961]
      },
      // NOWA TRASA DLA ADMINA
      {
        path: 'admin/address-providers', // Ścieżka dla nowego widoku
        name: 'adminAddressProviders',
        component: () => import('@/views/admin/AddressProvidersView.vue'), // Nowy komponent widoku
        meta: { roles: ['ADMIN'] } // Tylko dla adminów
      }
    ]
  },
  { path: '/:pathMatch(.*)*', name: 'NotFound', component: () => import('@/views/NotFoundView.vue') }
];

const router = createRouter({
  history: createWebHistory(import.meta.env.BASE_URL),
  routes
});

router.beforeEach(async (to, from, next) => {
  const authStore = useAuthStore();
  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);
  const requiredRoles = to.matched.find(record => record.meta.roles)?.meta.roles;

  if (requiresAuth && !authStore.isLoggedIn) {
    next({ name: 'login', query: { redirect: to.fullPath } });
  } else if (to.name === 'login' && authStore.isLoggedIn) {
    next({ name: 'dashboard' });
  } else if (requiresAuth && requiredRoles && !requiredRoles.some(role => authStore.userHasRole(role))) { // [cite: 1962]
    // Jeśli użytkownik nie ma wymaganej roli, przekieruj go (np. na dashboard lub stronę błędu dostępu)
    console.warn(`User ${authStore.user?.username} does not have required roles: ${requiredRoles} for route ${to.name}`);
    next({ name: 'dashboard' }); // Lub np. next({ name: 'ForbiddenView' });
  } else {
    next();
  }
});

export default router; // [cite: 1963]

================================================================================
### PLIK: src\services\api.js
================================================================================

// src/services/api.js
import axios from 'axios';

const apiClient = axios.create({
  baseURL: 'http://10.105.0.189:8080',
  headers: {
    'Content-Type': 'application/json',
  },
});

apiClient.interceptors.request.use(
  async (config) => {
    try {
      const { useAuthStore } = await import('@/stores/authStore');
      const authStore = useAuthStore();
      const token = authStore.accessToken;
      if (token) {
        config.headers.Authorization = `Bearer ${token}`;
      }
    } catch (e) {
      console.error('Error dynamically importing authStore in request interceptor:', e);
    }
    return config;
  },
  (error) => {
    return Promise.reject(error);
  }
);

apiClient.interceptors.response.use(
  (response) => response,
  async (error) => {
    const originalRequest = error.config;
    try {
      const { useAuthStore } = await import('@/stores/authStore');
      const authStore = useAuthStore();

      if (error.response && error.response.status === 401 && !originalRequest._retry) {
        originalRequest._retry = true;
        try {
          const newAccessToken = await authStore.refreshTokenAction();
          originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;
          return apiClient(originalRequest);
        } catch (refreshError) {
          return Promise.reject(refreshError);
        }
      }
    } catch (e) {
      console.error('Error dynamically importing authStore in response interceptor:', e);
    }
    return Promise.reject(error);
  }
);

export default apiClient;

================================================================================
### PLIK: src\stores\authStore.js
================================================================================

// Plik: src/stores/authStore.js
import { defineStore } from 'pinia';
import apiClient from '@/services/api.js';
import router from '@/router'; // ZAIMPORTUJ ROUTER

export const useAuthStore = defineStore('auth', {
  // ... state, getters ...
  state: () => ({
    accessToken: localStorage.getItem('accessToken') || null,
    refreshToken: localStorage.getItem('refreshToken') || null,
    user: JSON.parse(localStorage.getItem('user')) || { username: null, roles: [] },
  }),
  getters: {
    isLoggedIn: (state) => !!state.accessToken,
    userRoles: (state) => {
      return state.user && Array.isArray(state.user.roles) ? state.user.roles : [];
    },
    isAdmin: (state) => { // Zmieniono z userHasRole('ADMIN') na bezpośrednie sprawdzenie
      return state.user && Array.isArray(state.user.roles) && state.user.roles.includes('ADMIN');
    },
  },
  actions: {
    // ... (login, refreshTokenAction, changePassword - jak w VUE.txt, ale bez this.router)

    logoutSilently() {
      this.accessToken = null;
      this.refreshToken = null;
      this.user = { username: null, roles: [] };
      localStorage.removeItem('accessToken');
      localStorage.removeItem('refreshToken');
      localStorage.removeItem('user');
      delete apiClient.defaults.headers.common['Authorization'];
    },
    logout() {
      this.logoutSilently();
      router.push('/login'); // UŻYJ ZAIMPORTOWANEGO ROUTERA
    },
    // ... (reszta akcji - login, refreshTokenAction, changePassword, userHasRole)
    // Skopiujmy je z poprzedniej poprawionej wersji errorStore.js dla kompletności
    async login(credentials) {
      try {
        const response = await apiClient.post('/auth/login', credentials);
        if (response.data && response.data.accessToken) {
          const { accessToken, refreshToken, username, roles } = response.data;
          this.accessToken = accessToken;
          this.refreshToken = refreshToken;
          this.user = {
            username: username || credentials.username,
            roles: Array.isArray(roles) ? roles : []
          };
          localStorage.setItem('accessToken', accessToken);
          localStorage.setItem('refreshToken', refreshToken);
          localStorage.setItem('user', JSON.stringify(this.user));
          apiClient.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;
          return Promise.resolve(response.data);
        } else {
          throw new Error('Odpowiedź API nie zawiera tokenu dostępu.');
        }
      } catch (error) {
        console.error('Błąd logowania w authStore:', error.response?.data || error.message);
        this.logoutSilently(); // Wyloguj po błędzie
        let errorMessage = 'Nie udało się zalogować.';
        if (error.response && error.response.data) {
            if (typeof error.response.data === 'string') errorMessage = error.response.data;
            else if (error.response.data.message) errorMessage = error.response.data.message;
            else if (error.response.data.error) errorMessage = error.response.data.error;
        } else if (error.message) {
            errorMessage = error.message;
        }
        throw new Error(errorMessage);
      }
    },
    async refreshTokenAction() {
      if (!this.refreshToken) {
        this.logout(); // Tutaj wywołanie this.logout() jest OK, bo ono użyje zaimportowanego routera
        return Promise.reject(new Error('Brak refresh tokenu. Wymagane ponowne logowanie.'));
      }
      try {
        const response = await apiClient.post('/auth/refresh', { refreshToken: this.refreshToken });
        if (response.data && response.data.accessToken) {
          const { accessToken, username, roles } = response.data; // Zakładamy, że refresh też zwraca username i roles
          this.accessToken = accessToken;
          localStorage.setItem('accessToken', accessToken);
          apiClient.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;
           if (username && roles) { // Aktualizuj dane użytkownika, jeśli są w odpowiedzi
            this.user = { username, roles: Array.isArray(roles) ? roles : [] };
            localStorage.setItem('user', JSON.stringify(this.user));
          }
          return Promise.resolve(accessToken);
        } else {
          throw new Error('Odpowiedź API odświeżania nie zawiera nowego tokenu dostępu.');
        }
      } catch (error) {
        console.error('Błąd odświeżania tokenu:', error.response?.data || error.message);
        this.logout(); // Tutaj też OK
        throw new Error('Sesja wygasła lub refresh token jest nieprawidłowy. Proszę zalogować się ponownie.');
      }
    },
    async changePassword(payload) {
      if (!this.isLoggedIn) {
        throw new Error("Użytkownik nie jest zalogowany.");
      }
      try {
        const requestBody = {
          oldPassword: payload.oldPassword,
          newPassword: payload.newPassword,
          confirmNewPassword: payload.confirmNewPassword
        };
        const response = await apiClient.post('/auth/change-password', requestBody);
        return Promise.resolve(response.data);
      } catch (error) {
        console.error('Błąd podczas zmiany hasła w authStore:', error.response?.data || error.message);
        let errorMessage = 'Nie udało się zmienić hasła.';
         if (error.response && error.response.data) {
            if (typeof error.response.data === 'string') errorMessage = error.response.data;
            else if (error.response.data.message) errorMessage = error.response.data.message;
            else if (Array.isArray(error.response.data.details) && error.response.data.details.length > 0) errorMessage = error.response.data.details.join(' ');
            else if (error.response.data.error) errorMessage = error.response.data.error;
        } else if (error.message) {
            errorMessage = error.message;
        }
        throw new Error(errorMessage);
      }
    },
    userHasRole(roleName) {
      if (this.user && Array.isArray(this.user.roles)) {
        return this.user.roles.some(role => role.toUpperCase() === roleName.toUpperCase());
      }
      return false;
    }
  },
});

================================================================================
### PLIK: src\stores\errorStore.js
================================================================================

import { defineStore } from 'pinia'
import apiClient from '@/services/api.js';

export const useErrorStore = defineStore('error', {
  state: () => ({
    rejectedRequests: [],
    selectedRequestDetails: null,
    isLoading: false,
    pagination: {
      currentPage: 0,
      totalPages: 0,
      totalElements: 0,
      size: 15,
    },
    filters: {
      errorType: '',
      barcode: '',
      dateFrom: '',
      dateTo: '',
    },
    sort: {
      field: 'createdAt',
      direction: 'DESC',
    }
  }),
  actions: {
    async fetchRejectedRequests(page = this.pagination.currentPage, size = this.pagination.size) {
      this.isLoading = true;
      try {
        const params = new URLSearchParams();
        params.append('page', page);
        params.append('size', size);
        params.append('sort', `${this.sort.field},${this.sort.direction}`);

        if (this.filters.errorType) params.append('errorType', this.filters.errorType);
        if (this.filters.barcode) params.append('barcode', this.filters.barcode);
        if (this.filters.dateFrom) params.append('dateFrom', this.filters.dateFrom);
        if (this.filters.dateTo) params.append('dateTo', this.filters.dateTo);

        const response = await apiClient.get(`/processing-errors?${params.toString()}`);
        if (response.data && response.data.content) {
            if (page === 0) {
                this.rejectedRequests = response.data.content;
            } else {
                this.rejectedRequests = [...this.rejectedRequests, ...response.data.content];
            }
            this.pagination.currentPage = response.data.number;
            this.pagination.totalPages = response.data.totalPages;
            this.pagination.totalElements = response.data.totalElements;
            this.pagination.size = response.data.size;
        } else {
            this.rejectedRequests = [];
            this.pagination = { currentPage: 0, totalPages: 0, totalElements: 0, size: this.pagination.size };
        }
      } catch (error) {
        console.error('Błąd podczas pobierania odrzuconych żądań:', error.response?.data || error.message);
        this.rejectedRequests = [];
        this.pagination = { currentPage: 0, totalPages: 0, totalElements: 0, size: this.pagination.size };
      } finally {
        this.isLoading = false;
      }
    },

    async fetchErrorDetails(errorId) {
      this.isLoading = true;
      this.selectedRequestDetails = null;
      try {
        const response = await apiClient.get(`/processing-errors/${errorId}`);
        this.selectedRequestDetails = response.data;
      } catch (error) {
        console.error(`Błąd podczas pobierania szczegółów błędu ${errorId}:`, error.response?.data || error.message);
        throw error;
      } finally {
        this.isLoading = false;
      }
    },

    async resubmitRequest(payload) {
      this.isLoading = true;
      try {
        const response = await apiClient.post('/processing-errors/resubmit', payload);
        await this.fetchRejectedRequests(this.pagination.currentPage, this.pagination.size);
        return Promise.resolve(response.data?.message || "Żądanie zostało pomyślnie przesłane ponownie.");
      } catch (error) {
        console.error('Błąd podczas ponownego przesyłania żądania:', error.response?.data || error.message);
        throw new Error(error.response?.data?.message || error.response?.data || 'Nie udało się ponownie przesłać żądania.');
      } finally {
        this.isLoading = false;
      }
    },

    async sendVerificationEmailToCustomer(errorEventId) {
        if (!errorEventId) {
            throw new Error("EventID błędu jest wymagany do wysłania emaila.");
        }
        this.isLoading = true;
        try {
            const response = await apiClient.post(`/admin/address-verification/error/${errorEventId}/send-verification-email`);
            await this.fetchRejectedRequests(this.pagination.currentPage);
            if (this.selectedRequestDetails && this.selectedRequestDetails.eventId === errorEventId) {
            }
            return Promise.resolve(response.data?.message || "Proces wysyłania emaila weryfikacyjnego został zainicjowany.");
        } catch (error) {
            console.error(`Błąd podczas inicjowania wysyłki emaila weryfikacyjnego dla błędu ${errorEventId}:`, error.response?.data || error.message);
            const errorMessage = error.response?.data?.message || error.response?.data || 'Nie udało się zainicjować wysyłki emaila weryfikacyjnego.';
            throw new Error(errorMessage);
        } finally {
            this.isLoading = false;
        }
    },

    setFilter(filterName, value) {
      if (this.filters.hasOwnProperty(filterName)) {
        this.filters[filterName] = value;
        this.fetchRejectedRequests(0);
      }
    },
    setSort(field, direction) {
      this.sort.field = field;
      this.sort.direction = direction;
      this.fetchRejectedRequests(0);
    }
  }
})

================================================================================
### PLIK: src\views\ChangePasswordView.vue
================================================================================

<template>
  <div class="flex items-center justify-center min-h-[calc(100vh-200px)]">
    <div class="bg-white p-8 rounded-lg shadow-xl w-full max-w-md">
      <h2 class="text-3xl font-bold text-center text-indigo-600 mb-8">Zmień Hasło</h2>
      <form @submit.prevent="handleChangePassword">
        <div v-if="message" :class="messageType === 'success' ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'" class="mb-4 p-3 rounded text-sm">
          {{ message }}
        </div>

        <div class="mb-6">
          <label for="oldPassword" class="block text-sm font-medium text-gray-700 mb-1">Stare Hasło</label>
          <input
            type="password"
            id="oldPassword"
            v-model="oldPassword"
            required
            class="mt-1 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
            placeholder="••••••••"
          />
        </div>

        <div class="mb-6">
          <label for="newPassword" class="block text-sm font-medium text-gray-700 mb-1">Nowe Hasło</label>
          <input
            type="password"
            id="newPassword"
            v-model="newPassword"
            required
            minlength="8"
            class="mt-1 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
            placeholder="Minimum 8 znaków"
          />
        </div>

        <div class="mb-6">
          <label for="confirmNewPassword" class="block text-sm font-medium text-gray-700 mb-1">Potwierdź Nowe Hasło</label>
          <input
            type="password"
            id="confirmNewPassword"
            v-model="confirmNewPassword"
            required
            class="mt-1 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
            placeholder="••••••••"
          />
        </div>

        <div>
          <button
            type="submit"
            :disabled="isLoading"
            class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50"
          >
            <span v-if="isLoading" class="animate-spin mr-2">⏳</span>
            Zmień Hasło
          </button>
        </div>
      </form>
    </div>
  </div>
</template>

<script setup>
import { ref } from 'vue';
import { useRouter } from 'vue-router';
import { useAuthStore } from '@/stores/authStore';

const oldPassword = ref('');
const newPassword = ref('');
const confirmNewPassword = ref('');

const authStore = useAuthStore();
const router = useRouter();
const isLoading = ref(false);
const message = ref('');
const messageType = ref('');

const handleChangePassword = async () => {
  message.value = '';
  messageType.value = '';

  if (newPassword.value !== confirmNewPassword.value) {
    message.value = 'Nowe hasła nie są identyczne.';
    messageType.value = 'error';
    return;
  }

  if (newPassword.value.length < 8) {
    message.value = 'Nowe hasło musi mieć co najmniej 8 znaków.';
    messageType.value = 'error';
    return;
  }

  isLoading.value = true;
  try {
    await authStore.changePassword({
      oldPassword: oldPassword.value,
      newPassword: newPassword.value,
      confirmNewPassword: confirmNewPassword.value
    });
    message.value = 'Hasło zostało pomyślnie zmienione. Zostaniesz wylogowany.';
    messageType.value = 'success';
    oldPassword.value = '';
    newPassword.value = '';
    confirmNewPassword.value = '';
    setTimeout(() => {
      authStore.logout();
      router.push('/login');
    }, 3000);
  } catch (error) {
    message.value = error.message || 'Nie udało się zmienić hasła. Spróbuj ponownie.';
    messageType.value = 'error';
    console.error('Change password failed:', error);
  } finally {
    isLoading.value = false;
  }
};
</script>

<style scoped>
.animate-spin {
  animation: spin 1s linear infinite;
}
@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}
</style>

================================================================================
### PLIK: src\views\DashboardView.vue
================================================================================

<template>
  <div class="bg-white p-8 rounded-lg shadow-md">
    <h1 v-if="authStore.user" class="text-3xl font-bold text-gray-800 mb-4">
      Witaj na Dashboardzie, {{ authStore.user.username }}!
    </h1>
    <p class="text-gray-600">To jest chroniona zawartość.</p>
    <p class="mt-4">Twój Access Token (fragment): <code class="bg-gray-200 p-1 rounded text-sm">{{ shortAccessToken }}</code></p>
  </div>
</template>

<script setup>
import { computed } from 'vue'
import { useAuthStore } from '@/stores/authStore';

const authStore = useAuthStore()

const shortAccessToken = computed(() => {
  if (authStore.accessToken) {
    return authStore.accessToken.substring(0, 20) + '...'
  }
  return 'Brak tokenu'
})
</script>

================================================================================
### PLIK: src\views\HomeView.vue
================================================================================

<template>
  <div class="min-h-screen bg-gradient-to-tr from-[#121212] via-[#1e1e1e] to-[#000000] text-white">
    <div class="min-h-screen flex flex-col items-center justify-center px-6 py-12 relative">
      <div class="absolute top-0 left-0 right-0 p-6 flex justify-between items-center">
        <h1 class="text-3xl font-extrabold tracking-tight text-white">Danxils<span class="text-green-500">.js</span></h1>
        <button @click="toggleDarkMode" class="px-4 py-2 text-sm font-medium text-white bg-zinc-800 hover:bg-zinc-700 rounded-md">Toggle Theme</button>
      </div>

      <div class="text-center z-10">
        <h2 class="text-6xl md:text-7xl font-bold mb-6 leading-tight">
          <span class="text-white">Zanurz się w</span>
          <span class="block bg-gradient-to-r from-green-400 to-blue-500 text-transparent bg-clip-text">Nowoczesny Panel</span>
        </h2>
        <p class="text-zinc-400 text-lg md:text-xl max-w-2xl mx-auto mb-10">
          Zarządzaj błędami, kontroluj adresy, przetwarzaj dane i optymalizuj wszystko w czasie rzeczywistym. Z estetyką, która inspiruje.
        </p>

        <div class="flex flex-col sm:flex-row justify-center gap-4">
          <router-link to="/dashboard" class="inline-flex items-center justify-center px-8 py-3 text-base font-semibold text-black bg-green-400 hover:bg-green-300 rounded-full shadow-xl transition-all">Wejdź do Panelu</router-link>
          <router-link to="/login" class="inline-flex items-center justify-center px-8 py-3 text-base font-semibold text-white border border-white hover:bg-white hover:text-black rounded-full transition-all">Zaloguj się</router-link>
        </div>
      </div>

      <div class="absolute inset-0 -z-10 overflow-hidden">
        <div class="absolute -top-20 left-1/3 w-[600px] h-[600px] bg-green-600 rounded-full blur-[150px] opacity-30 animate-blob"></div>
        <div class="absolute top-1/2 right-1/4 w-[400px] h-[400px] bg-blue-600 rounded-full blur-[150px] opacity-20 animate-blob animation-delay-2000"></div>
      </div>
    </div>
  </div>
</template>

<script setup>
import { ref } from 'vue'
const darkMode = ref(false)
const toggleDarkMode = () => {
  darkMode.value = !darkMode.value
}
</script>

<style scoped>
@keyframes blob {
  0%, 100% {
    transform: translate(0px, 0px) scale(1);
  }
  33% {
    transform: translate(30px, -50px) scale(1.1);
  }
  66% {
    transform: translate(-20px, 20px) scale(0.9);
  }
}

.animate-blob {
  animation: blob 15s infinite ease-in-out;
}
.animation-delay-2000 {
  animation-delay: -7s;
}
</style>


================================================================================
### PLIK: src\views\LoginView.vue
================================================================================

<template>
  <div class="flex items-center justify-center min-h-[calc(100vh-200px)]">
    <div class="bg-white p-8 rounded-lg shadow-xl w-full max-w-md">
      <h2 class="text-3xl font-bold text-center text-indigo-600 mb-8">Logowanie</h2>
      <form @submit.prevent="handleLogin">
        <div v-if="errorMessage" class="mb-4 p-3 bg-red-100 text-red-700 rounded-md border border-red-200">
          {{ errorMessage }}
        </div>
        <div class="mb-6">
          <label for="username" class="block text-sm font-medium text-gray-700 mb-1">Nazwa użytkownika</label>
          <input
            type="text"
            id="username"
            v-model="username"
            required
            class="mt-1 block w-full px-4 py-2.5 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm transition duration-150 ease-in-out"
            placeholder="username"
          />
        </div>
        <div class="mb-6">
          <label for="password" class="block text-sm font-medium text-gray-700 mb-1">Hasło</label>
          <input
            type="password"
            id="password"
            v-model="password"
            required
            class="mt-1 block w-full px-4 py-2.5 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm transition duration-150 ease-in-out"
            placeholder="••••••••"
          />
        </div>
        <div>
          <button
            type="submit"
            :disabled="isLoading"
            class="w-full flex items-center justify-center py-2.5 px-4 border border-transparent rounded-md shadow-lg text-base font-semibold text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 transition-all duration-200"
          >
            <span v-if="isLoading" class="animate-spin mr-2 h-5 w-5 border-2 border-white border-t-transparent rounded-full"></span>
            Zaloguj
          </button>
        </div>
      </form>
    </div>
  </div>
</template>

<script setup>
import { ref } from 'vue'
import { useRouter } from 'vue-router'
import { useAuthStore } from '@/stores/authStore';

const username = ref('')
const password = ref('')
const authStore = useAuthStore()
const router = useRouter()
const isLoading = ref(false)
const errorMessage = ref('')

const handleLogin = async () => {
  isLoading.value = true
  errorMessage.value = ''
  try {
    await authStore.login({ username: username.value, password: password.value })
    router.push('/dashboard')
  } catch (error) {
    errorMessage.value = error.message || 'Logowanie nie powiodło się. Sprawdź dane lub spróbuj później.'
    console.error('Login failed:', error)
  } finally {
    isLoading.value = false
  }
}
</script>
<style scoped>
.animate-spin {
  animation: spin 1s linear infinite;
}
@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}
</style>

================================================================================
### PLIK: src\views\NotFoundView.vue
================================================================================

<template>
  <div class="flex flex-col items-center justify-center min-h-[calc(100vh-200px)] text-center px-4">
    <div class="bg-white p-8 sm:p-12 rounded-xl shadow-2xl max-w-md w-full">
      <svg class="w-24 h-24 text-indigo-400 mx-auto mb-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
      <h1 class="text-5xl font-extrabold text-indigo-600 mb-3">404</h1>
      <p class="text-xl font-medium text-slate-700 mb-6">Oops! Strona nie została znaleziona.</p>
      <p class="text-slate-500 mb-8">
        Strona, której szukasz, mogła zostać usunięta, jej nazwa uległa zmianie lub jest tymczasowo niedostępna.
      </p>
      <router-link
        to="/"
        class="inline-block px-8 py-3 text-sm font-semibold leading-tight text-white bg-indigo-600 rounded-lg shadow-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 transition-colors"
      >
        Wróć na Stronę Główną
      </router-link>
    </div>
  </div>
</template>

<script setup>
</script>

================================================================================
### PLIK: src\views\OrderStatusView.vue
================================================================================

<template>
  <div class="bg-white p-6 md:p-8 rounded-xl shadow-lg">
    <h1 class="text-2xl font-bold text-slate-800 mb-6 border-b pb-3">Przegląd Statusów Zamówień</h1>

    <div class="mb-6">
      <input type="text" placeholder="Wyszukaj po kodzie kreskowym..." class="p-3 border border-slate-300 rounded-md w-full md:w-1/2 lg:w-1/3 focus:ring-indigo-500 focus:border-indigo-500 transition shadow-sm">
    </div>

    <div class="text-center py-10 text-slate-500">
      <p class="text-lg">Funkcjonalność przeglądania statusów zamówień jest w trakcie implementacji.</p>
      <p class="text-sm mt-2">Wkrótce pojawią się tutaj dane dotyczące statusów.</p>
      <svg class="w-16 h-16 text-slate-300 mx-auto mt-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
    </div>

    </div>
</template>

<script setup>
</script>

================================================================================
### PLIK: src\views\RejectedRequestsView.vue
================================================================================

<template>
  <div class="container mx-auto p-4 sm:p-6 lg:p-8">
    <div class="bg-gradient-to-r from-slate-700 to-slate-900 text-white p-6 rounded-xl shadow-2xl mb-8">
      <h1 class="text-3xl sm:text-4xl font-bold">Odrzucone Żądania</h1>
      <p class="mt-2 text-slate-300">Przeglądaj, filtruj i zarządzaj odrzuconymi zleceniami.</p>
    </div>

    <div class="mb-6 p-6 bg-white rounded-xl shadow-lg">
      <h2 class="text-xl font-semibold mb-4 text-slate-700 border-b border-slate-200 pb-3">Filtry</h2>
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
        <div>
          <label for="filterBarcode" class="block text-xs font-medium text-slate-600 mb-1">Kod Kreskowy:</label>
          <input type="text" id="filterBarcode" v-model="localFilters.barcode" @input="applyFilterDebounced('barcode', $event.target.value)"
                 class="p-2.5 w-full border border-slate-300 rounded-lg shadow-sm focus:ring-indigo-500 focus:border-indigo-500 transition duration-150 text-sm"
                 placeholder="Wpisz kod...">
        </div>
        <div>
          <label for="filterErrorType" class="block text-xs font-medium text-slate-600 mb-1">Typ Błędu:</label>
          <select id="filterErrorType" v-model="localFilters.errorType" @change="applyFilterDebounced('errorType', $event.target.value)"
                  class="p-2.5 w-full border border-slate-300 rounded-lg shadow-sm focus:ring-indigo-500 focus:border-indigo-500 transition duration-150 text-sm bg-white">
            <option value="">Wszystkie</option>
            <option value="VALIDATION">Błąd Walidacji</option>
            <option value="PROCESSING">Błąd Przetwarzania</option>
            <option value="DESERIALIZATION_ERROR">Błąd Deserializacji</option>
            <option value="CONSTRAINT_VIOLATION">Naruszenie Ograniczeń</option>
            <option value="LISTENER_EXECUTION_FAILURE">Błąd Listenera</option>
            <option value="ADDRESS_ALIAS_MISMATCH_DB">Niezgodność Aliasu DB</option>
            <option value="ADDRESS_HERE_NEEDS_REVIEW">Adres HERE Wymaga Weryfikacji</option>
            <option value="ADDRESS_HERE_INVALID">Adres HERE Niepoprawny</option>
            <option value="ADDRESS_CUSTOMER_VERIFICATION_PENDING">Oczekuje na Potw. Klienta</option>
            <option value="EXTERNAL_SERVICE_FAILURE">Błąd Usługi Zewnętrznej</option>
            <option value="ADDRESS_DB_ERROR">Błąd DB Adresu</option>
          </select>
        </div>
      </div>
    </div>

    <div v-if="errorStore.isLoading && !errorStore.rejectedRequests.length" class="text-center py-16">
      <div class="animate-spin rounded-full h-12 w-12 border-t-4 border-b-4 border-indigo-500 mx-auto"></div>
      <p class="text-lg text-slate-500 mt-5">Ładowanie danych...</p>
    </div>
    <div v-else-if="!errorStore.isLoading && errorStore.rejectedRequests.length === 0" class="text-center py-16 bg-white rounded-xl shadow-md">
      <svg class="mx-auto h-16 w-16 text-slate-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
        <path vector-effect="non-scaling-stroke" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z" />
      </svg>
      <h3 class="mt-3 text-lg font-medium text-slate-800">Brak odrzuconych żądań</h3>
      <p class="mt-1 text-sm text-slate-500">Nie znaleziono żądań pasujących do wybranych filtrów.</p>
    </div>

    <div v-else class="bg-white rounded-xl shadow-xl overflow-x-auto">
      <table class="min-w-full divide-y divide-slate-200">
        <thead class="bg-slate-50">
          <tr>
            <th @click="changeSort('eventId')" class="px-4 py-3 text-left text-xs font-semibold text-slate-500 uppercase tracking-wider cursor-pointer hover:bg-slate-100">ID Błędu <span v-html="sortIcon('eventId')"></span></th>
            <th @click="changeSort('requestID')" class="px-4 py-3 text-left text-xs font-semibold text-slate-500 uppercase tracking-wider cursor-pointer hover:bg-slate-100">Request ID <span v-html="sortIcon('requestID')"></span></th>
            <th @click="changeSort('barcode')" class="px-4 py-3 text-left text-xs font-semibold text-slate-500 uppercase tracking-wider cursor-pointer hover:bg-slate-100">Barcode <span v-html="sortIcon('barcode')"></span></th>
            <th @click="changeSort('errorType')" class="px-4 py-3 text-left text-xs font-semibold text-slate-500 uppercase tracking-wider cursor-pointer hover:bg-slate-100">Typ Błędu <span v-html="sortIcon('errorType')"></span></th>
            <th class="px-4 py-3 text-left text-xs font-semibold text-slate-500 uppercase tracking-wider">Status Weryf. Adr.</th>
            <th class="px-4 py-3 text-left text-xs font-semibold text-slate-500 uppercase tracking-wider">Wiadomość</th>
            <th @click="changeSort('createdAt')" class="px-4 py-3 text-left text-xs font-semibold text-slate-500 uppercase tracking-wider cursor-pointer hover:bg-slate-100">Data <span v-html="sortIcon('createdAt')"></span></th>
            <th class="px-4 py-3 text-left text-xs font-semibold text-slate-500 uppercase tracking-wider">Akcje</th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-slate-200">
          <tr v-for="error in errorStore.rejectedRequests" :key="error.id" class="hover:bg-slate-50/70 transition duration-150 ease-in-out">
            <td class="px-4 py-3 whitespace-nowrap text-xs text-slate-600 font-mono">{{ error.eventId.substring(0,8) }}...</td>
            <td class="px-4 py-3 whitespace-nowrap text-sm text-slate-700">{{ error.requestID || 'N/A' }}</td>
            <td class="px-4 py-3 whitespace-nowrap text-sm text-slate-700">{{ error.barcode || 'N/A' }}</td>
            <td class="px-4 py-3 whitespace-nowrap text-sm">
                <span :class="getErrorTypeClassForTable(error.errorType)">{{ error.errorType || 'N/A' }}</span>
            </td>
            <td class="px-4 py-3 whitespace-nowrap text-sm text-slate-700">{{ error.addressVerificationStatus || 'N/A' }}</td>
            <td class="px-4 py-3 text-sm text-slate-600 max-w-sm truncate" :title="error.errorMessage">
              {{ error.errorMessage ? error.errorMessage.substring(0, 70) + (error.errorMessage.length > 70 ? '...' : '') : 'Brak' }}
            </td>
            <td class="px-4 py-3 whitespace-nowrap text-sm text-slate-600">{{ formatDateForTable(error.createdAt) }}</td>
            <td class="px-4 py-3 whitespace-nowrap text-sm font-medium">
              <button @click="openErrorDetailsModal(error)" class="text-indigo-600 hover:text-indigo-800 font-semibold hover:underline text-xs">Szczegóły</button>
            </td>
          </tr>
        </tbody>
      </table>
      
      <div class="py-3 px-4 border-t border-slate-200 bg-slate-50 flex items-center justify-between">
        <div class="text-xs text-slate-600">
          Strona {{ errorStore.pagination.currentPage + 1 }} / {{ errorStore.pagination.totalPages }} ({{ errorStore.pagination.totalElements }} wyników)
        </div>
        <div class="flex space-x-1.5">
          <button 
            @click="goToPage(errorStore.pagination.currentPage - 1)" 
            :disabled="errorStore.pagination.currentPage === 0"
            class="px-3 py-1.5 border border-slate-300 text-xs font-medium rounded-md text-slate-700 bg-white hover:bg-slate-100 disabled:opacity-50 disabled:cursor-not-allowed transition duration-150 ease-in-out">
            Poprzednia
          </button>
          <button 
            @click="goToPage(errorStore.pagination.currentPage + 1)" 
            :disabled="errorStore.pagination.currentPage >= errorStore.pagination.totalPages - 1"
            class="px-3 py-1.5 border border-slate-300 text-xs font-medium rounded-md text-slate-700 bg-white hover:bg-slate-100 disabled:opacity-50 disabled:cursor-not-allowed transition duration-150 ease-in-out">
            Następna
          </button>
        </div>
      </div>
    </div>

    <ErrorDetailsModal 
        v-if="showModal"
        :error="currentSelectedError"
        :is-resubmitting="isResubmitting"
        :is-email-sending="isEmailSending"
        :resubmit-message="modalResubmitMessage"
        :resubmit-message-type="modalResubmitMessageType"
        :email-send-message="modalEmailSendMessage"
        :email-send-message-type="modalEmailSendMessageType"
        @close="handleCloseModal"
        @resubmit="handleModalResubmit"
        @send-verification-email="handleModalSendEmail"
    />
  </div>
</template>

<script setup>
import { ref, onMounted } from 'vue';
import { useErrorStore } from '@/stores/errorStore';
import ErrorDetailsModal from '@/components/ErrorDetailsModal.vue';

const errorStore = useErrorStore();

const currentSelectedError = ref(null);
const showModal = ref(false);
const isResubmitting = ref(false);
const modalResubmitMessage = ref('');
const modalResubmitMessageType = ref('');
const isEmailSending = ref(false);
const modalEmailSendMessage = ref('');
const modalEmailSendMessageType = ref('');

const localFilters = ref({
  barcode: errorStore.filters.barcode,
  errorType: errorStore.filters.errorType,
});

let filterDebounceTimeout = null;
const applyFilterDebounced = (filterName, value) => {
  localFilters.value[filterName] = value;
  clearTimeout(filterDebounceTimeout);
  filterDebounceTimeout = setTimeout(() => {
    errorStore.setFilter(filterName, value);
  }, 500);
};

onMounted(() => {
  errorStore.fetchRejectedRequests();
});

const formatDateForTable = (dateString) => {
  if (!dateString) return 'N/A';
  const date = new Date(dateString);
  return date.toLocaleString('pl-PL', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' });
};

const openErrorDetailsModal = async (error) => {
  currentSelectedError.value = { ...error };
  modalResubmitMessage.value = '';
  modalEmailSendMessage.value = '';
  showModal.value = true;
};

const handleCloseModal = () => {
  showModal.value = false;
  currentSelectedError.value = null;
};

const handleModalResubmit = async (payload) => {
  if (!currentSelectedError.value) return;
  isResubmitting.value = true;
  modalResubmitMessage.value = '';
  modalResubmitMessageType.value = '';
  try {
    const message = await errorStore.resubmitRequest({
      errorEventId: payload.eventId,
      correctedRawPayload: payload.correctedRawPayload
    });
    modalResubmitMessage.value = message || "Żądanie pomyślnie przesłane ponownie.";
    modalResubmitMessageType.value = 'success';
    setTimeout(() => {
      if (showModal.value) { // Zamknij modal tylko jeśli jest nadal otwarty
          handleCloseModal();
      }
      errorStore.fetchRejectedRequests(errorStore.pagination.currentPage);
    }, 2500);
  } catch (error) {
    modalResubmitMessage.value = error.message || "Nie udało się ponownie przesłać żądania.";
    modalResubmitMessageType.value = 'error';
  } finally {
    isResubmitting.value = false;
  }
};

const handleModalSendEmail = async (payload) => {
    if (!currentSelectedError.value) return;
    isEmailSending.value = true;
    modalEmailSendMessage.value = '';
    modalEmailSendMessageType.value = '';
    try {
        const message = await errorStore.sendVerificationEmailToCustomer(payload.eventId);
        modalEmailSendMessage.value = message || "Zlecenie wysłania emaila weryfikacyjnego zostało przyjęte.";
        modalEmailSendMessageType.value = 'success';
        
        // Odśwież dane błędu w modalu (jeśli nadal jest otwarty) LUB po prostu odśwież listę
        // errorStore.fetchRejectedRequests(errorStore.pagination.currentPage) już jest w sendVerificationEmailToCustomer
        // więc dane w tabeli się odświeżą. Jeśli modal ma być dalej otwarty, musimy zaktualizować currentSelectedError.
        if (currentSelectedError.value && currentSelectedError.value.eventId === payload.eventId) {
            // Możemy spróbować znaleźć zaktualizowany błąd na liście
            const updatedErrorFromList = errorStore.rejectedRequests.find(e => e.eventId === payload.eventId);
            if (updatedErrorFromList) {
                currentSelectedError.value = { ...updatedErrorFromList };
            } else {
                // Jeśli błąd zniknął z listy (np. został rozwiązany), zamknij modal
                // lub obsłuż to inaczej. Na razie zostawiamy otwarty z potencjalnie starymi danymi,
                // zakładając, że fetchRejectedRequests w store zaktualizuje tabelę.
            }
        }

    } catch (error) {
        modalEmailSendMessage.value = error.message || "Nie udało się wysłać emaila weryfikacyjnego.";
        modalEmailSendMessageType.value = 'error';
    } finally {
        isEmailSending.value = false;
    }
};

const goToPage = (pageNumber) => {
  if (pageNumber >= 0 && pageNumber < errorStore.pagination.totalPages) {
    errorStore.fetchRejectedRequests(pageNumber);
  }
};

const changeSort = (field) => {
  let direction = 'ASC';
  if (errorStore.sort.field === field && errorStore.sort.direction === 'ASC') {
    direction = 'DESC';
  }
  errorStore.setSort(field, direction);
};

const sortIcon = (field) => {
  if (errorStore.sort.field === field) {
    return errorStore.sort.direction === 'ASC' ? '&#9650;' : '&#9660;';
  }
  return ''; // Lub neutralna ikona '&#8693;'
};

const getErrorTypeClassForTable = (errorType) => {
    let base = 'px-2 py-0.5 rounded-full text-xs font-semibold inline-block leading-tight ';
    if (['ADDRESS_ALIAS_MISMATCH_DB', 'ADDRESS_HERE_NEEDS_REVIEW', 'ADDRESS_HERE_INVALID'].includes(errorType)) return base + 'bg-orange-100 text-orange-600 border border-orange-200';
    if (errorType === 'ADDRESS_CUSTOMER_VERIFICATION_PENDING') return base + 'bg-yellow-100 text-yellow-600 border border-yellow-200';
    if (['VALIDATION', 'CONSTRAINT_VIOLATION', 'DESERIALIZATION_ERROR'].includes(errorType)) return base + 'bg-red-100 text-red-600 border border-red-200';
    if (['PROCESSING', 'LISTENER_EXECUTION_FAILURE', 'EXTERNAL_SERVICE_FAILURE', 'ADDRESS_DB_ERROR'].includes(errorType)) return base + 'bg-purple-100 text-purple-600 border border-purple-200';
    return base + 'bg-slate-100 text-slate-600 border border-slate-200';
};
</script>

<style scoped>
.animate-spin {
  animation: spin 1s linear infinite;
}
@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}
.max-w-xs { max-width: 20rem; }
.max-w-sm { max-width: 24rem; }
</style>

================================================================================
### PLIK: src\views\admin\AddressProvidersView.vue
================================================================================

<template>
  <div class="container mx-auto p-4 sm:p-6 lg:p-8">
    <div class="bg-gradient-to-r from-slate-700 to-slate-900 text-white p-6 rounded-xl shadow-2xl mb-8">
      <h1 class="text-3xl sm:text-4xl font-bold">Zarządzanie Dostawcami Weryfikacji Adresów</h1>
      <p class="mt-2 text-slate-300">Konfiguruj aktywnego dostawcę używanego przez system TES.</p>
    </div>

    <div class="bg-white p-6 md:p-8 rounded-xl shadow-lg">
      <div v-if="isLoadingInitialData && !isPollingAnyOperation()" class="text-center py-10">
        <div class="animate-spin rounded-full h-10 w-10 border-t-4 border-b-4 border-indigo-500 mx-auto mb-4"></div>
        <p class="text-slate-600">Ładowanie początkowej konfiguracji dostawców...</p>
      </div>

      <div v-else-if="loadError" class="p-4 mb-4 text-sm text-red-700 bg-red-100 rounded-lg border border-red-300">
        <strong class="font-bold">Błąd ładowania konfiguracji:</strong> {{ loadError }}
        <button @click="fetchInitialProviderData" :disabled="isLoadingInitialData || isPollingAnyOperation()" class="ml-2 text-xs text-red-700 underline">Spróbuj ponownie</button>
      </div>

      <div v-else>
        <div class="mb-6 pb-4 border-b border-slate-200">
          <h2 class="text-xl font-semibold text-slate-700 mb-1">Aktualnie Aktywny Dostawca</h2>
          <div class="flex items-center">
            <div v-if="pollingStatus.currentProvider.isLoading && !currentProvider" class="text-slate-500 italic text-sm flex items-center">
              <span class="animate-spin h-4 w-4 mr-1 border-2 border-slate-400 border-t-transparent rounded-full"></span>
              Pobieranie... {{ pollingStatus.currentProvider.correlationId ? `(ID: ${pollingStatus.currentProvider.correlationId.substring(0,8)}...)` : '' }}
            </div>
            <p v-else-if="currentProvider" class="text-lg">
              <span class="font-bold px-3 py-1 rounded-full text-white" :class="getProviderBadgeClass(currentProvider)">
                {{ currentProvider.toUpperCase() }}
              </span>
              <span v-if="currentProvider.toLowerCase() === 'none'" class="ml-2 text-sm text-slate-500 italic">
                (Weryfikacja zewnętrzna jest wyłączona)
              </span>
            </p>
            <p v-else class="text-slate-500 italic">Nie można było ustalić aktywnego dostawcy.</p>

            <button @click="refreshCurrentProvider" :disabled="isLoadingInitialData || isPollingAnyOperation()" title="Odśwież aktualnego dostawcę" class="ml-4 text-xs text-indigo-600 hover:text-indigo-800 disabled:opacity-50 disabled:cursor-not-allowed p-1 rounded hover:bg-indigo-50">
              <svg v-if="pollingStatus.currentProvider.isLoading" class="animate-spin h-4 w-4 text-indigo-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
              </svg>
              <span v-else>Odśwież</span>
            </button>
          </div>
           <p v-if="pollingStatus.currentProvider.error" class="text-xs text-red-500 mt-1">{{ pollingStatus.currentProvider.error }}</p>
        </div>

        <div class="mb-8">
          <label for="providerSelect" class="block text-sm font-medium text-slate-700 mb-1">Wybierz nowego dostawcę:</label>
          <div class="flex items-center space-x-3">
            <select
              id="providerSelect"
              v-model="selectedProviderToSet"
              class="block w-full max-w-xs p-2.5 border border-slate-300 rounded-lg shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm bg-white transition duration-150"
              :disabled="pollingStatus.setProvider.isLoading || isPollingAnyOperationExcept('setProvider')"
            >
              <option disabled value="">-- Wybierz --</option>
              <option
                v-for="provider in availableProviders"
                :key="provider"
                :value="provider.toLowerCase()"
              >
                {{ provider.toUpperCase() }}
              </option>
              <option value="none">NONE (Wyłącz weryfikację)</option>
            </select>
            <button
              @click="requestSetProvider"
              :disabled="pollingStatus.setProvider.isLoading || !selectedProviderToSet || selectedProviderToSet === currentProvider || isPollingAnyOperationExcept('setProvider')"
              class="inline-flex items-center justify-center px-4 py-2.5 text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
            >
              <span v-if="pollingStatus.setProvider.isLoading" class="animate-spin h-4 w-4 -ml-1 mr-2 border-2 border-white border-t-transparent rounded-full"></span>
              {{ pollingStatus.setProvider.isLoading ? 'Przetwarzanie...' : 'Ustaw Aktywnego' }}
            </button>
          </div>
          <p v-if="selectedProviderToSet && selectedProviderToSet === currentProvider && !pollingStatus.setProvider.isLoading" class="text-xs text-slate-500 mt-1 italic">
            Wybrany dostawca jest już aktywny.
          </p>
        </div>

        <div v-if="operationMessage" :class="operationMessageType === 'success' ? 'bg-green-100 text-green-700 border-green-300' : (operationMessageType === 'info' ? 'bg-blue-100 text-blue-700 border-blue-300' : 'bg-red-100 text-red-700 border-red-300')" class="p-3 rounded-md border text-sm mb-4">
          {{ operationMessage }}
        </div>
         <div v-if="pollingStatus.setProvider.isLoading" class="text-sm text-slate-600 italic mb-4 flex items-center">
            <span class="animate-spin h-4 w-4 mr-2 border-2 border-slate-400 border-t-transparent rounded-full"></span>
            Oczekiwanie na wynik operacji (ID: {{ pollingStatus.setProvider.correlationId?.substring(0,8) || 'Zapisywanie' }})...
        </div>
        <p v-if="pollingStatus.setProvider.error" class="text-xs text-red-500 mt-1 mb-4">{{ pollingStatus.setProvider.error }}</p>

        <div class="mt-8 pt-6 border-t border-slate-200">
          <h3 class="text-lg font-semibold text-slate-700 mb-1">Dostępni Dostawcy w Systemie:</h3>
           <div class="flex items-center">
            <ul v-if="availableProviders.length && !pollingStatus.availableProviders.isLoading" class="list-disc list-inside space-y-1 text-sm text-slate-600">
                <li v-for="provider in availableProviders" :key="provider">{{ provider }}</li>
                <li><b>NONE</b> - opcja wyłączenia zewnętrznej weryfikacji adresów.</li>
            </ul>
            <p v-else-if="pollingStatus.availableProviders.isLoading" class="text-slate-500 italic text-sm ml-2 flex items-center">
                <span class="animate-spin h-4 w-4 mr-1 border-2 border-slate-400 border-t-transparent rounded-full"></span>
                Pobieranie listy... ({{ pollingStatus.availableProviders.correlationId?.substring(0,8) || 'ID' }}...)
            </p>
            <p v-else class="text-slate-500 italic">Brak informacji o dostępnych zaimplementowanych dostawcach.</p>
            <button @click="refreshAvailableProviders" :disabled="isLoadingInitialData || isPollingAnyOperation()" title="Odśwież listę dostępnych dostawców" class="ml-4 text-xs text-indigo-600 hover:text-indigo-800 disabled:opacity-50 disabled:cursor-not-allowed p-1 rounded hover:bg-indigo-50">
               <svg v-if="pollingStatus.availableProviders.isLoading" class="animate-spin h-4 w-4 text-indigo-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
              </svg>
              <span v-else>Odśwież listę</span>
            </button>
           </div>
           <p v-if="pollingStatus.availableProviders.error" class="text-xs text-red-500 mt-1">{{ pollingStatus.availableProviders.error }}</p>

          <p class="text-xs text-slate-500 mt-4">
            <strong class="font-semibold">Uwaga:</strong> Zmiana aktywnego dostawcy jest zapisywana w konfiguracji centralnej (TES).
            System TES może wymagać odświeżenia konfiguracji, aby zmiana weszła w pełni w życie.
          </p>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup>
import { ref, onMounted, onUnmounted } from 'vue';
import apiClient from '@/services/api';
import { useAuthStore } from '@/stores/authStore';

const authStore = useAuthStore();

const isLoadingInitialData = ref(true);
const loadError = ref('');
const currentProvider = ref('');
const availableProviders = ref([]);
const selectedProviderToSet = ref('');

const operationMessage = ref('');
const operationMessageType = ref(''); // 'success', 'error', 'info'

const pollingStatus = ref({
    currentProvider: { correlationId: null, isLoading: false, error: null, intervalId: null, description: "Pobieranie aktualnego dostawcy" },
    availableProviders: { correlationId: null, isLoading: false, error: null, intervalId: null, description: "Pobieranie listy dostępnych dostawców" },
    setProvider: { correlationId: null, isLoading: false, error: null, intervalId: null, description: "Ustawianie aktywnego dostawcy" }
});

const MAX_POLLS = 20;
const POLL_INTERVAL_MS = 3000;

const clearPollingForOperation = (operationKey) => {
    if (pollingStatus.value[operationKey]?.intervalId) {
        clearInterval(pollingStatus.value[operationKey].intervalId);
    }
    pollingStatus.value[operationKey] = { 
        ...pollingStatus.value[operationKey],
        isLoading: false, 
        error: null, 
        intervalId: null 
    };
};

const clearAllPolling = () => {
    Object.keys(pollingStatus.value).forEach(key => clearPollingForOperation(key));
};

onUnmounted(() => {
    clearAllPolling();
});

const isPollingAnyOperation = () => {
    return Object.values(pollingStatus.value).some(op => op.isLoading);
};

const isPollingAnyOperationExcept = (exceptKey) => {
    return Object.entries(pollingStatus.value)
        .filter(([key]) => key !== exceptKey)
        .some(([,op]) => op.isLoading);
};


const pollOperation = async (correlationId, operationKey) => {
    const opDesc = pollingStatus.value[operationKey].description;
    
    if (!correlationId) {
        const errorMsg = `Brak CorrelationID dla operacji: ${opDesc}`;
        pollingStatus.value[operationKey].error = errorMsg;
        pollingStatus.value[operationKey].isLoading = false;
        if (operationKey === 'setProvider' || operationKey === 'currentProvider' || operationKey === 'availableProviders') { // Aktualizuj główny komunikat dla wszystkich operacji tego widoku
            operationMessage.value = errorMsg;
            operationMessageType.value = 'error';
        }
        return Promise.reject(new Error(errorMsg));
    }
    
    pollingStatus.value[operationKey].correlationId = correlationId;
    pollingStatus.value[operationKey].isLoading = true;
    pollingStatus.value[operationKey].error = null;
    
    // Komunikat o przetwarzaniu dla wszystkich operacji
    operationMessage.value = `Przetwarzanie: ${opDesc} (ID: ${correlationId.substring(0,8)}...).`;
    operationMessageType.value = 'info';


    return new Promise((resolve, reject) => {
        let polls = 0;
        if (pollingStatus.value[operationKey].intervalId) {
            clearInterval(pollingStatus.value[operationKey].intervalId);
        }

        pollingStatus.value[operationKey].intervalId = setInterval(async () => {
            polls++;
            if (!pollingStatus.value[operationKey].isLoading || polls > MAX_POLLS) {
                if (polls > MAX_POLLS && pollingStatus.value[operationKey].isLoading) {
                    pollingStatus.value[operationKey].error = `Timeout oczekiwania na zakończenie operacji '${opDesc}' (CorrID: ${correlationId}).`;
                }
                const finalErrorMsg = pollingStatus.value[operationKey].error || `Polling for ${opDesc} (CorrID: ${correlationId}) stopped or timed out.`;
                operationMessage.value = finalErrorMsg;
                operationMessageType.value = 'error';
                
                clearPollingForOperation(operationKey);
                return reject(new Error(finalErrorMsg));
            }

            console.debug(`Odpytywanie operacji ${operationKey} (CorrID: ${correlationId}), próba ${polls}`);
            try {
                const res = await apiClient.get(`/api/admin/address-verification/operations/${correlationId}`);
                
                if (res.data && res.data.status === 'COMPLETED') {
                    clearPollingForOperation(operationKey);
                    console.info(`Operacja '${opDesc}' (CorrID: ${correlationId}) zakończona sukcesem.`);
                     if (operationKey === 'setProvider') {
                         operationMessage.value = (res.data.result && typeof res.data.result === 'string') ? res.data.result : `Operacja '${opDesc}' zakończona pomyślnie.`;
                         operationMessageType.value = 'success';
                     } else if (operationMessage.value.startsWith('Przetwarzanie')) { // Tylko jeśli nie ma innego błędu
                        operationMessage.value = `Operacja '${opDesc}' zakończona.`;
                        operationMessageType.value = 'success';
                     }
                    resolve(res.data.result);
                } else if (res.data && res.data.status === 'FAILED') {
                    clearPollingForOperation(operationKey);
                    const errorMsg = res.data.errorDetails || `Operacja ${opDesc} nie powiodła się.`;
                    pollingStatus.value[operationKey].error = errorMsg;
                    operationMessage.value = errorMsg;
                    operationMessageType.value = 'error';
                    console.error(`Operacja '${opDesc}' (CorrID: ${correlationId}) zakończona błędem: ${errorMsg}`);
                    reject(new Error(errorMsg));
                } else if (res.data && (res.data.status === 'PENDING' || res.data.status === 'PROCESSING')) {
                    // Kontynuuj odpytywanie
                    // Można zaktualizować `operationMessage` o statusie PENDING/PROCESSING
                    operationMessage.value = `Operacja '${opDesc}' w toku (Status: ${res.data.status}, ID: ${correlationId.substring(0,8)})...`;
                    operationMessageType.value = 'info';
                } else { 
                    clearPollingForOperation(operationKey);
                    const unexpectedMsg = `Nieoczekiwany status operacji '${res.data?.status || 'BRAK'}' dla '${opDesc}' (CorrID: ${correlationId}).`;
                    pollingStatus.value[operationKey].error = unexpectedMsg;
                    operationMessage.value = unexpectedMsg;
                    operationMessageType.value = 'error';
                    console.error(unexpectedMsg);
                    reject(new Error(unexpectedMsg));
                }
            } catch (pollError) {
                clearPollingForOperation(operationKey);
                const networkErrorMsg = `Błąd sieci podczas odpytywania o status operacji '${opDesc}' (CorrID: ${correlationId}).`;
                pollingStatus.value[operationKey].error = pollError.response?.data?.error || pollError.message || networkErrorMsg;
                operationMessage.value = pollingStatus.value[operationKey].error;
                operationMessageType.value = 'error';
                console.error(networkErrorMsg, pollError);
                reject(new Error(pollingStatus.value[operationKey].error));
            }
        }, POLL_INTERVAL_MS);
    });
};

const initiateOperation = async (endpoint, operationKey, payload = null, httpMethod = 'POST') => {
    if (!authStore.isLoggedIn) {
        loadError.value = "Użytkownik nie jest zalogowany."; // Ustaw loadError zamiast rzucać, aby obsłużyć w UI
        isLoadingInitialData.value = false; // Jeśli to było ładowanie początkowe
        return Promise.reject(new Error("Użytkownik nie jest zalogowany."));
    }
    const opDesc = pollingStatus.value[operationKey].description;
    clearPollingForOperation(operationKey); // Wyczyść poprzedni stan dla tej operacji

    pollingStatus.value[operationKey].isLoading = true;
    pollingStatus.value[operationKey].error = null;
    
    if (operationKey === 'setProvider' || isLoadingInitialData.value) {
         operationMessage.value = `Inicjowanie: ${opDesc}...`;
         operationMessageType.value = 'info';
    }

    try {
        let response;
        const config = (payload && (payload instanceof String || typeof payload === 'string')) ? { headers: { 'Content-Type': 'text/plain' } } : {};

        if (httpMethod.toUpperCase() === 'POST') {
            response = await apiClient.post(endpoint, payload, config);
        } else { // Dla GET, payload jest ignorowany
            response = await apiClient.get(endpoint, config);
        }
        
        const correlationId = response.data.correlationId;
        if (!correlationId) {
            throw new Error(`Nie udało się zainicjować operacji: ${opDesc}. Brak CorrelationID w odpowiedzi serwera: ${JSON.stringify(response.data)}`);
        }
        console.debug(`Zainicjowano ${opDesc}, CorrID: ${correlationId}`);
        pollingStatus.value[operationKey].correlationId = correlationId;
        return pollOperation(correlationId, operationKey);
    } catch (initError) {
        pollingStatus.value[operationKey].isLoading = false;
        const errorDetail = initError.response?.data?.error || initError.response?.data?.message || initError.message || `Nie udało się zainicjować operacji: ${opDesc}.`;
        pollingStatus.value[operationKey].error = errorDetail;
        if (operationKey === 'setProvider' || isLoadingInitialData.value) {
            operationMessage.value = errorDetail;
            operationMessageType.value = 'error';
        }
        console.error(`Błąd inicjacji operacji '${opDesc}':`, initError);
        throw new Error(pollingStatus.value[operationKey].error);
    }
};

const fetchInitialProviderData = async () => {
    isLoadingInitialData.value = true;
    loadError.value = '';
    operationMessage.value = '';
    // clearAllPolling(); // Nie czyść tutaj, bo `initiateOperation` to zrobi dla swoich kluczy

    try {
        // Użyj POST dla endpointów inicjujących
        const results = await Promise.allSettled([
            initiateOperation('/api/admin/address-verification/providers/current/initiate', 'currentProvider', null, 'POST'),
            initiateOperation('/api/admin/address-verification/providers/available/initiate', 'availableProviders', null, 'POST')
        ]);

        let hasFulfilledCurrent = false;
        let hasFulfilledAvailable = false;

        if (results[0].status === 'fulfilled') {
            currentProvider.value = results[0].value || 'none';
            selectedProviderToSet.value = currentProvider.value && currentProvider.value !== 'none' ?
                                       currentProvider.value.toLowerCase() : 'none';
            hasFulfilledCurrent = true;
        } else {
            currentProvider.value = 'N/A (błąd)';
            // pollingStatus.currentProvider.error jest już ustawione przez pollOperation
            loadError.value += `Błąd pobierania aktualnego dostawcy: ${pollingStatus.value.currentProvider.error || results[0].reason?.message || 'Nieznany błąd'}. `;
        }

        if (results[1].status === 'fulfilled') {
            availableProviders.value = Array.isArray(results[1].value) ? results[1].value : [];
            hasFulfilledAvailable = true;
        } else {
            availableProviders.value = [];
            loadError.value += `Błąd pobierania listy dostępnych dostawców: ${pollingStatus.value.availableProviders.error || results[1].reason?.message || 'Nieznany błąd'}.`;
        }

        if (hasFulfilledCurrent && hasFulfilledAvailable) {
            operationMessage.value = "Konfiguracja dostawców załadowana pomyślnie.";
            operationMessageType.value = 'success';
        } else if (loadError.value && !isPollingAnyOperation()) { // Pokaż ogólny błąd tylko jeśli nic nie polluje
             operationMessage.value = "Wystąpiły problemy podczas ładowania konfiguracji. Sprawdź błędy poszczególnych operacji.";
             operationMessageType.value = 'error';
        } else if (isPollingAnyOperation()){
            operationMessage.value = "Trwa ładowanie danych..."; // Ogólny komunikat, jeśli coś jeszcze polluje
            operationMessageType.value = 'info';
        }

    } catch (error) { // Ten catch złapie błędy, które nie są PromiseRejectionEvent
        console.error('Krytyczny błąd podczas inicjowania pobierania konfiguracji:', error);
        loadError.value = error.message || 'Nie udało się załadować początkowej konfiguracji.';
        operationMessage.value = loadError.value;
        operationMessageType.value = 'error';
    } finally {
        isLoadingInitialData.value = false;
    }
};

const requestSetProvider = async () => {
  if (!selectedProviderToSet.value || pollingStatus.value.setProvider.isLoading || isPollingAnyOperationExcept('setProvider')) return;
  
  operationMessage.value = ''; 
  operationMessageType.value = '';

  try {
    // Endpoint `/api/admin/address-verification/providers/current` jest POST i przyjmuje String w ciele
    const result = await initiateOperation(
        '/api/admin/address-verification/providers/current', 
        'setProvider',
        selectedProviderToSet.value, // Payload to string
        'POST' 
    );
    // Komunikat sukcesu jest już ustawiany w pollOperation
    await fetchInitialProviderData(); // Odśwież całą konfigurację po sukcesie

  } catch (error) {
    console.error('Błąd podczas ustawiania aktywnego dostawcy:', error);
    // Komunikat błędu jest już ustawiony w pollOperation lub initiateOperation
    if (!operationMessage.value || operationMessageType.value !== 'error') {
        operationMessage.value = error.message || 'Nie udało się ustawić aktywnego dostawcy.';
        operationMessageType.value = 'error';
    }
  }
};

const refreshCurrentProvider = async () => {
    if (isPollingAnyOperation()) return;
    operationMessage.value = '';
    try {
        const result = await initiateOperation('/api/admin/address-verification/providers/current/initiate', 'currentProvider', null, 'POST');
        currentProvider.value = result || 'none';
        selectedProviderToSet.value = currentProvider.value && currentProvider.value !== 'none' ? currentProvider.value.toLowerCase() : 'none';
        operationMessage.value = "Pomyślnie odświeżono aktualnego dostawcę.";
        operationMessageType.value = 'success';
    } catch (error) {
        operationMessage.value = error.message || "Nie udało się odświeżyć aktualnego dostawcy.";
        operationMessageType.value = 'error';
        // Błąd specyficzny dla operacji jest już w pollingStatus.currentProvider.error
    }
};

const refreshAvailableProviders = async () => {
    if (isPollingAnyOperation()) return;
    operationMessage.value = '';
    try {
        const result = await initiateOperation('/api/admin/address-verification/providers/available/initiate', 'availableProviders', null, 'POST');
        availableProviders.value = Array.isArray(result) ? result : [];
        operationMessage.value = "Pomyślnie odświeżono listę dostępnych dostawców.";
        operationMessageType.value = 'success';
    } catch (error) {
        operationMessage.value = error.message || "Nie udało się odświeżyć listy dostępnych dostawców.";
        operationMessageType.value = 'error';
        // Błąd specyficzny dla operacji jest już w pollingStatus.availableProviders.error
    }
};

const getProviderBadgeClass = (providerName) => {
  if (!providerName) return 'bg-slate-400';
  switch (providerName.toLowerCase()) {
    case 'here': return 'bg-blue-600';
    case 'nominatim': return 'bg-green-600';
    case 'maps': return 'bg-yellow-500 text-black';
    case 'none': return 'bg-slate-500';
    default: return 'bg-gray-500';
  }
};

onMounted(() => {
  fetchInitialProviderData();
});

</script>

<style scoped>
.animate-spin {
  animation: spin 1s linear infinite;
}
@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}
</style>
